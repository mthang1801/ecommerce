{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Category/right-side-pagination/right-side-pagination.component.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { PaginationContainer, PageLink } from \"./right-side-pagination.styles\";\nimport { withRouter } from \"react-router-dom\";\nimport { setCurrentPage } from \"../../../redux/category/category.actions\";\nimport { connect } from \"react-redux\";\nimport { generatePagination, listNextExtends, listPrevExtends } from \"../../../utils/algorithms\";\nimport ReactPaginate from \"react-paginate\";\n\nconst Pagination = ({\n  currentPage,\n  numPages,\n  match,\n  history,\n  location,\n  setCurrentPage\n}) => {\n  // const [listPages, setListPages] = useState([]);\n  // let trackMaxListPage = 0;\n  // let trackMinListPage = 0 ;\n  // useEffect(() => {\n  //   let listPages = generatePagination(currentPage, numPages);\n  //   setListPages([...listPages]);\n  // }, [currentPage, numPages])\n  // const movePage = page => {\n  //   const pathName = location.pathname.split(\"/\")[1];\n  //   history.push(`/${pathName}/products?page=${page}`);\n  //   setCurrentPage(page);\n  // }\n  // const handlePageLink = (page) => {    \n  //   if(page === \"nextExtends\"){\n  //     let list = listNextExtends(listPages, currentPage, numPages)\n  //     return setListPages([...list])       \n  //   }else if(page === \"prevExtends\"){\n  //     let list = listPrevExtends(listPages, currentPage, numPages)\n  //     return setListPages([...list])   \n  //   }\n  //   movePage(page);\n  // };\n  // const handleNextPage = e => {\n  //   movePage(currentPage + 1 );\n  // }\n  return /*#__PURE__*/React.createElement(PaginationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ReactPaginate, {\n    previousLabel: \"Prev\",\n    nextLabel: \"Next\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentPage: page => dispatch(setCurrentPage(page))\n});\n\nexport default connect(null, mapDispatchToProps)(withRouter(Pagination));","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Category/right-side-pagination/right-side-pagination.component.jsx"],"names":["React","useState","useEffect","PaginationContainer","PageLink","withRouter","setCurrentPage","connect","generatePagination","listNextExtends","listPrevExtends","ReactPaginate","Pagination","currentPage","numPages","match","history","location","mapDispatchToProps","dispatch","page"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,mBAAT,EAA8BC,QAA9B,QAA8C,gCAA9C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,cAAT,QAA+B,0CAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,EAA6BC,eAA7B,EAA8CC,eAA9C,QAAqE,2BAArE;AACA,OAAOC,aAAP,MAA0B,gBAA1B;;AACA,MAAMC,UAAU,GAAG,CAAC;AAClBC,EAAAA,WADkB;AAElBC,EAAAA,QAFkB;AAGlBC,EAAAA,KAHkB;AAIlBC,EAAAA,OAJkB;AAKlBC,EAAAA,QALkB;AAMlBX,EAAAA;AANkB,CAAD,KAOb;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,aAAD;AACE,IAAA,aAAa,EAAC,MADhB;AAEE,IAAA,SAAS,EAAC,MAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAcD,CAhDD;;AAkDA,MAAMY,kBAAkB,GAAGC,QAAQ,KAAK;AACtCb,EAAAA,cAAc,EAAGc,IAAI,IAAID,QAAQ,CAACb,cAAc,CAACc,IAAD,CAAf;AADK,CAAL,CAAnC;;AAGA,eAAeb,OAAO,CAAC,IAAD,EAAOW,kBAAP,CAAP,CAAkCb,UAAU,CAACO,UAAD,CAA5C,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { PaginationContainer, PageLink } from \"./right-side-pagination.styles\";\nimport { withRouter } from \"react-router-dom\";\nimport { setCurrentPage } from \"../../../redux/category/category.actions\";\nimport { connect } from \"react-redux\";\nimport { generatePagination, listNextExtends, listPrevExtends } from \"../../../utils/algorithms\"\nimport ReactPaginate from \"react-paginate\"\nconst Pagination = ({\n  currentPage,\n  numPages,\n  match,\n  history,\n  location,\n  setCurrentPage,\n}) => {\n  // const [listPages, setListPages] = useState([]);\n  // let trackMaxListPage = 0;\n  // let trackMinListPage = 0 ;\n  // useEffect(() => {\n  //   let listPages = generatePagination(currentPage, numPages);\n  //   setListPages([...listPages]);\n  // }, [currentPage, numPages])\n\n  // const movePage = page => {\n  //   const pathName = location.pathname.split(\"/\")[1];\n  //   history.push(`/${pathName}/products?page=${page}`);\n  //   setCurrentPage(page);\n  // }\n  // const handlePageLink = (page) => {    \n  //   if(page === \"nextExtends\"){\n  //     let list = listNextExtends(listPages, currentPage, numPages)\n  //     return setListPages([...list])       \n  //   }else if(page === \"prevExtends\"){\n  //     let list = listPrevExtends(listPages, currentPage, numPages)\n  //     return setListPages([...list])   \n  //   }\n  //   movePage(page);\n  // };\n  // const handleNextPage = e => {\n  //   movePage(currentPage + 1 );\n  // }\n  return (\n    <PaginationContainer>\n      {/* <PageLink>Về trước</PageLink>\n      {listPages.length &&\n        listPages.map((page) => (\n          <PageLink  onClick={() => handlePageLink(page.to)}>{page.text}</PageLink>\n        ))}\n      <PageLink onClick={handleNextPage}>Tiếp</PageLink> */}\n      <ReactPaginate\n        previousLabel=\"Prev\"\n        nextLabel=\"Next\"\n      />\n    </PaginationContainer>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentPage : page => dispatch(setCurrentPage(page))\n})\nexport default connect(null, mapDispatchToProps)(withRouter(Pagination));\n"]},"metadata":{},"sourceType":"module"}