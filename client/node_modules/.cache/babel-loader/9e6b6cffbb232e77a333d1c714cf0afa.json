{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/HomePage/categories-slider/categories-slider.component.jsx\";\nimport React, { useState, useRef, useEffect, useContext } from \"react\";\nimport { CategoriesSliderContainer, Caption, CategoryItem, CategoryImage, CategoryName } from \"./categories-slider.styles\";\nimport Slider from \"react-slick\";\nimport AppContext from \"../../../context/app-viewport.context\";\nimport { selectCategoryList } from \"../../../redux/home/home.selectors\";\nimport { createStructuredSelector } from \"reselect\";\nimport { connect } from \"react-redux\";\n\nconst CategoriesSlider = ({\n  categoryList\n}) => {\n  const [slide, setSlide] = useState(null);\n  const [mobileView, setMobileView] = useState(window.innerWidth < 600);\n  const [tabletView, setTabletView] = useState(window.innerWidth < 992);\n  const width = useContext(AppContext);\n  let dragging = false;\n  useEffect(() => {\n    if (width < 600) {\n      setMobileView(true);\n    } else {\n      setMobileView(false);\n    }\n\n    if (width < 992) {\n      setTabletView(true);\n    } else {\n      setTabletView(false);\n    }\n  }, [width]);\n  const slideRef = useRef(null);\n  useEffect(() => {\n    setSlide(slideRef.current);\n  }, [slideRef]);\n  let categoriesGroup = [];\n  let categoriesPerPage = [];\n  categoryList.forEach((item, index) => {\n    if (index !== 0 && index % 4 === 0) {\n      categoriesGroup.push(categoriesPerPage);\n      categoriesPerPage = [];\n    }\n\n    categoriesPerPage.push(item);\n\n    if (index === categoryList.length - 1 && index % 4 !== 0) {\n      categoriesGroup.push(categoriesPerPage);\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CategoriesSliderContainer, {\n    mobileView: mobileView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Caption, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"Danh m\\u1EE5c s\\u1EA3n ph\\u1EA9m\"), categoryList.length ? /*#__PURE__*/React.createElement(Slider, {\n    asNavFor: slide,\n    ref: slideRef,\n    slidesToShow: mobileView ? 2 : tabletView ? 3 : 4,\n    swipeToSlide: true,\n    focusOnSelect: false,\n    autoplay: true,\n    pauseOnHover: false,\n    autoplaySpeed: 2000,\n    beforeChange: () => dragging = true,\n    afterChange: () => dragging = false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, categoriesGroup.map(group => group.map(item => {\n    return /*#__PURE__*/React.createElement(CategoryItem, {\n      key: item.id,\n      to: item.linkUrl,\n      onClick: e => dragging && e.preventDefault(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(CategoryImage, {\n      src: `data:${item.imageUrl.mimetype};base64,${item.imageUrl.data}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(CategoryName, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, item.name));\n  }))) : null));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  categoryList: selectCategoryList\n});\nexport default connect(mapStateToProps)(CategoriesSlider);","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/HomePage/categories-slider/categories-slider.component.jsx"],"names":["React","useState","useRef","useEffect","useContext","CategoriesSliderContainer","Caption","CategoryItem","CategoryImage","CategoryName","Slider","AppContext","selectCategoryList","createStructuredSelector","connect","CategoriesSlider","categoryList","slide","setSlide","mobileView","setMobileView","window","innerWidth","tabletView","setTabletView","width","dragging","slideRef","current","categoriesGroup","categoriesPerPage","forEach","item","index","push","length","map","group","id","linkUrl","e","preventDefault","imageUrl","mimetype","data","name","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, useContext } from \"react\";\nimport {\n  CategoriesSliderContainer,\n  Caption,\n  CategoryItem,\n  CategoryImage,\n  CategoryName,\n} from \"./categories-slider.styles\";\nimport Slider from \"react-slick\";\nimport AppContext from \"../../../context/app-viewport.context\";\nimport {selectCategoryList} from \"../../../redux/home/home.selectors\";\nimport {createStructuredSelector} from \"reselect\";\nimport {connect} from \"react-redux\"\nconst CategoriesSlider = ({categoryList}) => {\n  const [slide, setSlide] = useState(null);\n  const [mobileView, setMobileView] = useState(window.innerWidth < 600);\n  const [tabletView, setTabletView] = useState(window.innerWidth < 992);\n  const width = useContext(AppContext);\n  let dragging = false;\n\n\n  useEffect(() => {\n    if (width < 600) {\n      setMobileView(true);\n    } else {\n      setMobileView(false);\n    }\n    if (width < 992) {\n      setTabletView(true);\n    } else {\n      setTabletView(false);\n    }\n  }, [width]);\n  const slideRef = useRef(null);\n  useEffect(() => {\n    setSlide(slideRef.current);\n  }, [slideRef]);\n\n  let categoriesGroup = [];\n  let categoriesPerPage = [];\n  categoryList.forEach((item, index) => {\n    if (index !== 0 && index % 4 === 0) {\n      categoriesGroup.push(categoriesPerPage);\n      categoriesPerPage = [];\n    }\n    categoriesPerPage.push(item);\n    if (index === categoryList.length - 1 && index % 4 !== 0) {\n      categoriesGroup.push(categoriesPerPage);\n    }\n  });\n  return (\n    <React.Fragment>\n      <CategoriesSliderContainer mobileView={mobileView}>\n        <Caption>Danh mục sản phẩm</Caption>\n        {categoryList.length ? (\n          <Slider\n            asNavFor={slide}\n            ref={slideRef}\n            slidesToShow={mobileView ? 2 : tabletView ? 3 : 4}\n            swipeToSlide={true}\n            focusOnSelect={false}\n            autoplay\n            pauseOnHover={false}\n            autoplaySpeed={2000}\n            beforeChange={() => (dragging = true)}\n            afterChange={() => (dragging = false)}\n          >\n            {categoriesGroup.map((group) =>\n              group.map((item) => {\n                return (\n                  <CategoryItem\n                    key={item.id}\n                    to={item.linkUrl}\n                    onClick={(e) => dragging && e.preventDefault()}\n                  >\n                    <CategoryImage\n                      src={`data:${item.imageUrl.mimetype};base64,${item.imageUrl.data}`}\n                    />\n                    <CategoryName>{item.name}</CategoryName>\n                  </CategoryItem>\n                );\n              })\n            )}\n          </Slider>\n        ) : null}\n      </CategoriesSliderContainer>\n    </React.Fragment>\n  );\n};\nconst mapStateToProps = createStructuredSelector({\n  categoryList : selectCategoryList\n})\nexport default connect(mapStateToProps)(CategoriesSlider);\n"]},"metadata":{},"sourceType":"module"}