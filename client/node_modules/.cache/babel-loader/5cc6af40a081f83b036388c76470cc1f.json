{"ast":null,"code":"import categoryActionTypes from \"./category.types\";\nimport axios from \"axios\";\nimport urls from \"../../utils/urls\";\nexport const fetchCategoryStart = () => {\n  return {\n    type: categoryActionTypes.FETCH_CONTENT_LIST_BY_CATEGORY_PATH_URL_START\n  };\n};\nexport const fetchCategorySuccess = ({\n  productTypeList,\n  discountProductList,\n  topRatedProducts,\n  bestSellerProducts,\n  productList,\n  numProducts,\n  numPages\n}) => ({\n  type: categoryActionTypes.FETCH_CONTENT_LIST_BY_CATEGORY_PATH_URL_SUCCESS,\n  payload: {\n    productTypeList,\n    discountProductList,\n    topRatedProducts,\n    bestSellerProducts,\n    productList,\n    numProducts,\n    numPages\n  }\n});\nexport const fetchCategoryFail = err => {\n  return {\n    type: categoryActionTypes.FETCH_CONTENT_LIST_BY_CATEGORY_PATH_URL_FAIL,\n    error: {\n      msg: err.response.data.message,\n      status: err.response.statusCode\n    }\n  };\n};\nexport const fetchCategory = (path, page = 1) => async dispatch => {\n  try {\n    dispatch(fetchCategoryStart());\n    const {\n      data\n    } = await axios.get(urls.GET_CONTENT_LIST_BY_CATEGORY_PATH_URL(path, page));\n    dispatch(fetchCategorySuccess(data));\n  } catch (error) {\n    dispatch(fetchCategoryFail(error));\n  }\n};","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/redux/category/category.actions.js"],"names":["categoryActionTypes","axios","urls","fetchCategoryStart","type","FETCH_CONTENT_LIST_BY_CATEGORY_PATH_URL_START","fetchCategorySuccess","productTypeList","discountProductList","topRatedProducts","bestSellerProducts","productList","numProducts","numPages","FETCH_CONTENT_LIST_BY_CATEGORY_PATH_URL_SUCCESS","payload","fetchCategoryFail","err","FETCH_CONTENT_LIST_BY_CATEGORY_PATH_URL_FAIL","error","msg","response","data","message","status","statusCode","fetchCategory","path","page","dispatch","get","GET_CONTENT_LIST_BY_CATEGORY_PATH_URL"],"mappings":"AAAA,OAAOA,mBAAP,MAAgC,kBAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAO,MAAMC,kBAAkB,GAAG,MAAM;AACtC,SAAO;AACLC,IAAAA,IAAI,EAAEJ,mBAAmB,CAACK;AADrB,GAAP;AAGD,CAJM;AAKP,OAAO,MAAMC,oBAAoB,GAAG,CAAC;AACnCC,EAAAA,eADmC;AAEnCC,EAAAA,mBAFmC;AAGnCC,EAAAA,gBAHmC;AAInCC,EAAAA,kBAJmC;AAKnCC,EAAAA,WALmC;AAMnCC,EAAAA,WANmC;AAOnCC,EAAAA;AAPmC,CAAD,MAQ7B;AACLT,EAAAA,IAAI,EAAEJ,mBAAmB,CAACc,+CADrB;AAELC,EAAAA,OAAO,EAAE;AACPR,IAAAA,eADO;AAEPC,IAAAA,mBAFO;AAGPC,IAAAA,gBAHO;AAIPC,IAAAA,kBAJO;AAKPC,IAAAA,WALO;AAMPC,IAAAA,WANO;AAOPC,IAAAA;AAPO;AAFJ,CAR6B,CAA7B;AAoBP,OAAO,MAAMG,iBAAiB,GAAIC,GAAD,IAAS;AACxC,SAAO;AACLb,IAAAA,IAAI,EAAEJ,mBAAmB,CAACkB,4CADrB;AAELC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,GAAG,EAAEH,GAAG,CAACI,QAAJ,CAAaC,IAAb,CAAkBC,OAAzB;AAAkCC,MAAAA,MAAM,EAAEP,GAAG,CAACI,QAAJ,CAAaI;AAAvD;AAFF,GAAP;AAID,CALM;AAOP,OAAO,MAAMC,aAAa,GAAG,CAACC,IAAD,EAAOC,IAAI,GAAG,CAAd,KAAoB,MAAOC,QAAP,IAAoB;AACnE,MAAI;AACFA,IAAAA,QAAQ,CAAC1B,kBAAkB,EAAnB,CAAR;AACA,UAAM;AAAEmB,MAAAA;AAAF,QAAW,MAAMrB,KAAK,CAAC6B,GAAN,CACrB5B,IAAI,CAAC6B,qCAAL,CAA2CJ,IAA3C,EAAiDC,IAAjD,CADqB,CAAvB;AAGAC,IAAAA,QAAQ,CAACvB,oBAAoB,CAACgB,IAAD,CAArB,CAAR;AACD,GAND,CAME,OAAOH,KAAP,EAAc;AACdU,IAAAA,QAAQ,CAACb,iBAAiB,CAACG,KAAD,CAAlB,CAAR;AACD;AACF,CAVM","sourcesContent":["import categoryActionTypes from \"./category.types\";\nimport axios from \"axios\";\nimport urls from \"../../utils/urls\";\nexport const fetchCategoryStart = () => {\n  return {\n    type: categoryActionTypes.FETCH_CONTENT_LIST_BY_CATEGORY_PATH_URL_START,\n  };\n};\nexport const fetchCategorySuccess = ({\n  productTypeList,\n  discountProductList,\n  topRatedProducts,\n  bestSellerProducts,\n  productList,\n  numProducts,\n  numPages,\n}) => ({\n  type: categoryActionTypes.FETCH_CONTENT_LIST_BY_CATEGORY_PATH_URL_SUCCESS,\n  payload: {\n    productTypeList,\n    discountProductList,\n    topRatedProducts,\n    bestSellerProducts,\n    productList,\n    numProducts,\n    numPages,\n  },\n});\nexport const fetchCategoryFail = (err) => {\n  return {\n    type: categoryActionTypes.FETCH_CONTENT_LIST_BY_CATEGORY_PATH_URL_FAIL,\n    error: { msg: err.response.data.message, status: err.response.statusCode },\n  };\n};\n\nexport const fetchCategory = (path, page = 1) => async (dispatch) => {\n  try {\n    dispatch(fetchCategoryStart());\n    const { data } = await axios.get(\n      urls.GET_CONTENT_LIST_BY_CATEGORY_PATH_URL(path, page)\n    );\n    dispatch(fetchCategorySuccess(data));\n  } catch (error) {\n    dispatch(fetchCategoryFail(error));\n  }\n};\n"]},"metadata":{},"sourceType":"module"}