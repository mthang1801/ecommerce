{"ast":null,"code":"import productCommentReviewActionTypes from \"./product-comment-review.types\";\nimport axios from \"axios\";\nimport urls from \"../../utils/urls\";\n\nconst fetchProductCommentReviewStart = () => ({\n  type: productCommentReviewActionTypes.FETCH_PRODUCT_COMMENT_REVIEW_START\n});\n\nconst fetchProductCommentReviewSuccess = (comments, responses, numberOfComments) => {\n  return {\n    type: productCommentReviewActionTypes.FETCH_PRODUCT_COMMENT_REVIEW_SUCCESS,\n    payload: {\n      comments,\n      responses,\n      numberOfComments\n    }\n  };\n};\n\nconst fetchProductCommentReviewFail = err => ({\n  type: productCommentReviewActionTypes.FETCH_PRODUCT_COMMENT_REVIEW_FAIL,\n  payload: {\n    msg: err.response.data.message,\n    status: err.response.status\n  }\n});\n\nexport const fetchProductCommentReview = productId => async dispatch => {\n  try {\n    dispatch(fetchProductCommentReviewStart());\n    const {\n      data: {\n        comments,\n        responses,\n        numberOfComments\n      }\n    } = await axios.get(urls.GET_PRODUCT_COMMENT_REVIEWS(productId));\n    dispatch(fetchProductCommentReviewSuccess(comments, responses, numberOfComments));\n  } catch (error) {\n    dispatch(fetchProductCommentReviewFail(error));\n  }\n};\nexport const setLikeForComment = (commentId, userId) => ({\n  type: productCommentReviewActionTypes.SET_LIKE_FOR_COMMENT,\n  payload: {\n    commentId,\n    userId\n  }\n});\nexport const setUnlikeForComment = (commentId, userId) => ({\n  type: productCommentReviewActionTypes.SET_UNLIKE_FOR_COMMENT,\n  payload: {\n    commentId,\n    userId\n  }\n});\nexport const postLikeOrUnlikeComment = (commentId, userId) => async (dispatch) => {\n  try {\n    const {\n      data\n    } = await axios.post(urls.POST_LIKE_OR_UNLIKE_COMMENT(commentId));\n    console.log(data);\n\n    if (data.msg == \"like success\") {\n      dispatch(setLikeForComment(commentId, userId));\n    } else {\n      dispatch(setUnlikeForComment(commentId, userId));\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const setDislikeForComment = (commentId, userId) => ({\n  type: productCommentReviewActionTypes.SET_DISLIKE_FOR_COMMENT,\n  payload: {\n    commentId,\n    userId\n  }\n});\nexport const setUndislikeForComment = (commentId, userId) => ({\n  type: productCommentReviewActionTypes.SET_UNDISLIKE_FOR_COMMENT,\n  payload: {\n    commentId,\n    userId\n  }\n});\nexport const postDislikeOrUndislikeComment = (commentId, userId) => async (dispatch) => {\n  try {\n    const {\n      data\n    } = await axios.post(urls.POST_DISLIKE_OR_UNDISLIKE_COMMENT(commentId));\n\n    if (data.msg == \"dislike success\") {\n      dispatch(setDislikeForComment(commentId, userId));\n    } else {\n      dispatch(setUndislikeForComment(commentId, userId));\n    }\n  } catch (error) {\n    console.log(error.response.data.message);\n  }\n};\nexport const setResponseComment = (commentId, response) => ({\n  type: productCommentReviewActionTypes.SET_RESPONSE_COMMENT,\n  payload: {\n    commentId,\n    response\n  }\n});\nexport const postResponseComment = (commentId, text) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axios.post(urls.POST_RESPONSE_COMMENT(commentId), {\n      text\n    });\n    dispatch(setResponseComment(commentId, data));\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const setLikeForResponseComment = (responseId, userId) => ({\n  type: productCommentReviewActionTypes.SET_LIKE_FOR_RESPONSE_COMMENT,\n  payload: {\n    responseId,\n    userId\n  }\n});\nexport const setUnlikeForResponseComment = (responseId, userId) => ({\n  type: productCommentReviewActionTypes.SET_UNLIKE_FOR_RESPONSE_COMMENT,\n  payload: {\n    responseId,\n    userId\n  }\n});\nexport const postLikeOrUnlikeResponseComment = (responseId, userId) => async (dispatch) => {\n  try {\n    console.log(responseId, userId);\n    const {\n      data\n    } = await axios.post(urls.POST_LIKE_OR_UNLIKE_RESPONSE_COMMENT(responseId));\n\n    if (data.msg === \"like success\") {\n      dispatch(setLikeForResponseComment(responseId, userId));\n    } else {\n      dispatch(setUnlikeForResponseComment(responseId, userId));\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const setDislikeForResponseComment = (responseId, userId) => ({\n  type: productCommentReviewActionTypes.SET_DISLIKE_FOR_RESPONSE_COMMENT,\n  payload: {\n    responseId,\n    userId\n  }\n});\nexport const setUndislikeForResponseComment = (responseId, userId) => ({\n  type: productCommentReviewActionTypes.SET_UNDISLIKE_FOR_RESPONSE_COMMENT,\n  payload: {\n    responseId,\n    userId\n  }\n});\nexport const postDislikeOrUndislikeResponseComment = (responseId, userId) => async dispatch => {\n  try {\n    console.log(responseId, userId);\n    const {\n      data\n    } = await axios.post(urls.POST_DISLIKE_OR_UNDISLIKE_RESPONSE_COMMENT(responseId));\n\n    if (data.msg === \"dislike success\") {\n      dispatch(setDislikeForResponseComment(responseId, userId));\n    } else {\n      dispatch(setUndislikeForResponseComment(responseId, userId));\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const setResponseToResponseComment = (commentId, userId, response) => ({\n  type: productCommentReviewActionTypes.SET_RESPONSE_TO_RESPONSE_COMMENT,\n  payload: {\n    responseId,\n    response\n  }\n});\nexport const postResponseToResponseComment = (commentId, responseId, userId, text) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axios.post(urls.POST_RESPONSE_TO_REPONSE_COMMENT(responseId), {\n      text\n    });\n    dispatch(setResponseToResponseComment(commentId, userId, data));\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/redux/product-comment-review/product-comment-review.actions.js"],"names":["productCommentReviewActionTypes","axios","urls","fetchProductCommentReviewStart","type","FETCH_PRODUCT_COMMENT_REVIEW_START","fetchProductCommentReviewSuccess","comments","responses","numberOfComments","FETCH_PRODUCT_COMMENT_REVIEW_SUCCESS","payload","fetchProductCommentReviewFail","err","FETCH_PRODUCT_COMMENT_REVIEW_FAIL","msg","response","data","message","status","fetchProductCommentReview","productId","dispatch","get","GET_PRODUCT_COMMENT_REVIEWS","error","setLikeForComment","commentId","userId","SET_LIKE_FOR_COMMENT","setUnlikeForComment","SET_UNLIKE_FOR_COMMENT","postLikeOrUnlikeComment","post","POST_LIKE_OR_UNLIKE_COMMENT","console","log","setDislikeForComment","SET_DISLIKE_FOR_COMMENT","setUndislikeForComment","SET_UNDISLIKE_FOR_COMMENT","postDislikeOrUndislikeComment","POST_DISLIKE_OR_UNDISLIKE_COMMENT","setResponseComment","SET_RESPONSE_COMMENT","postResponseComment","text","POST_RESPONSE_COMMENT","setLikeForResponseComment","responseId","SET_LIKE_FOR_RESPONSE_COMMENT","setUnlikeForResponseComment","SET_UNLIKE_FOR_RESPONSE_COMMENT","postLikeOrUnlikeResponseComment","POST_LIKE_OR_UNLIKE_RESPONSE_COMMENT","setDislikeForResponseComment","SET_DISLIKE_FOR_RESPONSE_COMMENT","setUndislikeForResponseComment","SET_UNDISLIKE_FOR_RESPONSE_COMMENT","postDislikeOrUndislikeResponseComment","POST_DISLIKE_OR_UNDISLIKE_RESPONSE_COMMENT","setResponseToResponseComment","SET_RESPONSE_TO_RESPONSE_COMMENT","postResponseToResponseComment","POST_RESPONSE_TO_REPONSE_COMMENT"],"mappings":"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","sourcesContent":["import productCommentReviewActionTypes from \"./product-comment-review.types\";\nimport axios from \"axios\";\nimport urls from \"../../utils/urls\";\nconst fetchProductCommentReviewStart = () => ({\n  type: productCommentReviewActionTypes.FETCH_PRODUCT_COMMENT_REVIEW_START,\n});\n\nconst fetchProductCommentReviewSuccess = (\n  comments,\n  responses,\n  numberOfComments\n) => {\n  return {\n    type: productCommentReviewActionTypes.FETCH_PRODUCT_COMMENT_REVIEW_SUCCESS,\n    payload: {\n      comments,\n      responses,\n      numberOfComments,\n    },\n  };\n};\n\nconst fetchProductCommentReviewFail = (err) => ({\n  type: productCommentReviewActionTypes.FETCH_PRODUCT_COMMENT_REVIEW_FAIL,\n  payload: { msg: err.response.data.message, status: err.response.status },\n});\n\nexport const fetchProductCommentReview = (productId) => async (dispatch) => {\n  try {\n    dispatch(fetchProductCommentReviewStart());\n    const {\n      data: { comments, responses, numberOfComments },\n    } = await axios.get(urls.GET_PRODUCT_COMMENT_REVIEWS(productId));\n\n    dispatch(\n      fetchProductCommentReviewSuccess(comments, responses, numberOfComments)\n    );\n  } catch (error) {\n    dispatch(fetchProductCommentReviewFail(error));\n  }\n};\n\nexport const setLikeForComment = (commentId, userId) => ({\n  type: productCommentReviewActionTypes.SET_LIKE_FOR_COMMENT,\n  payload: { commentId, userId },\n});\n\nexport const setUnlikeForComment = (commentId, userId) => ({\n  type: productCommentReviewActionTypes.SET_UNLIKE_FOR_COMMENT,\n  payload: { commentId, userId },\n});\nexport const postLikeOrUnlikeComment = (commentId, userId) => async (\n  dispatch\n) => {\n  try {\n    const { data } = await axios.post(\n      urls.POST_LIKE_OR_UNLIKE_COMMENT(commentId)\n    );\n    console.log(data);\n    if (data.msg == \"like success\") {\n      dispatch(setLikeForComment(commentId, userId));\n    } else {\n      dispatch(setUnlikeForComment(commentId, userId));\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const setDislikeForComment = (commentId, userId) => ({\n  type: productCommentReviewActionTypes.SET_DISLIKE_FOR_COMMENT,\n  payload: { commentId, userId },\n});\n\nexport const setUndislikeForComment = (commentId, userId) => ({\n  type: productCommentReviewActionTypes.SET_UNDISLIKE_FOR_COMMENT,\n  payload: { commentId, userId },\n});\nexport const postDislikeOrUndislikeComment = (commentId, userId) => async (\n  dispatch\n) => {\n  try {\n    const { data } = await axios.post(\n      urls.POST_DISLIKE_OR_UNDISLIKE_COMMENT(commentId)\n    );\n\n    if (data.msg == \"dislike success\") {\n      dispatch(setDislikeForComment(commentId, userId));\n    } else {\n      dispatch(setUndislikeForComment(commentId, userId));\n    }\n  } catch (error) {\n    console.log(error.response.data.message);\n  }\n};\n\nexport const setResponseComment = (commentId, response) => ({\n  type: productCommentReviewActionTypes.SET_RESPONSE_COMMENT,\n  payload: { commentId, response },\n});\n\nexport const postResponseComment = (commentId, text) => async (dispatch) => {\n  try {\n    const { data } = await axios.post(urls.POST_RESPONSE_COMMENT(commentId), {\n      text,\n    });\n    dispatch(setResponseComment(commentId, data));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const setLikeForResponseComment = (responseId, userId) => ({\n  type: productCommentReviewActionTypes.SET_LIKE_FOR_RESPONSE_COMMENT,\n  payload: { responseId, userId },\n});\n\nexport const setUnlikeForResponseComment = (responseId, userId) => ({\n  type: productCommentReviewActionTypes.SET_UNLIKE_FOR_RESPONSE_COMMENT,\n  payload: { responseId, userId },\n});\n\nexport const postLikeOrUnlikeResponseComment = (responseId, userId) => async (\n  dispatch\n) => {\n  try {\n    console.log(responseId, userId);\n    const { data } = await axios.post(\n      urls.POST_LIKE_OR_UNLIKE_RESPONSE_COMMENT(responseId)\n    );\n    if (data.msg === \"like success\") {\n      dispatch(setLikeForResponseComment(responseId, userId));\n    } else {\n      dispatch(setUnlikeForResponseComment(responseId, userId));\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const setDislikeForResponseComment = (responseId, userId) => ({\n  type: productCommentReviewActionTypes.SET_DISLIKE_FOR_RESPONSE_COMMENT,\n  payload: { responseId, userId },\n});\n\nexport const setUndislikeForResponseComment = (responseId, userId) => ({\n  type: productCommentReviewActionTypes.SET_UNDISLIKE_FOR_RESPONSE_COMMENT,\n  payload: { responseId, userId },\n});\nexport const postDislikeOrUndislikeResponseComment = (\n  responseId,\n  userId\n) => async (dispatch) => {\n  try {\n    console.log(responseId, userId);\n    const { data } = await axios.post(\n      urls.POST_DISLIKE_OR_UNDISLIKE_RESPONSE_COMMENT(responseId)\n    );\n    if (data.msg === \"dislike success\") {\n      dispatch(setDislikeForResponseComment(responseId, userId));\n    } else {\n      dispatch(setUndislikeForResponseComment(responseId, userId));\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const setResponseToResponseComment = (commentId, userId, response) => ({\n  type: productCommentReviewActionTypes.SET_RESPONSE_TO_RESPONSE_COMMENT,\n  payload: { responseId, response },\n});\n\nexport const postResponseToResponseComment = (\n  commentId,\n  responseId,\n  userId,\n  text\n) => async (dispatch) => {\n  try {\n    const { data } = await axios.post(\n      urls.POST_RESPONSE_TO_REPONSE_COMMENT(responseId),\n      {\n        text,\n      }\n    );\n    dispatch(setResponseToResponseComment(commentId, userId, data));\n  } catch (error) {\n    console.log(error);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}