{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Category/right-side-pagination/right-side-pagination.component.jsx\";\nimport React, { useState } from \"react\";\nimport { PaginationContainer, PageLink } from \"./right-side-pagination.styles\";\nimport { withRouter } from \"react-router-dom\";\nimport { setCurrentPage } from \"../../../redux/category/category.actions\";\nimport { connect } from \"react-redux\";\nimport { generatePagination } from \"../../../utils/algorithms\";\n\nconst Pagination = ({\n  currentPage,\n  numPages,\n  match,\n  history,\n  location,\n  setCurrentPage\n}) => {\n  let trackMaxListPage = 0;\n  let trackMinListPage = 0;\n  let listPages = generatePagination(currentPage, numPages);\n\n  const movePage = page => {\n    const pathName = location.pathname.split(\"/\")[1];\n    history.push(`/${pathName}/products?page=${page}`);\n    setCurrentPage(page);\n  };\n\n  const handlePageLink = page => {\n    if (page === \"nextExtends\") {\n      console.log(listPages);\n      let maxListPage = listPages[listPages.length - 3].to;\n\n      if (maxListPage + 3 < numPages) {\n        for (let i = maxListPage + 1; i <= maxListPage + 3; i++) {\n          listPages.splice(listPages.length - 2, 0, {\n            to: i,\n            text: i\n          });\n        }\n      } else {\n        for (let i = maxListPage + 1; i <= numPages; i++) {\n          listPages.splice(listPages.length - 2, 0, {\n            to: i,\n            text: i\n          });\n        }\n      }\n\n      return;\n    }\n\n    movePage(page);\n  };\n\n  const handleNextPage = e => {\n    movePage(currentPage + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(PaginationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PageLink, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"V\\u1EC1 tr\\u01B0\\u1EDBc\"), listPages.length && listPages.map(page => /*#__PURE__*/React.createElement(PageLink, {\n    onClick: () => handlePageLink(page.to),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, page.text)), /*#__PURE__*/React.createElement(PageLink, {\n    onClick: handleNextPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Ti\\u1EBFp\"));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentPage: page => dispatch(setCurrentPage(page))\n});\n\nexport default connect(null, mapDispatchToProps)(withRouter(Pagination));","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Category/right-side-pagination/right-side-pagination.component.jsx"],"names":["React","useState","PaginationContainer","PageLink","withRouter","setCurrentPage","connect","generatePagination","Pagination","currentPage","numPages","match","history","location","trackMaxListPage","trackMinListPage","listPages","movePage","page","pathName","pathname","split","push","handlePageLink","console","log","maxListPage","length","to","i","splice","text","handleNextPage","e","map","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { PaginationContainer, PageLink } from \"./right-side-pagination.styles\";\nimport { withRouter } from \"react-router-dom\";\nimport { setCurrentPage } from \"../../../redux/category/category.actions\";\nimport { connect } from \"react-redux\";\nimport { generatePagination } from \"../../../utils/algorithms\"\nconst Pagination = ({\n  currentPage,\n  numPages,\n  match,\n  history,\n  location,\n  setCurrentPage,\n}) => {\n \n  let trackMaxListPage = 0;\n  let trackMinListPage = 0 ;\n  let listPages = generatePagination(currentPage, numPages);\n  const movePage = page => {\n    const pathName = location.pathname.split(\"/\")[1];\n    history.push(`/${pathName}/products?page=${page}`);\n    setCurrentPage(page);\n  }\n  const handlePageLink = (page) => {\n    if(page === \"nextExtends\"){\n      console.log(listPages)\n      let maxListPage = listPages[listPages.length-3].to;\n      if(maxListPage + 3 < numPages){\n        for(let i = maxListPage +1 ; i <= maxListPage + 3 ; i++){\n          listPages.splice(listPages.length-2,0,{to : i, text : i});\n        }\n      }else{\n        for (let i = maxListPage + 1 ; i <= numPages ; i++){\n          listPages.splice(listPages.length-2,0,{to : i, text : i});\n        }\n      }\n      return ; \n    }\n    movePage(page);\n  };\n  const handleNextPage = e => {\n    movePage(currentPage + 1 );\n  }\n  return (\n    <PaginationContainer>\n      <PageLink>Về trước</PageLink>\n      {listPages.length &&\n        listPages.map((page) => (\n          <PageLink  onClick={() => handlePageLink(page.to)}>{page.text}</PageLink>\n        ))}\n      <PageLink onClick={handleNextPage}>Tiếp</PageLink>\n    </PaginationContainer>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentPage : page => dispatch(setCurrentPage(page))\n})\nexport default connect(null, mapDispatchToProps)(withRouter(Pagination));\n"]},"metadata":{},"sourceType":"module"}