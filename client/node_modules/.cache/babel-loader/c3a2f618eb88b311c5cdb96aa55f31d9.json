{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Product-Detail/comment-reviews/comment-reviews.component.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { getCommentReviewsByProductId } from \"../../../utils/connectDB\";\nimport Spinner from \"../../UI/spinner/spinner.component\";\nimport { CommentReviewsWrapper, TextArea, CommentsWrapper } from \"./comment-reviews.styles\";\nimport CommentReviewsItem from \"../comment-reviews-item/comment-reviews-item.component\";\nimport Button from \"@material-ui/core/Button\";\nimport { connect } from \"react-redux\";\nimport { selectCommentsLoading, selectComments, selectCommentReviewsError } from \"../../../redux/product-comment-review/product-comment-review.selectors\";\nimport { createStructuredSelector } from \"reselect\";\nimport { fetchProductReview } from \"../../../redux/product-comment-review/product-comment-review.actions\";\n\nconst CommentReviews = ({\n  show,\n  productId,\n  comments,\n  loading,\n  error,\n  fetchProductReview\n}) => {\n  useEffect(() => {\n    let _mounted = true;\n\n    if (productId) {\n      setLoading(true);\n      getCommentReviewsByProductId(productId).then(data => {\n        if (_mounted) {\n          setComments(data.comments);\n          setLoading(false);\n        }\n      }).catch(err => {\n        if (_mounted) {\n          setError(err);\n          setLoading(false);\n        }\n      });\n    }\n\n    return () => {\n      _mounted = false;\n    };\n  }, [productId]);\n  console.log(comments);\n  return /*#__PURE__*/React.createElement(CommentReviewsWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Spinner, {\n    loadChildComponent: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    placeholder: \"\\u0110\\u1EC3 l\\u1EA1i b\\xECnh lu\\u1EADn c\\u1EE7a b\\u1EA1n t\\u1EA1i \\u0111\\xE2y\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, \"G\\u1EEDi\"), /*#__PURE__*/React.createElement(CommentsWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, comments.length ? comments.map(comment => {\n    console.log(comment);\n    return /*#__PURE__*/React.createElement(CommentReviewsItem, {\n      key: comment._id,\n      comment: comment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    });\n  }) : null)));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  comments: selectComments,\n  loading: selectCommentsLoading,\n  error: selectCommentReviewsError\n});\n\nconst mapDispatchToProps = dispatch => {\n  fetchProductReview: productId => dispatch(fetchProductReview(productId));\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentReviews);","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Product-Detail/comment-reviews/comment-reviews.component.jsx"],"names":["React","useEffect","useState","getCommentReviewsByProductId","Spinner","CommentReviewsWrapper","TextArea","CommentsWrapper","CommentReviewsItem","Button","connect","selectCommentsLoading","selectComments","selectCommentReviewsError","createStructuredSelector","fetchProductReview","CommentReviews","show","productId","comments","loading","error","_mounted","setLoading","then","data","setComments","catch","err","setError","console","log","length","map","comment","_id","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { getCommentReviewsByProductId } from \"../../../utils/connectDB\";\nimport Spinner from \"../../UI/spinner/spinner.component\";\nimport {\n  CommentReviewsWrapper,\n  TextArea,\n  CommentsWrapper,\n} from \"./comment-reviews.styles\";\nimport CommentReviewsItem from \"../comment-reviews-item/comment-reviews-item.component\";\nimport Button from \"@material-ui/core/Button\";\nimport {connect} from \"react-redux\";\nimport {selectCommentsLoading, selectComments, selectCommentReviewsError} from \"../../../redux/product-comment-review/product-comment-review.selectors\"\nimport {createStructuredSelector} from \"reselect\"\nimport {fetchProductReview} from \"../../../redux/product-comment-review/product-comment-review.actions\"\nconst CommentReviews = ({ show, productId, comments, loading, error, fetchProductReview }) => {    \n  \n  useEffect(() => {\n    let _mounted = true;\n    if (productId) {\n      setLoading(true);\n      getCommentReviewsByProductId(productId)\n        .then((data) => {\n          if (_mounted) {\n            setComments(data.comments);\n            setLoading(false);\n          }\n        })\n        .catch((err) => {\n          if (_mounted) {\n            setError(err);\n            setLoading(false);\n          }\n        });\n    }\n    return () => {\n      _mounted = false;\n    };\n  }, [productId]);\n  console.log(comments);\n  return (\n    <CommentReviewsWrapper>\n      {loading ? (\n        <Spinner loadChildComponent />\n      ) : (\n        <React.Fragment>\n          <TextArea placeholder=\"Để lại bình luận của bạn tại đây\" />\n          <Button color=\"primary\" variant=\"contained\" size=\"small\">\n            Gửi\n          </Button>\n          <CommentsWrapper>\n            {comments.length ? comments.map((comment) => {\n                  console.log(comment);\n                  return (\n                    <CommentReviewsItem key={comment._id} comment={comment} />\n                  );\n                })\n               : null }\n          </CommentsWrapper>\n        </React.Fragment>\n      )}\n    </CommentReviewsWrapper>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  comments : selectComments,\n  loading : selectCommentsLoading,\n  error : selectCommentReviewsError\n})\nconst mapDispatchToProps = dispatch => {\n  fetchProductReview : (productId) => dispatch(fetchProductReview(productId))\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentReviews);\n"]},"metadata":{},"sourceType":"module"}