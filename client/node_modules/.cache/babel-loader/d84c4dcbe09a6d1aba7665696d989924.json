{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Checkout/checkout-overview/checkout-overview.component.jsx\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { CheckoutOverviewContainer, Title, CheckoutPreview, Grid } from \"./checkout-overview.styles\";\nimport UpdateUserForm from \"../update-user-form/update-user-form.component\";\nimport CheckoutForm from \"../check-out-form/check-out-form.component\";\nimport OrderForm from \"../order-form/order-form.component\";\nimport AppContext from \"../../../context/app-viewport.context\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectCurrentUser, selectUserLoading } from \"../../../redux/user/user.selectors\";\nimport { selectCountItem } from \"../../../redux/cart/cart.selectors\";\nimport { connect } from \"react-redux\";\nimport { Redirect, withRouter } from \"react-router-dom\";\n\nconst CheckoutOverview = ({\n  currentUser,\n  match,\n  countItem,\n  loading\n}) => {\n  const [mobileView, setMobileView] = useState(window.innerWidth < 768);\n  const [tabletView, setTabletView] = useState(window.innerWidth < 992 && window.innerWidth >= 768);\n  const width = useContext(AppContext);\n  useEffect(() => {\n    if (width < 768) {\n      setMobileView(true);\n    } else {\n      setMobileView(false);\n    }\n\n    if (width < 992 && width >= 768) {\n      setTabletView(true);\n    } else {\n      setTabletView(false);\n    }\n  }, [width]);\n  const [showOrder, setShowOrder] = useState(false);\n  return /*#__PURE__*/React.createElement(CheckoutOverviewContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CheckoutPreview, {\n    mobileView: mobileView,\n    tabletView: tabletView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    w60: true,\n    mobileView: mobileView,\n    tabletView: tabletView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CheckoutForm, {\n    currentUser: currentUser,\n    showOrder: showOrder,\n    setShowOrder: setShowOrder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  })), showOrder && /*#__PURE__*/React.createElement(Grid, {\n    mobileView: mobileView,\n    tabletView: tabletView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 24\n    }\n  }, /*#__PURE__*/React.createElement(OrderForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }))));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  countItem: selectCountItem,\n  loading: selectUserLoading\n});\nexport default connect(mapStateToProps)(withRouter(CheckoutOverview));","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Checkout/checkout-overview/checkout-overview.component.jsx"],"names":["React","useState","useEffect","useContext","CheckoutOverviewContainer","Title","CheckoutPreview","Grid","UpdateUserForm","CheckoutForm","OrderForm","AppContext","createStructuredSelector","selectCurrentUser","selectUserLoading","selectCountItem","connect","Redirect","withRouter","CheckoutOverview","currentUser","match","countItem","loading","mobileView","setMobileView","window","innerWidth","tabletView","setTabletView","width","showOrder","setShowOrder","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SACEC,yBADF,EAEEC,KAFF,EAGEC,eAHF,EAIEC,IAJF,QAKO,4BALP;AAMA,OAAOC,cAAP,MAA2B,gDAA3B;AACA,OAAOC,YAAP,MAAyB,4CAAzB;AAEA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SACEC,iBADF,EAEEC,iBAFF,QAGO,oCAHP;AAIA,SAASC,eAAT,QAAgC,oCAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,kBAArC;;AACA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,KAAf;AAAsBC,EAAAA,SAAtB;AAAiCC,EAAAA;AAAjC,CAAD,KAAgD;AACvE,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BxB,QAAQ,CAACyB,MAAM,CAACC,UAAP,GAAoB,GAArB,CAA5C;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8B5B,QAAQ,CAC1CyB,MAAM,CAACC,UAAP,GAAoB,GAApB,IAA2BD,MAAM,CAACC,UAAP,IAAqB,GADN,CAA5C;AAGA,QAAMG,KAAK,GAAG3B,UAAU,CAACQ,UAAD,CAAxB;AACAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI4B,KAAK,GAAG,GAAZ,EAAiB;AACfL,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD,KAFD,MAEO;AACLA,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD;;AACD,QAAIK,KAAK,GAAG,GAAR,IAAeA,KAAK,IAAI,GAA5B,EAAiC;AAC/BD,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD,KAFD,MAEO;AACLA,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD;AACF,GAXQ,EAWN,CAACC,KAAD,CAXM,CAAT;AAYA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4B/B,QAAQ,CAAC,KAAD,CAA1C;AACA,sBACE,oBAAC,yBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAiB,IAAA,UAAU,EAAEuB,UAA7B;AAAyC,IAAA,UAAU,EAAEI,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,GAAG,MAAT;AAAU,IAAA,UAAU,EAAEJ,UAAtB;AAAkC,IAAA,UAAU,EAAEI,UAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,WAAW,EAAER,WAA3B;AAAwC,IAAA,SAAS,EAAEW,SAAnD;AAA8D,IAAA,YAAY,EAAEC,YAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIGD,SAAS,iBAAK,oBAAC,IAAD;AAAM,IAAA,UAAU,EAAEP,UAAlB;AAA8B,IAAA,UAAU,EAAEI,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACb,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADa,CAJjB,CADF,CADF;AAaD,CAhCD;;AAiCA,MAAMK,eAAe,GAAGrB,wBAAwB,CAAC;AAC/CQ,EAAAA,WAAW,EAAEP,iBADkC;AAE/CS,EAAAA,SAAS,EAAEP,eAFoC;AAG/CQ,EAAAA,OAAO,EAAET;AAHsC,CAAD,CAAhD;AAKA,eAAeE,OAAO,CAACiB,eAAD,CAAP,CAAyBf,UAAU,CAACC,gBAAD,CAAnC,CAAf","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport {\n  CheckoutOverviewContainer,\n  Title,\n  CheckoutPreview,\n  Grid,\n} from \"./checkout-overview.styles\";\nimport UpdateUserForm from \"../update-user-form/update-user-form.component\";\nimport CheckoutForm from \"../check-out-form/check-out-form.component\";\n\nimport OrderForm from \"../order-form/order-form.component\";\nimport AppContext from \"../../../context/app-viewport.context\";\nimport { createStructuredSelector } from \"reselect\";\nimport {\n  selectCurrentUser,\n  selectUserLoading,\n} from \"../../../redux/user/user.selectors\";\nimport { selectCountItem } from \"../../../redux/cart/cart.selectors\";\nimport { connect } from \"react-redux\";\nimport { Redirect, withRouter } from \"react-router-dom\";\nconst CheckoutOverview = ({ currentUser, match, countItem, loading }) => {\n  const [mobileView, setMobileView] = useState(window.innerWidth < 768);\n  const [tabletView, setTabletView] = useState(\n    window.innerWidth < 992 && window.innerWidth >= 768\n  );\n  const width = useContext(AppContext);\n  useEffect(() => {\n    if (width < 768) {\n      setMobileView(true);\n    } else {\n      setMobileView(false);\n    }\n    if (width < 992 && width >= 768) {\n      setTabletView(true);\n    } else {\n      setTabletView(false);\n    }\n  }, [width]);\n  const [showOrder, setShowOrder] = useState(false);\n  return (\n    <CheckoutOverviewContainer>     \n      <CheckoutPreview mobileView={mobileView} tabletView={tabletView}>\n        <Grid w60 mobileView={mobileView} tabletView={tabletView}>\n          <CheckoutForm currentUser={currentUser} showOrder={showOrder} setShowOrder={setShowOrder}/>\n        </Grid>\n        {showOrder &&  <Grid mobileView={mobileView} tabletView={tabletView}>\n          <OrderForm />\n        </Grid>}\n       \n      </CheckoutPreview>\n    </CheckoutOverviewContainer>\n  );\n};\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  countItem: selectCountItem,\n  loading: selectUserLoading,\n});\nexport default connect(mapStateToProps)(withRouter(CheckoutOverview));\n"]},"metadata":{},"sourceType":"module"}