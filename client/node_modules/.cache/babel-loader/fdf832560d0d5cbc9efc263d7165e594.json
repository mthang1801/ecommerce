{"ast":null,"code":"import manufactorActionTypes from \"./manufactor.types\";\nimport axios from \"axios\";\nimport urls from \"../../utils/urls\";\n\nconst fetchManufactorStart = () => ({\n  type: manufactorActionTypes.FETCH_CONTENT_LIST_BY_MANUFACTOR_PATH_URL_START\n});\n\nconst fetchManufactorSuccess = ({\n  name,\n  productGroupList,\n  productList,\n  numProducts,\n  currentPage,\n  numPages,\n  maxPrice\n}) => ({\n  type: manufactorActionTypes.FETCH_CONTENT_LIST_BY_MANUFACTOR_PATH_URL_SUCCESS,\n  payload: {\n    name,\n    productGroupList,\n    productList,\n    numProducts,\n    currentPage,\n    numPages,\n    maxPrice\n  }\n});\n\nconst fetchManufactorFail = err => ({\n  type: manufactorActionTypes.FETCH_CONTENT_LIST_BY_MANUFACTOR_PATH_URL_FAIL,\n  payload: {\n    msg: err.response.data.message,\n    status: err.response.status\n  }\n});\n\nexport const fetchManufactor = (pathUrl, page) => async dispatch => {\n  try {\n    dispatch(fetchManufactorStart());\n    let {\n      data\n    } = await axios.get(urls.GET_CONTENT_LIST_BY_MANUFACTOR_PATH_URL(pathUrl, page));\n    data.currentPage = page;\n    dispatch(fetchManufactorSuccess(data));\n  } catch (error) {\n    dispatch(fetchManufactorFail(error));\n  }\n};\nexport const setCurrentPage = curPage => ({\n  type: manufactorActionTypes.SET_CURRENT_PAGE,\n  payload: curPage\n});\nexport const fetchProductListStart = () => ({\n  type: manufactorActionTypes.FETCH_PRODUCT_LIST_START\n});\nexport const fetchProductListSuccess = productList => ({\n  type: manufactorActionTypes.FETCH_PRODUCT_LIST_SUCCESS,\n  payload: productList\n});\nexport const fetchProductListFail = err => ({\n  type: manufactorActionTypes.FETCH_PRODUCT_LIST_FAIL,\n  payload: {\n    msg: err.response.data.message,\n    status: err.response.status\n  }\n});\nexport const fetchProductList = (categoryUrl, productTypeUrl, page) => async (dispatch) => {\n  try {\n    console.log(page);\n    dispatch(fetchProductListStart());\n    const {\n      data\n    } = await axios.get(urls.GET_PRODUCT_LIST_PER_PAGE_BY_PRODUCT_TYPE_PATH_URL(categoryUrl, productTypeUrl, page));\n    dispatch(fetchProductListSuccess(data));\n  } catch (error) {\n    dispatch(fetchProductListFail(error));\n  }\n};","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/redux/manufactor/manufactor.actions.js"],"names":["manufactorActionTypes","axios","urls","fetchManufactorStart","type","FETCH_CONTENT_LIST_BY_MANUFACTOR_PATH_URL_START","fetchManufactorSuccess","name","productGroupList","productList","numProducts","currentPage","numPages","maxPrice","FETCH_CONTENT_LIST_BY_MANUFACTOR_PATH_URL_SUCCESS","payload","fetchManufactorFail","err","FETCH_CONTENT_LIST_BY_MANUFACTOR_PATH_URL_FAIL","msg","response","data","message","status","fetchManufactor","pathUrl","page","dispatch","get","GET_CONTENT_LIST_BY_MANUFACTOR_PATH_URL","error","setCurrentPage","curPage","SET_CURRENT_PAGE","fetchProductListStart","FETCH_PRODUCT_LIST_START","fetchProductListSuccess","FETCH_PRODUCT_LIST_SUCCESS","fetchProductListFail","FETCH_PRODUCT_LIST_FAIL","fetchProductList","categoryUrl","productTypeUrl","console","log","GET_PRODUCT_LIST_PER_PAGE_BY_PRODUCT_TYPE_PATH_URL"],"mappings":"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","sourcesContent":["import manufactorActionTypes from \"./manufactor.types\";\nimport axios from \"axios\";\nimport urls from \"../../utils/urls\";\nconst fetchManufactorStart = () => ({\n  type: manufactorActionTypes.FETCH_CONTENT_LIST_BY_MANUFACTOR_PATH_URL_START,\n});\n\nconst fetchManufactorSuccess = ({\n  name,\n  productGroupList,\n  productList,\n  numProducts,\n  currentPage,\n  numPages,\n  maxPrice,\n}) => ({\n  type: manufactorActionTypes.FETCH_CONTENT_LIST_BY_MANUFACTOR_PATH_URL_SUCCESS,\n  payload: {\n    name,\n    productGroupList,\n    productList,\n    numProducts,\n    currentPage,\n    numPages,\n    maxPrice,\n  },\n});\n\nconst fetchManufactorFail = (err) => ({\n  type: manufactorActionTypes.FETCH_CONTENT_LIST_BY_MANUFACTOR_PATH_URL_FAIL,\n  payload: { msg: err.response.data.message, status: err.response.status },\n});\n\nexport const fetchManufactor = (pathUrl, page) => async (dispatch) => {\n  try {\n    dispatch(fetchManufactorStart());\n    let { data } = await axios.get(\n      urls.GET_CONTENT_LIST_BY_MANUFACTOR_PATH_URL(pathUrl, page)\n    );\n    data.currentPage = page;\n    dispatch(fetchManufactorSuccess(data));\n  } catch (error) {\n    dispatch(fetchManufactorFail(error));\n  }\n};\n\nexport const setCurrentPage = (curPage) => ({\n  type: manufactorActionTypes.SET_CURRENT_PAGE,\n  payload: curPage,\n});\n\nexport const fetchProductListStart = () => ({\n  type: manufactorActionTypes.FETCH_PRODUCT_LIST_START,\n});\nexport const fetchProductListSuccess = (productList) => ({\n  type: manufactorActionTypes.FETCH_PRODUCT_LIST_SUCCESS,\n  payload: productList,\n});\nexport const fetchProductListFail = (err) => ({\n  type: manufactorActionTypes.FETCH_PRODUCT_LIST_FAIL,\n  payload: { msg: err.response.data.message, status: err.response.status },\n});\n\nexport const fetchProductList = (categoryUrl, productTypeUrl, page) => async (\n  dispatch\n) => {\n  try {\n    console.log(page);\n    dispatch(fetchProductListStart());\n    const { data } = await axios.get(\n      urls.GET_PRODUCT_LIST_PER_PAGE_BY_PRODUCT_TYPE_PATH_URL(\n        categoryUrl,\n        productTypeUrl,\n        page\n      )\n    );\n    dispatch(fetchProductListSuccess(data));\n  } catch (error) {\n    dispatch(fetchProductListFail(error));\n  }\n};\n"]},"metadata":{},"sourceType":"module"}