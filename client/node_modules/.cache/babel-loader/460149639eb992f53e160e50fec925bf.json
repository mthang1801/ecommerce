{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/src/components/UI/form-create-product/form-create-product.component.jsx\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Form, FormInline, FormGroup, Label, Input, Select, Required, Option } from \"./form-create-product.styles\";\nimport { getCategoryList, getProductsListByCategoryId } from \"../../../utils/algorithms\";\nconst categoryList = getCategoryList();\n\nconst FormCreateProduct = () => {\n  const classes = useStyles();\n  const [category, setCategory] = useState({\n    _id: \"\",\n    name: \"\",\n    linkUrl: \"\",\n    products: []\n  });\n  const [productsGroup, setProductsGroup] = useState([]);\n  const [productsType, setProductsType] = useState(\"\");\n  const [mobileView, setMobileView] = useState(window.innerWidth < 600);\n  const [tabletView, setTabletView] = useState(window.innerWidth < 992 && window.innerWidth >= 660);\n  const width = useContext(AppContext);\n  useEffect(() => {\n    if (width < 660) {\n      setMobileView(true);\n    } else {\n      setMobileView(false);\n    }\n\n    if (width < 992 && width >= 660) {\n      setTabletView(true);\n    } else {\n      setTabletView(false);\n    }\n  }, [width]);\n\n  const handleCategory = e => {\n    const category = categoryList.find(item => item._id === e.target.value);\n\n    if (category) {\n      setCategory({ ...category,\n        _id: category._id,\n        name: category.name,\n        linkUrl: category.linkUrl,\n        products: category.products\n      });\n    } else {\n      setCategory({\n        _id: \"\",\n        name: \"\",\n        linkUrl: \"\",\n        products: []\n      });\n    }\n  };\n\n  console.log(category);\n  return /*#__PURE__*/React.createElement(Form, {\n    mobileView: mobileView,\n    tabletView: tabletView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"age-native-helper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"Lo\\u1EA1i S\\u1EA3n ph\\u1EA9m\"), /*#__PURE__*/React.createElement(NativeSelect, {\n    value: category.name,\n    onChange: handleCategory,\n    inputProps: {\n      name: \"category\",\n      id: \"category-native-helper\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }), categoryList.map(categoryItem => /*#__PURE__*/React.createElement(\"option\", {\n    key: categoryItem._id,\n    value: categoryItem._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, categoryItem.name)))));\n};\n\nexport default FormCreateProduct;","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/src/components/UI/form-create-product/form-create-product.component.jsx"],"names":["React","useState","useEffect","useContext","Form","FormInline","FormGroup","Label","Input","Select","Required","Option","getCategoryList","getProductsListByCategoryId","categoryList","FormCreateProduct","classes","useStyles","category","setCategory","_id","name","linkUrl","products","productsGroup","setProductsGroup","productsType","setProductsType","mobileView","setMobileView","window","innerWidth","tabletView","setTabletView","width","AppContext","handleCategory","e","find","item","target","value","console","log","formControl","id","map","categoryItem"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport {\n  Form,\n  FormInline,\n  FormGroup,\n  Label,\n  Input,\n  Select,\n  Required,\n  Option,\n} from \"./form-create-product.styles\";\nimport {\n  getCategoryList,\n  getProductsListByCategoryId,\n} from \"../../../utils/algorithms\";\n\nconst categoryList = getCategoryList();\n\n\nconst FormCreateProduct = () => {\n  const classes = useStyles();\n  const [category, setCategory] = useState({\n    _id: \"\",\n    name: \"\",\n    linkUrl: \"\",\n    products: [],\n  });\n  const [productsGroup, setProductsGroup] = useState([]);\n  const [productsType, setProductsType] = useState(\"\");\n  const [mobileView, setMobileView] = useState(window.innerWidth < 600);\n  const [tabletView, setTabletView] = useState(\n    window.innerWidth < 992 && window.innerWidth >= 660\n  );\n  const width = useContext(AppContext);\n  useEffect(() => {\n    if (width < 660) {\n      setMobileView(true);\n    } else {\n      setMobileView(false);\n    }\n    if (width < 992 && width >= 660) {\n      setTabletView(true);\n    } else {\n      setTabletView(false);\n    }\n  }, [width]);\n\n  const handleCategory = (e) => {\n    const  category  =categoryList.find(\n      (item) => item._id === e.target.value\n    );\n    if (category) {\n      setCategory({\n        ...category,\n        _id: category._id,\n        name: category.name,\n        linkUrl: category.linkUrl,\n        products: category.products,\n      });\n    } else {\n      setCategory({ _id: \"\", name: \"\", linkUrl: \"\", products: [] });\n    }\n  };\n  console.log(category)\n  return (\n    <Form mobileView={mobileView} tabletView={tabletView}>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor=\"age-native-helper\">Loại Sản phẩm</InputLabel>\n        <NativeSelect\n          value={category.name}\n          onChange={handleCategory}\n          inputProps={{\n            name: \"category\",\n            id: \"category-native-helper\",\n          }}\n        >\n          <option aria-label=\"None\" value=\"\" />\n          {categoryList.map((categoryItem) => (\n            <option key={categoryItem._id} value={categoryItem._id}>\n              {categoryItem.name}\n            </option>\n          ))}\n        </NativeSelect>\n      </FormControl>\n      {/* <FormControl className={classes.formControl}>\n        <InputLabel htmlFor=\"age-native-helper\">Nhóm Sản phẩm</InputLabel>\n        <NativeSelect\n          value={productsType}        \n          onChange={e => setProductsType(e.target.value)}\n          inputProps={{\n            name: 'products',\n            id: 'products-native-helper',\n          }}\n          disabled={!productsGroup.length}\n        >\n          <option aria-label=\"None\" value=\"\" />\n          {productsGroup.map((groupName) => (\n            <option key={groupName} value={groupName}>{groupName}</option>\n          ))}\n        </NativeSelect>    \n      </FormControl> */}\n    </Form>\n  );\n};\n\nexport default FormCreateProduct;\n"]},"metadata":{},"sourceType":"module"}