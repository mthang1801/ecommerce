{"ast":null,"code":"import productCommentReviewActionTypes from \"./product-comment-review.types\";\nimport axios from \"axios\";\nimport urls from \"../../utils/urls\";\n\nconst fetchProductCommentReviewStart = () => ({\n  type: productCommentReviewActionTypes.FETCH_PRODUCT_COMMENT_REVIEW_START\n});\n\nconst fetchProductCommentReviewSuccess = (comments, numberOfComments) => {\n  return {\n    type: productCommentReviewActionTypes.FETCH_PRODUCT_COMMENT_REVIEW_SUCCESS,\n    payload: {\n      comments: comments,\n      numberOfComments: numberOfComments\n    }\n  };\n};\n\nconst fetchProductCommentReviewFail = err => ({\n  type: productCommentReviewActionTypes.FETCH_PRODUCT_COMMENT_REVIEW_FAIL,\n  payload: {\n    msg: err.response.data.message,\n    status: err.response.status\n  }\n});\n\nexport const fetchProductCommentReview = productId => async dispatch => {\n  try {\n    dispatch(fetchProductCommentReviewStart());\n    const {\n      data: {\n        comments,\n        numberOfComments\n      }\n    } = await axios.get(urls.GET_PRODUCT_COMMENT_REVIEWS(productId));\n    dispatch(fetchProductCommentReviewSuccess(comments, numberOfComments));\n  } catch (error) {\n    dispatch(fetchProductCommentReviewFail(error));\n  }\n};\nexport const setLikeForComment = (commentId, userId) => ({\n  type: productCommentReviewActionTypes.SET_LIKE_FOR_COMMENT,\n  payload: {\n    commentId,\n    userId\n  }\n});\nexport const setUnlikeForComment = (commentId, userId) => ({\n  type: productCommentReviewActionTypes.SET_UNLIKE_FOR_COMMENT,\n  payload: {\n    commentId,\n    userId\n  }\n});\nexport const postLikeOrUnlikeComment = async (commentId, userId) => {\n  try {\n    const {\n      data\n    } = await axios.post(urls.POST_LIKE_OR_UNLIKE_COMMENT(commentId));\n\n    if (data.msg == \"like success\") {\n      setLikeForComment(comment._id, userId);\n    } else {\n      setUnlikeForComment(comment._id, userId);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const setDislikeForComment = (commentId, userId) => ({\n  type: productCommentReviewActionTypes.SET_DISLIKE_FOR_COMMENT,\n  payload: {\n    commentId,\n    userId\n  }\n});\nexport const setUndislikeForComment = (commentId, userId) => ({\n  type: productCommentReviewActionTypes.SET_UNDISLIKE_FOR_COMMENT,\n  payload: {\n    commentId,\n    userId\n  }\n});\nexport const postDislikeOrUndislikeComment = async (commentId, userId) => {\n  try {\n    const {\n      data\n    } = await axios.post(urls.POST_DISLIKE_OR_UNDISLIKE_COMMENT(commentId));\n\n    if (data.msg == \"dislike success\") {\n      setDislikeForComment(comment._id, userId);\n    } else {\n      setUndislikeForComment(comment._id, userId);\n    }\n  } catch (error) {\n    console.log(error.response.data.message);\n  }\n};\nexport const setResponseComment = (commentId, response) => ({\n  type: productCommentReviewActionTypes.SET_RESPONSE_COMMENT,\n  payload: {\n    commentId,\n    response\n  }\n});","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/redux/product-comment-review/product-comment-review.actions.js"],"names":["productCommentReviewActionTypes","axios","urls","fetchProductCommentReviewStart","type","FETCH_PRODUCT_COMMENT_REVIEW_START","fetchProductCommentReviewSuccess","comments","numberOfComments","FETCH_PRODUCT_COMMENT_REVIEW_SUCCESS","payload","fetchProductCommentReviewFail","err","FETCH_PRODUCT_COMMENT_REVIEW_FAIL","msg","response","data","message","status","fetchProductCommentReview","productId","dispatch","get","GET_PRODUCT_COMMENT_REVIEWS","error","setLikeForComment","commentId","userId","SET_LIKE_FOR_COMMENT","setUnlikeForComment","SET_UNLIKE_FOR_COMMENT","postLikeOrUnlikeComment","post","POST_LIKE_OR_UNLIKE_COMMENT","comment","_id","console","log","setDislikeForComment","SET_DISLIKE_FOR_COMMENT","setUndislikeForComment","SET_UNDISLIKE_FOR_COMMENT","postDislikeOrUndislikeComment","POST_DISLIKE_OR_UNDISLIKE_COMMENT","setResponseComment","SET_RESPONSE_COMMENT"],"mappings":"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","sourcesContent":["import productCommentReviewActionTypes from \"./product-comment-review.types\";\nimport axios from \"axios\";\nimport urls from \"../../utils/urls\";\nconst fetchProductCommentReviewStart = () => ({\n  type: productCommentReviewActionTypes.FETCH_PRODUCT_COMMENT_REVIEW_START,\n});\n\nconst fetchProductCommentReviewSuccess = (comments, numberOfComments) => {\n  return {\n    type: productCommentReviewActionTypes.FETCH_PRODUCT_COMMENT_REVIEW_SUCCESS,\n    payload: { comments: comments, numberOfComments: numberOfComments },\n  };\n};\n\nconst fetchProductCommentReviewFail = (err) => ({\n  type: productCommentReviewActionTypes.FETCH_PRODUCT_COMMENT_REVIEW_FAIL,\n  payload: { msg: err.response.data.message, status: err.response.status },\n});\n\nexport const fetchProductCommentReview = (productId) => async (dispatch) => {\n  try {\n    dispatch(fetchProductCommentReviewStart());\n    const {\n      data: { comments, numberOfComments },\n    } = await axios.get(urls.GET_PRODUCT_COMMENT_REVIEWS(productId));\n\n    dispatch(fetchProductCommentReviewSuccess(comments, numberOfComments));\n  } catch (error) {\n    dispatch(fetchProductCommentReviewFail(error));\n  }\n};\n\nexport const setLikeForComment = (commentId, userId) => ({\n  type: productCommentReviewActionTypes.SET_LIKE_FOR_COMMENT,\n  payload: { commentId, userId },\n});\n\nexport const setUnlikeForComment = (commentId, userId) => ({\n  type: productCommentReviewActionTypes.SET_UNLIKE_FOR_COMMENT,\n  payload: { commentId, userId },\n});\nexport const postLikeOrUnlikeComment = async (commentId, userId) => {\n  try {\n    const { data } = await axios.post(\n      urls.POST_LIKE_OR_UNLIKE_COMMENT(commentId)\n    );\n    if (data.msg == \"like success\") {\n      setLikeForComment(comment._id, userId);\n    } else {\n      setUnlikeForComment(comment._id, userId);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const setDislikeForComment = (commentId, userId) => ({\n  type: productCommentReviewActionTypes.SET_DISLIKE_FOR_COMMENT,\n  payload: { commentId, userId },\n});\n\nexport const setUndislikeForComment = (commentId, userId) => ({\n  type: productCommentReviewActionTypes.SET_UNDISLIKE_FOR_COMMENT,\n  payload: { commentId, userId },\n});\nexport const postDislikeOrUndislikeComment = async (commentId, userId) => {\n  try {\n    const { data } = await axios.post(\n      urls.POST_DISLIKE_OR_UNDISLIKE_COMMENT(commentId)\n    );\n    if (data.msg == \"dislike success\") {\n      setDislikeForComment(comment._id, userId);\n    } else {\n      setUndislikeForComment(comment._id, userId);\n    }\n  } catch (error) {\n    console.log(error.response.data.message);\n  }\n};\n\nexport const setResponseComment = (commentId, response) => ({\n  type: productCommentReviewActionTypes.SET_RESPONSE_COMMENT,\n  payload: { commentId, response },\n});\n"]},"metadata":{},"sourceType":"module"}