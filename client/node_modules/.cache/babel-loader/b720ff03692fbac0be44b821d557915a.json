{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/pages/product-type/product-type.component.jsx\";\nimport React, { useEffect } from \"react\";\nimport { ProductTypeWrapper } from \"./product-type.styles\";\nimport { default as ProductTypeOverview } from \"../../components/ProductType/product-type-overview/product-type-overview.container\";\nimport MasterHeader from \"../../components/Layout/master-header/master-header.component\";\nimport Background from \"../../components/Layout/background/background.component\";\nimport { fetchProductType, fetchProductList, filterProductsByPrice } from \"../../redux/product-type/product-type.actions\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectProductTypeError, selectProductTypeLoading, selectProductTypeList, selectProductFetched, selectName, selectProductsIsFilter } from \"../../redux/product-type/product-type.selectors\";\nimport PageNotFound from \"../page-error/page-error.component\";\nimport Loader from \"../../components/UI/loader/loader.component\";\n\nconst ProductTypePage = ({\n  match,\n  location,\n  fetchProductType,\n  fetchProductList,\n  loading,\n  error,\n  // fetched,\n  name // isFilter,\n  // filterProductsByPrice\n\n}) => {\n  useEffect(() => {\n    let {\n      productTypeId\n    } = match.params;\n    const urlParams = new URLSearchParams(window.location.search);\n    const min_price = +urlParams.get(\"min_price\");\n    const max_price = +urlParams.get(\"max_price\");\n    const page = +urlParams.get(\"page\") || 1; // if (location.search && fetched && !max_price && !min_price) {\n    //   fetchProductList(categoryPath, productTypePath, page);\n    //   return;\n    // }\n    // if(max_price > 0){\n    //   console.log(1)\n    //   filterProductsByPrice(categoryPath, productTypePath, min_price, max_price, page);\n    // }else{\n    //   console.log(2);\n\n    fetchProductType(productTypeId, +min_price, +max_price, page); // }\n  }, [fetchProductType, fetchProductList, location.search, window.location.search, match.params.categoryPath, match.params.productTypePath]);\n\n  if (error && error.status == 404) {\n    return /*#__PURE__*/React.createElement(PageNotFound, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (!loading && name) return /*#__PURE__*/React.createElement(ProductTypeWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MasterHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Background, {\n    label: `Trang chủ / Danh mục sản phẩm / Loại sản phẩm / ${name}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ProductTypeOverview, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }));\n  return /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 10\n    }\n  });\n};\n\nconst mapStateToProps = createStructuredSelector({\n  error: selectProductTypeError,\n  loading: selectProductTypeLoading,\n  productTypeList: selectProductTypeList,\n  fetched: selectProductFetched,\n  name: selectName,\n  isFilter: selectProductsIsFilter\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchProductType: (productTypeId, min_price, max_price, page) => dispatch(fetchProductType(productTypeId, min_price, max_price, page))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductTypePage);","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/pages/product-type/product-type.component.jsx"],"names":["React","useEffect","ProductTypeWrapper","default","ProductTypeOverview","MasterHeader","Background","fetchProductType","fetchProductList","filterProductsByPrice","connect","createStructuredSelector","selectProductTypeError","selectProductTypeLoading","selectProductTypeList","selectProductFetched","selectName","selectProductsIsFilter","PageNotFound","Loader","ProductTypePage","match","location","loading","error","name","productTypeId","params","urlParams","URLSearchParams","window","search","min_price","get","max_price","page","categoryPath","productTypePath","status","mapStateToProps","productTypeList","fetched","isFilter","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,kBAAT,QAAmC,uBAAnC;AACA,SAASC,OAAO,IAAIC,mBAApB,QAA+C,oFAA/C;AACA,OAAOC,YAAP,MAAyB,+DAAzB;AACA,OAAOC,UAAP,MAAuB,yDAAvB;AACA,SACEC,gBADF,EAEEC,gBAFF,EAGEC,qBAHF,QAIO,+CAJP;AAKA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SACEC,sBADF,EAEEC,wBAFF,EAGEC,qBAHF,EAIEC,oBAJF,EAKEC,UALF,EAMEC,sBANF,QAOO,iDAPP;AAQA,OAAOC,YAAP,MAAyB,oCAAzB;AACA,OAAOC,MAAP,MAAmB,6CAAnB;;AACA,MAAMC,eAAe,GAAG,CAAC;AACvBC,EAAAA,KADuB;AAEvBC,EAAAA,QAFuB;AAGvBf,EAAAA,gBAHuB;AAIvBC,EAAAA,gBAJuB;AAKvBe,EAAAA,OALuB;AAMvBC,EAAAA,KANuB;AAOvB;AACAC,EAAAA,IARuB,CASvB;AACA;;AAVuB,CAAD,KAWlB;AACJxB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI;AAAEyB,MAAAA;AAAF,QAAoBL,KAAK,CAACM,MAA9B;AACA,UAAMC,SAAS,GAAG,IAAIC,eAAJ,CAAoBC,MAAM,CAACR,QAAP,CAAgBS,MAApC,CAAlB;AACA,UAAMC,SAAS,GAAG,CAACJ,SAAS,CAACK,GAAV,CAAc,WAAd,CAAnB;AACA,UAAMC,SAAS,GAAG,CAACN,SAAS,CAACK,GAAV,CAAc,WAAd,CAAnB;AACA,UAAME,IAAI,GAAG,CAACP,SAAS,CAACK,GAAV,CAAc,MAAd,CAAD,IAA0B,CAAvC,CALc,CAOd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE1B,IAAAA,gBAAgB,CAACmB,aAAD,EAAe,CAACM,SAAhB,EAA0B,CAACE,SAA3B,EAAsCC,IAAtC,CAAhB,CAhBY,CAiBd;AAED,GAnBQ,EAmBN,CACD5B,gBADC,EAEDC,gBAFC,EAGDc,QAAQ,CAACS,MAHR,EAIDD,MAAM,CAACR,QAAP,CAAgBS,MAJf,EAKDV,KAAK,CAACM,MAAN,CAAaS,YALZ,EAMDf,KAAK,CAACM,MAAN,CAAaU,eANZ,CAnBM,CAAT;;AA2BA,MAAIb,KAAK,IAAIA,KAAK,CAACc,MAAN,IAAgB,GAA7B,EAAkC;AAChC,wBAAO,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACD,MAAG,CAACf,OAAD,IAAYE,IAAf,EACA,oBACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAG,mDAAkDA,IAAK,EAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOA,sBAAO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAnDD;;AAqDA,MAAMc,eAAe,GAAG5B,wBAAwB,CAAC;AAC/Ca,EAAAA,KAAK,EAAEZ,sBADwC;AAE/CW,EAAAA,OAAO,EAAEV,wBAFsC;AAG/C2B,EAAAA,eAAe,EAAE1B,qBAH8B;AAI/C2B,EAAAA,OAAO,EAAE1B,oBAJsC;AAK/CU,EAAAA,IAAI,EAAET,UALyC;AAM/C0B,EAAAA,QAAQ,EAAGzB;AANoC,CAAD,CAAhD;;AAQA,MAAM0B,kBAAkB,GAAIC,QAAD,KAAe;AACxCrC,EAAAA,gBAAgB,EAAE,CAACmB,aAAD,EAAeM,SAAf,EAAyBE,SAAzB,EAAoCC,IAApC,KAA6CS,QAAQ,CAACrC,gBAAgB,CAACmB,aAAD,EAAeM,SAAf,EAAyBE,SAAzB,EAAoCC,IAApC,CAAjB;AAD/B,CAAf,CAA3B;;AAGA,eAAezB,OAAO,CAAC6B,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CvB,eAA7C,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { ProductTypeWrapper } from \"./product-type.styles\";\nimport { default as ProductTypeOverview } from \"../../components/ProductType/product-type-overview/product-type-overview.container\";\nimport MasterHeader from \"../../components/Layout/master-header/master-header.component\";\nimport Background from \"../../components/Layout/background/background.component\";\nimport {\n  fetchProductType,\n  fetchProductList,\n  filterProductsByPrice\n} from \"../../redux/product-type/product-type.actions\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport {\n  selectProductTypeError,\n  selectProductTypeLoading,\n  selectProductTypeList,\n  selectProductFetched,\n  selectName,\n  selectProductsIsFilter\n} from \"../../redux/product-type/product-type.selectors\";\nimport PageNotFound from \"../page-error/page-error.component\";\nimport Loader from \"../../components/UI/loader/loader.component\";\nconst ProductTypePage = ({\n  match,\n  location,\n  fetchProductType,\n  fetchProductList,\n  loading,\n  error,\n  // fetched,\n  name,\n  // isFilter,\n  // filterProductsByPrice\n}) => {\n  useEffect(() => {     \n    let { productTypeId } = match.params;        \n    const urlParams = new URLSearchParams(window.location.search);\n    const min_price = +urlParams.get(\"min_price\");\n    const max_price = +urlParams.get(\"max_price\");\n    const page = +urlParams.get(\"page\") || 1 ;   \n         \n    // if (location.search && fetched && !max_price && !min_price) {\n    //   fetchProductList(categoryPath, productTypePath, page);\n    //   return;\n    // }\n    // if(max_price > 0){\n    //   console.log(1)\n    //   filterProductsByPrice(categoryPath, productTypePath, min_price, max_price, page);\n    // }else{\n    //   console.log(2);\n      fetchProductType(productTypeId,+min_price,+max_price, page);\n    // }\n    \n  }, [\n    fetchProductType,\n    fetchProductList,\n    location.search,\n    window.location.search,\n    match.params.categoryPath,\n    match.params.productTypePath,\n  ]);\n  if (error && error.status == 404) {\n    return <PageNotFound />;\n  }\n  if(!loading && name)\n  return (\n    <ProductTypeWrapper>\n      <MasterHeader />\n      <Background label={`Trang chủ / Danh mục sản phẩm / Loại sản phẩm / ${name}`} />\n      <ProductTypeOverview />\n    </ProductTypeWrapper>\n  );\n  return <Loader/>\n};\n\nconst mapStateToProps = createStructuredSelector({\n  error: selectProductTypeError,\n  loading: selectProductTypeLoading,\n  productTypeList: selectProductTypeList,\n  fetched: selectProductFetched,\n  name: selectName,\n  isFilter : selectProductsIsFilter\n});\nconst mapDispatchToProps = (dispatch) => ({\n  fetchProductType: (productTypeId,min_price,max_price, page) => dispatch(fetchProductType(productTypeId,min_price,max_price, page)),  \n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductTypePage);\n"]},"metadata":{},"sourceType":"module"}