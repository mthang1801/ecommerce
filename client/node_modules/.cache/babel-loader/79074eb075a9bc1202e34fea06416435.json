{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Layout/products-popup-item/products-popup-item.component.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { ProductsPopupItemContainer, Label, CustomLink } from \"./products-popup-item.styles\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectProductList } from \"../../../redux/product/product.selectors\";\n\nconst ProductsPopupItem = ({\n  productLabel,\n  productList,\n  productTypeId\n}) => {\n  const [products, setProducts] = useState(null);\n  useEffect(() => {\n    if (productTypeId && productList && productList.length) {\n      console.log(productTypeId);\n      setProducts(productList.filter(item => item.productType.toString() === productTypeId.toString()));\n    }\n  }, [productTypeId]);\n  return /*#__PURE__*/React.createElement(ProductsPopupItemContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, productLabel), productList && productList.length && productList.map(product => /*#__PURE__*/React.createElement(CustomLink, {\n    title: product.name,\n    to: product.linkUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, product.name)));\n}; // const  mapStateToProps = createStructuredSelector({  \n//   productList : selectProductList\n// })\n\n\nexport default ProductsPopupItem;","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Layout/products-popup-item/products-popup-item.component.jsx"],"names":["React","useState","useEffect","ProductsPopupItemContainer","Label","CustomLink","connect","createStructuredSelector","selectProductList","ProductsPopupItem","productLabel","productList","productTypeId","products","setProducts","length","console","log","filter","item","productType","toString","map","product","name","linkUrl"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SACEC,0BADF,EAEEC,KAFF,EAGEC,UAHF,QAIO,8BAJP;AAKA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAAQC,iBAAR,QAAgC,0CAAhC;;AACA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,WAAhB;AAA6BC,EAAAA;AAA7B,CAAD,KAAkD;AAC1E,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,IAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGU,aAAa,IAAID,WAAjB,IAAgCA,WAAW,CAACI,MAA/C,EAAsD;AACpDC,MAAAA,OAAO,CAACC,GAAR,CAAYL,aAAZ;AACAE,MAAAA,WAAW,CAACH,WAAW,CAACO,MAAZ,CAAmBC,IAAI,IAAIA,IAAI,CAACC,WAAL,CAAiBC,QAAjB,OAAgCT,aAAa,CAACS,QAAd,EAA3D,CAAD,CAAX;AACD;AACF,GALQ,EAKN,CAACT,aAAD,CALM,CAAT;AAMA,sBAEE,oBAAC,0BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQF,YAAR,CADF,EAEGC,WAAW,IAAIA,WAAW,CAACI,MAA3B,IACCJ,WAAW,CAACW,GAAZ,CAAiBC,OAAD,iBACd,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEA,OAAO,CAACC,IAA3B;AAAiC,IAAA,EAAE,EAAED,OAAO,CAACE,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,OAAO,CAACC,IADX,CADF,CAHJ,CAFF;AAaD,CAtBD,C,CAuBA;AACA;AACA;;;AACA,eAAef,iBAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport {\n  ProductsPopupItemContainer,\n  Label,\n  CustomLink,\n} from \"./products-popup-item.styles\";\nimport {connect} from \"react-redux\";\nimport {createStructuredSelector} from \"reselect\";\nimport {selectProductList} from \"../../../redux/product/product.selectors\"\nconst ProductsPopupItem = ({ productLabel, productList, productTypeId }) => {\n  const [products, setProducts] = useState(null);\n  \n  useEffect(() => {\n    if(productTypeId && productList && productList.length){\n      console.log(productTypeId)\n      setProducts(productList.filter(item => item.productType.toString() === productTypeId.toString()));\n    }\n  }, [productTypeId])  \n  return (\n    \n    <ProductsPopupItemContainer>\n      <Label>{productLabel}</Label>\n      {productList && productList.length && (\n        productList.map((product) => (\n          <CustomLink title={product.name} to={product.linkUrl}>\n            {product.name}\n          </CustomLink>\n        ))\n      )}\n    </ProductsPopupItemContainer>\n  );\n};\n// const  mapStateToProps = createStructuredSelector({  \n//   productList : selectProductList\n// })\nexport default ProductsPopupItem;\n"]},"metadata":{},"sourceType":"module"}