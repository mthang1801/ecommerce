{"ast":null,"code":"import categoryActionTypes from \"./category.types\";\nconst INITIAL_STATE = {\n  categoryList: [],\n  productTypeList: [],\n  discountProductList: [],\n  topRatedProducts: [],\n  bestSellerProducts: [],\n  productList: [],\n  numProducts: 0,\n  numPages: 0,\n  currentPage: 1,\n  maxPrice: 0,\n  error: undefined,\n  productListLoading: false\n};\nexport default ((state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case categoryActionTypes.FETCH_CONTENT_LIST_BY_CATEGORY_PATH_URL_START:\n      return { ...state,\n        error: undefined,\n        loading: true\n      };\n\n    case categoryActionTypes.FETCH_CONTENT_LIST_BY_CATEGORY_PATH_URL_SUCCESS:\n      return { ...state,\n        categoryList: action.payload.categoryList,\n        productTypeList: action.payload.productTypeList,\n        discountProductList: action.payload.discountProductList,\n        topRatedProducts: action.payload.topRatedProducts,\n        bestSellerProducts: action.payload.bestSellerProducts,\n        latestProductList: action.payload.latestProductList,\n        productList: action.payload.productList,\n        numProducts: +action.payload.numProducts,\n        numPages: +action.payload.numPages,\n        maxPrice: +action.payload.maxPrice,\n        loading: false\n      };\n\n    case categoryActionTypes.SET_CURRENT_PAGE:\n      return { ...state,\n        currentPage: +action.payload,\n        loading: false\n      };\n\n    case categoryActionTypes.FETCH_CONTENT_LIST_BY_CATEGORY_PATH_URL_FAIL:\n      return { ...state,\n        error: {\n          msg: action.payload.msg,\n          status: action.payload.status\n        },\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/redux/category/category.reducer.js"],"names":["categoryActionTypes","INITIAL_STATE","categoryList","productTypeList","discountProductList","topRatedProducts","bestSellerProducts","productList","numProducts","numPages","currentPage","maxPrice","error","undefined","productListLoading","state","action","type","FETCH_CONTENT_LIST_BY_CATEGORY_PATH_URL_START","loading","FETCH_CONTENT_LIST_BY_CATEGORY_PATH_URL_SUCCESS","payload","latestProductList","SET_CURRENT_PAGE","FETCH_CONTENT_LIST_BY_CATEGORY_PATH_URL_FAIL","msg","status"],"mappings":"AAAA,OAAOA,mBAAP,MAAgC,kBAAhC;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,YAAY,EAAE,EADM;AAEpBC,EAAAA,eAAe,EAAE,EAFG;AAGpBC,EAAAA,mBAAmB,EAAE,EAHD;AAIpBC,EAAAA,gBAAgB,EAAE,EAJE;AAKpBC,EAAAA,kBAAkB,EAAE,EALA;AAMpBC,EAAAA,WAAW,EAAE,EANO;AAOpBC,EAAAA,WAAW,EAAE,CAPO;AAQpBC,EAAAA,QAAQ,EAAE,CARU;AASpBC,EAAAA,WAAW,EAAE,CATO;AAUpBC,EAAAA,QAAQ,EAAE,CAVU;AAWpBC,EAAAA,KAAK,EAAEC,SAXa;AAYpBC,EAAAA,kBAAkB,EAAE;AAZA,CAAtB;AAeA,gBAAe,CAACC,KAAK,GAAGd,aAAT,EAAwBe,MAAxB,KAAmC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKjB,mBAAmB,CAACkB,6CAAzB;AACE,aAAO,EACL,GAAGH,KADE;AAELH,QAAAA,KAAK,EAAEC,SAFF;AAGLM,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKnB,mBAAmB,CAACoB,+CAAzB;AACE,aAAO,EACL,GAAGL,KADE;AAELb,QAAAA,YAAY,EAAEc,MAAM,CAACK,OAAP,CAAenB,YAFxB;AAGLC,QAAAA,eAAe,EAAEa,MAAM,CAACK,OAAP,CAAelB,eAH3B;AAILC,QAAAA,mBAAmB,EAAEY,MAAM,CAACK,OAAP,CAAejB,mBAJ/B;AAKLC,QAAAA,gBAAgB,EAAEW,MAAM,CAACK,OAAP,CAAehB,gBAL5B;AAMLC,QAAAA,kBAAkB,EAAEU,MAAM,CAACK,OAAP,CAAef,kBAN9B;AAOLgB,QAAAA,iBAAiB,EAAEN,MAAM,CAACK,OAAP,CAAeC,iBAP7B;AAQLf,QAAAA,WAAW,EAAES,MAAM,CAACK,OAAP,CAAed,WARvB;AASLC,QAAAA,WAAW,EAAE,CAACQ,MAAM,CAACK,OAAP,CAAeb,WATxB;AAULC,QAAAA,QAAQ,EAAE,CAACO,MAAM,CAACK,OAAP,CAAeZ,QAVrB;AAWLE,QAAAA,QAAQ,EAAE,CAACK,MAAM,CAACK,OAAP,CAAeV,QAXrB;AAYLQ,QAAAA,OAAO,EAAE;AAZJ,OAAP;;AAcF,SAAKnB,mBAAmB,CAACuB,gBAAzB;AACE,aAAO,EACL,GAAGR,KADE;AAELL,QAAAA,WAAW,EAAE,CAACM,MAAM,CAACK,OAFhB;AAGLF,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKnB,mBAAmB,CAACwB,4CAAzB;AACE,aAAO,EACL,GAAGT,KADE;AAELH,QAAAA,KAAK,EAAE;AAAEa,UAAAA,GAAG,EAAET,MAAM,CAACK,OAAP,CAAeI,GAAtB;AAA2BC,UAAAA,MAAM,EAAEV,MAAM,CAACK,OAAP,CAAeK;AAAlD,SAFF;AAGLP,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF;AACE,aAAOJ,KAAP;AAnCJ;AAqCD,CAtCD","sourcesContent":["import categoryActionTypes from \"./category.types\";\n\nconst INITIAL_STATE = {\n  categoryList: [],\n  productTypeList: [],\n  discountProductList: [],\n  topRatedProducts: [],\n  bestSellerProducts: [],\n  productList: [],\n  numProducts: 0,\n  numPages: 0,\n  currentPage: 1,\n  maxPrice: 0,\n  error: undefined,\n  productListLoading: false,\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case categoryActionTypes.FETCH_CONTENT_LIST_BY_CATEGORY_PATH_URL_START:\n      return {\n        ...state,\n        error: undefined,\n        loading: true,\n      };\n    case categoryActionTypes.FETCH_CONTENT_LIST_BY_CATEGORY_PATH_URL_SUCCESS:\n      return {\n        ...state,\n        categoryList: action.payload.categoryList,\n        productTypeList: action.payload.productTypeList,\n        discountProductList: action.payload.discountProductList,\n        topRatedProducts: action.payload.topRatedProducts,\n        bestSellerProducts: action.payload.bestSellerProducts,\n        latestProductList: action.payload.latestProductList,\n        productList: action.payload.productList,\n        numProducts: +action.payload.numProducts,\n        numPages: +action.payload.numPages,\n        maxPrice: +action.payload.maxPrice,\n        loading: false,\n      };\n    case categoryActionTypes.SET_CURRENT_PAGE:\n      return {\n        ...state,\n        currentPage: +action.payload,\n        loading: false,\n      };\n    case categoryActionTypes.FETCH_CONTENT_LIST_BY_CATEGORY_PATH_URL_FAIL:\n      return {\n        ...state,\n        error: { msg: action.payload.msg, status: action.payload.status },\n        loading: false,\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}