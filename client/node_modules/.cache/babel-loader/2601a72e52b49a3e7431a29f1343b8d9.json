{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Search/search-overview/search-overview.component.jsx\";\nimport React, { useContext } from 'react';\nimport { SearchOverViewWrapper, Grid } from \"./search-overview.styles\";\nimport { selectProductList, selectCurrentPage, selectNumPages } from \"../../../redux/search/search.selectors\";\nimport { createStructuredSelector } from \"reselect\";\nimport { connect } from \"react-redux\";\nimport ProductItem from \"../../UI/product-item/product-item.component\";\nimport Pagination from \"../../Layout/pagination/pagination.component\";\n\nconst SearchOverView = ({\n  productList,\n  currentPage,\n  numPages\n}) => {\n  const [initialPage, setInitialPage] = useState(true);\n\n  const movePage = page => {\n    const pathName = location.pathname.split(\"/\")[1];\n    const urlParams = new URLSearchParams(window.location.search);\n    const min_price = +urlParams.get(\"min_price\");\n    const max_price = +urlParams.get(\"max_price\");\n\n    if (max_price > 0) {\n      history.push(`/${pathName}/products?page=${page}&min_price=${min_price}&max_price=${max_price}`);\n    } else {\n      history.push(`/${pathName}/products?page=${page}&`);\n    }\n\n    setCurrentPage(page);\n  };\n\n  const handlePageClick = data => {\n    if (!initialPage) {\n      const currentPage = data.selected + 1;\n      return movePage(currentPage);\n    }\n\n    return setInitialPage(!initialPage);\n  };\n\n  return /*#__PURE__*/React.createElement(SearchOverViewWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, productList.length ? /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, productList.map(product => /*#__PURE__*/React.createElement(ProductItem, {\n    key: product._id,\n    product: product,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }))), numPages > 0 ? /*#__PURE__*/React.createElement(Pagination, {\n    currentPage: currentPage,\n    numPages: numPages,\n    handlePageClick: handlePageClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }) : null) : /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, \"Kh\\xF4ng t\\xECm th\\u1EA5y s\\u1EA3n ph\\u1EA9m n\\xE0o\"));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  productList: selectProductList,\n  currentPage: selectCurrentPage,\n  numPages: selectNumPages\n});\nexport default connect(mapStateToProps)(SearchOverView);","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Search/search-overview/search-overview.component.jsx"],"names":["React","useContext","SearchOverViewWrapper","Grid","selectProductList","selectCurrentPage","selectNumPages","createStructuredSelector","connect","ProductItem","Pagination","SearchOverView","productList","currentPage","numPages","initialPage","setInitialPage","useState","movePage","page","pathName","location","pathname","split","urlParams","URLSearchParams","window","search","min_price","get","max_price","history","push","setCurrentPage","handlePageClick","data","selected","length","map","product","_id","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAiC,OAAjC;AACA,SAAQC,qBAAR,EAA+BC,IAA/B,QAA0C,0BAA1C;AACA,SAAQC,iBAAR,EAA0BC,iBAA1B,EAA6CC,cAA7C,QAAkE,wCAAlE;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,8CAAxB;AACA,OAAOC,UAAP,MAAuB,8CAAvB;;AACA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA,WAAD;AAAcC,EAAAA,WAAd;AAA2BC,EAAAA;AAA3B,CAAD,KAA0C;AAC/D,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCC,QAAQ,CAAC,IAAD,CAA9C;;AACA,QAAMC,QAAQ,GAAGC,IAAI,IAAI;AACvB,UAAMC,QAAQ,GAAGC,QAAQ,CAACC,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CAAjB;AACA,UAAMC,SAAS,GAAG,IAAIC,eAAJ,CAAoBC,MAAM,CAACL,QAAP,CAAgBM,MAApC,CAAlB;AACA,UAAMC,SAAS,GAAG,CAACJ,SAAS,CAACK,GAAV,CAAc,WAAd,CAAnB;AACA,UAAMC,SAAS,GAAG,CAACN,SAAS,CAACK,GAAV,CAAc,WAAd,CAAnB;;AACA,QAAGC,SAAS,GAAG,CAAf,EAAkB;AAChBC,MAAAA,OAAO,CAACC,IAAR,CAAc,IAAGZ,QAAS,kBAAiBD,IAAK,cAAaS,SAAU,cAAaE,SAAU,EAA9F;AACD,KAFD,MAEK;AACHC,MAAAA,OAAO,CAACC,IAAR,CAAc,IAAGZ,QAAS,kBAAiBD,IAAK,GAAhD;AACD;;AAEDc,IAAAA,cAAc,CAACd,IAAD,CAAd;AACD,GAZD;;AAcA,QAAMe,eAAe,GAAIC,IAAD,IAAU;AAChC,QAAG,CAACpB,WAAJ,EAAgB;AACd,YAAMF,WAAW,GAAGsB,IAAI,CAACC,QAAL,GAAe,CAAnC;AACA,aAAOlB,QAAQ,CAACL,WAAD,CAAf;AACD;;AACD,WAAOG,cAAc,CAAC,CAACD,WAAF,CAArB;AACD,GAND;;AAOA,sBACE,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,WAAW,CAACyB,MAAZ,gBACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCzB,WAAW,CAAC0B,GAAZ,CAAgBC,OAAO,iBACtB,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,OAAO,CAACC,GAA1B;AAA+B,IAAA,OAAO,EAAED,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADD,CADF,EAMIzB,QAAQ,GAAG,CAAX,gBACA,oBAAC,UAAD;AAAY,IAAA,WAAW,EAAED,WAAzB;AAAsC,IAAA,QAAQ,EAAEC,QAAhD;AAA0D,IAAA,eAAe,EAAEoB,eAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,GAEE,IARN,CADD,gBAYG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DAbN,CADF;AAiBD,CAxCD;;AAyCA,MAAMO,eAAe,GAAGlC,wBAAwB,CAAC;AAC/CK,EAAAA,WAAW,EAAGR,iBADiC;AAE/CS,EAAAA,WAAW,EAAGR,iBAFiC;AAG/CS,EAAAA,QAAQ,EAAGR;AAHoC,CAAD,CAAhD;AAMA,eAAeE,OAAO,CAACiC,eAAD,CAAP,CAAyB9B,cAAzB,CAAf","sourcesContent":["import React , {useContext} from 'react'\nimport {SearchOverViewWrapper, Grid} from \"./search-overview.styles\";\nimport {selectProductList,selectCurrentPage, selectNumPages} from \"../../../redux/search/search.selectors\"\nimport {createStructuredSelector} from \"reselect\";\nimport {connect} from \"react-redux\";\nimport ProductItem from \"../../UI/product-item/product-item.component\"\nimport Pagination from \"../../Layout/pagination/pagination.component\"\nconst SearchOverView = ({productList, currentPage, numPages}) => { \n  const [initialPage, setInitialPage] = useState(true);\n  const movePage = page => {\n    const pathName = location.pathname.split(\"/\")[1];    \n    const urlParams = new URLSearchParams(window.location.search);\n    const min_price = +urlParams.get(\"min_price\");\n    const max_price = +urlParams.get(\"max_price\"); \n    if(max_price > 0 ){\n      history.push(`/${pathName}/products?page=${page}&min_price=${min_price}&max_price=${max_price}`);\n    }else{\n      history.push(`/${pathName}/products?page=${page}&`);\n    }\n    \n    setCurrentPage(page);\n  }\n  \n  const handlePageClick = (data) => {   \n    if(!initialPage){\n      const currentPage = data.selected +1 ; \n      return movePage(currentPage);\n    }\n    return setInitialPage(!initialPage);\n  };\n  return (\n    <SearchOverViewWrapper>\n      {productList.length ? (        \n        <React.Fragment>\n          <Grid>\n          {productList.map(product => (\n            <ProductItem key={product._id} product={product}/>\n          ))}\n        </Grid>\n           {numPages > 0 ? (\n            <Pagination currentPage={currentPage} numPages={numPages} handlePageClick={handlePageClick} />\n          ) : null}\n        </React.Fragment>\n        \n      ) : <h4>Không tìm thấy sản phẩm nào</h4>}\n    </SearchOverViewWrapper>\n  )\n}\nconst mapStateToProps = createStructuredSelector({\n  productList : selectProductList,\n  currentPage : selectCurrentPage,\n  numPages : selectNumPages\n})\n\nexport default connect(mapStateToProps)(SearchOverView)\n"]},"metadata":{},"sourceType":"module"}