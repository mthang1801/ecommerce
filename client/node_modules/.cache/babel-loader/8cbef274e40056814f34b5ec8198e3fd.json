{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/ProductGroup/product-group-left-side/product-group-left-side.component.jsx\";\nimport React from \"react\";\nimport { ProductGroupLeftSideWrapper } from \"./product-group-left-side.styles\";\nimport PriceScope from \"../../Layout/price-scope/price-scope.component\";\nimport StarScope from \"../../Layout/star-scope/star-scope.component\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectMaxPrice } from \"../../../redux/product-group/product-group.selectors\";\nimport { withRouter } from \"react-router-dom\";\n\nconst ProductGroupLeftSide = ({\n  mobileView,\n  tabletView,\n  maxPrice\n}) => {\n  const [minPriceChange, setMinPriceChange] = useState(0);\n  const [maxPriceChange, setMaxPriceChange] = useState(maxPrice);\n  const [filter, setFilter] = useState(false);\n  useEffect(() => {\n    let categoryPath = match.url.split(\"/\")[1];\n    let productTypePath = match.url.split(\"/\")[2];\n    let page = +match.params.page || 1;\n\n    if (filter) {\n      history.push(`/${categoryPath}/${productTypePath}/products?page=${page}&min_price=${minPriceChange}&max_price=${maxPriceChange}`);\n    }\n  }, [filter, minPriceChange, maxPriceChange]);\n  return /*#__PURE__*/React.createElement(ProductGroupLeftSideWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PriceScope, {\n    mobileView: mobileView,\n    tabletView: tabletView,\n    maxPrice: maxPrice,\n    setMinPriceChange: value => setMinPriceChange(value),\n    setMaxPriceChange: value => setMaxPriceChange(value),\n    setFilter: () => setFilter(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(StarScope, {\n    mobileView: mobileView,\n    tabletView: tabletView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  maxPrice: selectMaxPrice\n});\nexport default connect(mapStateToProps)(withRouter(ProductGroupLeftSide));","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/ProductGroup/product-group-left-side/product-group-left-side.component.jsx"],"names":["React","ProductGroupLeftSideWrapper","PriceScope","StarScope","connect","createStructuredSelector","selectMaxPrice","withRouter","ProductGroupLeftSide","mobileView","tabletView","maxPrice","minPriceChange","setMinPriceChange","useState","maxPriceChange","setMaxPriceChange","filter","setFilter","useEffect","categoryPath","match","url","split","productTypePath","page","params","history","push","value","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,2BAAT,QAA4C,kCAA5C;AACA,OAAOC,UAAP,MAAuB,gDAAvB;AACA,OAAOC,SAAP,MAAsB,8CAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,cAAT,QAA+B,sDAA/B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AACA,MAAMC,oBAAoB,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,UAAd;AAA0BC,EAAAA;AAA1B,CAAD,KAA0C;AACrE,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCC,QAAQ,CAAC,CAAD,CAApD;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCF,QAAQ,CAACH,QAAD,CAApD;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,KAAD,CAApC;AACAK,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIC,YAAY,GAAGC,KAAK,CAACC,GAAN,CAAUC,KAAV,CAAgB,GAAhB,EAAqB,CAArB,CAAnB;AACA,QAAIC,eAAe,GAAGH,KAAK,CAACC,GAAN,CAAUC,KAAV,CAAgB,GAAhB,EAAqB,CAArB,CAAtB;AACA,QAAIE,IAAI,GAAG,CAACJ,KAAK,CAACK,MAAN,CAAaD,IAAd,IAAsB,CAAjC;;AACA,QAAIR,MAAJ,EAAY;AACVU,MAAAA,OAAO,CAACC,IAAR,CACG,IAAGR,YAAa,IAAGI,eAAgB,kBAAiBC,IAAK,cAAab,cAAe,cAAaG,cAAe,EADpH;AAGD;AACF,GATQ,EASN,CAACE,MAAD,EAASL,cAAT,EAAyBG,cAAzB,CATM,CAAT;AAUA,sBACE,oBAAC,2BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,UAAU,EAAEN,UADd;AAEE,IAAA,UAAU,EAAEC,UAFd;AAGE,IAAA,QAAQ,EAAEC,QAHZ;AAIE,IAAA,iBAAiB,EAAGkB,KAAD,IAAWhB,iBAAiB,CAACgB,KAAD,CAJjD;AAKE,IAAA,iBAAiB,EAAGA,KAAD,IAAWb,iBAAiB,CAACa,KAAD,CALjD;AAME,IAAA,SAAS,EAAE,MAAMX,SAAS,CAAC,IAAD,CAN5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eASE,oBAAC,SAAD;AAAW,IAAA,UAAU,EAAET,UAAvB;AAAmC,IAAA,UAAU,EAAEC,UAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAaD,CA3BD;;AA6BA,MAAMoB,eAAe,GAAGzB,wBAAwB,CAAC;AAC/CM,EAAAA,QAAQ,EAAEL;AADqC,CAAD,CAAhD;AAIA,eAAeF,OAAO,CAAC0B,eAAD,CAAP,CAAyBvB,UAAU,CAACC,oBAAD,CAAnC,CAAf","sourcesContent":["import React from \"react\";\nimport { ProductGroupLeftSideWrapper } from \"./product-group-left-side.styles\";\nimport PriceScope from \"../../Layout/price-scope/price-scope.component\";\nimport StarScope from \"../../Layout/star-scope/star-scope.component\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectMaxPrice } from \"../../../redux/product-group/product-group.selectors\";\nimport { withRouter } from \"react-router-dom\";\nconst ProductGroupLeftSide = ({ mobileView, tabletView, maxPrice }) => {\n  const [minPriceChange, setMinPriceChange] = useState(0);\n  const [maxPriceChange, setMaxPriceChange] = useState(maxPrice);\n  const [filter, setFilter] = useState(false);\n  useEffect(() => {\n    let categoryPath = match.url.split(\"/\")[1];\n    let productTypePath = match.url.split(\"/\")[2];\n    let page = +match.params.page || 1;\n    if (filter) {\n      history.push(\n        `/${categoryPath}/${productTypePath}/products?page=${page}&min_price=${minPriceChange}&max_price=${maxPriceChange}`\n      );\n    }\n  }, [filter, minPriceChange, maxPriceChange]);\n  return (\n    <ProductGroupLeftSideWrapper>\n      <PriceScope\n        mobileView={mobileView}\n        tabletView={tabletView}\n        maxPrice={maxPrice}\n        setMinPriceChange={(value) => setMinPriceChange(value)}\n        setMaxPriceChange={(value) => setMaxPriceChange(value)}\n        setFilter={() => setFilter(true)}\n      />\n      <StarScope mobileView={mobileView} tabletView={tabletView} />\n    </ProductGroupLeftSideWrapper>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  maxPrice: selectMaxPrice,\n});\n\nexport default connect(mapStateToProps)(withRouter(ProductGroupLeftSide));\n"]},"metadata":{},"sourceType":"module"}