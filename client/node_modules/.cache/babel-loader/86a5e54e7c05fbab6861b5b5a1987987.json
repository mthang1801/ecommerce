{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Layout/toggle-user/toggle-user.component.jsx\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport ReactCountryFlag from \"react-country-flag\";\nimport { ToggleUserContainer, Text, LanguageList, RowInline } from \"./toggle-user.styles\";\nimport { AiFillSetting } from \"react-icons/ai\";\nconst configOptions = {\n  settings: {\n    text: \"Tài khoản\",\n    icon: () => /*#__PURE__*/React.createElement(AiFillSetting, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 46\n      }\n    }),\n    linkUrl: \"/user/account\"\n  },\n  orderedHistory: {\n    text: \"Lịch sử giao dịch\",\n    icon: () => /*#__PURE__*/React.createElement(AiOutlineHistory, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 61\n      }\n    }),\n    linkUrl: \"/ordered-history\"\n  },\n  logout: {\n    text: \"Đăng xuất\",\n    icon: () => /*#__PURE__*/React.createElement(FiLogOut, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 44\n      }\n    }),\n    linkUrl: \"/logout\"\n  }\n};\n\nconst ToggleLanguage = ({\n  lang\n}) => {\n  const [defaultLang, setDefaultLang] = useState(configLang.vi);\n  const [showLangBoard, setShowLangBoard] = useState(false);\n  const langRef = useRef(null);\n  const listCountriesCode = Object.keys(configLang).filter(keys => configLang[keys].code !== defaultLang.code);\n  useEffect(() => {\n    function trackLangsBoard(e) {\n      if (langRef && langRef.current.contains(e.target)) {\n        setShowLangBoard(true);\n      } else {\n        setShowLangBoard(false);\n      }\n    }\n\n    document.addEventListener(\"mouseover\", trackLangsBoard);\n    return () => document.removeEventListener(\"mouseover\", trackLangsBoard);\n  }, []);\n  return /*#__PURE__*/React.createElement(ToggleUserContainer, {\n    ref: langRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ReactCountryFlag, {\n    countryCode: defaultLang.code,\n    svg: true,\n    style: {\n      transform: \"scale(1.5)\",\n      marginRight: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, defaultLang.text), /*#__PURE__*/React.createElement(LanguageList, {\n    show: showLangBoard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, listCountriesCode.map(code => /*#__PURE__*/React.createElement(RowInline, {\n    key: code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ReactCountryFlag, {\n    countryCode: configLang[code].code,\n    svg: true,\n    style: {\n      transform: \"scale(1.5)\",\n      marginRight: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, configLang[code].text)))));\n};\n\nexport default ToggleLanguage;","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Layout/toggle-user/toggle-user.component.jsx"],"names":["React","useEffect","useState","useRef","ReactCountryFlag","ToggleUserContainer","Text","LanguageList","RowInline","AiFillSetting","configOptions","settings","text","icon","linkUrl","orderedHistory","logout","ToggleLanguage","lang","defaultLang","setDefaultLang","configLang","vi","showLangBoard","setShowLangBoard","langRef","listCountriesCode","Object","keys","filter","code","trackLangsBoard","e","current","contains","target","document","addEventListener","removeEventListener","transform","marginRight","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState , useRef} from \"react\";\nimport ReactCountryFlag from \"react-country-flag\";\nimport {\n  ToggleUserContainer,\n  Text,\n  LanguageList,\n  RowInline\n} from \"./toggle-user.styles\";\nimport {AiFillSetting} from \"react-icons/ai\"\nconst configOptions = {\n  settings: { text: \"Tài khoản\", icon: () => <AiFillSetting/>, linkUrl : \"/user/account\" },\n  orderedHistory: { text: \"Lịch sử giao dịch\", icon : () => <AiOutlineHistory/> , linkUrl : \"/ordered-history\"},\n  logout: { text: \"Đăng xuất\", icon: () => <FiLogOut/> , linkUrl : \"/logout\" },\n};\n\nconst ToggleLanguage = ({ lang }) => {\n  const [defaultLang, setDefaultLang] = useState(configLang.vi);\n  const [showLangBoard, setShowLangBoard] = useState(false);\n  const langRef = useRef(null);\n  const listCountriesCode = Object.keys(configLang).filter(\n    (keys) => configLang[keys].code !== defaultLang.code\n  );\n\n  useEffect(() => {\n    function trackLangsBoard(e){\n      if(langRef && langRef.current.contains(e.target)){      \n        setShowLangBoard(true);\n      }else{\n        setShowLangBoard(false);\n      }\n    }\n    document.addEventListener(\"mouseover\", trackLangsBoard);\n    return () => document.removeEventListener(\"mouseover\", trackLangsBoard);\n  },[])\n  return (\n    <ToggleUserContainer ref={langRef}>\n      <ReactCountryFlag\n        countryCode={defaultLang.code}\n        svg\n        style={{ transform: \"scale(1.5)\", marginRight: \"1rem\" }}\n      />\n      <Text>{defaultLang.text}</Text>\n      <LanguageList show={showLangBoard}>\n        {listCountriesCode.map((code) => (\n          <RowInline key={code}>\n            <ReactCountryFlag\n              countryCode={configLang[code].code}\n              svg\n              style={{ transform: \"scale(1.5)\", marginRight: \"1rem\" }}\n            />\n            <Text>{configLang[code].text}</Text>\n          </RowInline>\n        ))}\n      </LanguageList>\n    </ToggleUserContainer>\n  );\n};\n\nexport default ToggleLanguage;\n"]},"metadata":{},"sourceType":"module"}