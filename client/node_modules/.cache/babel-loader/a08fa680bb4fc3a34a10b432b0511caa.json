{"ast":null,"code":"import searchActionTypes from \"./search.types\";\nimport axios from \"axios\";\nimport urls from \"../../utils/urls\";\nexport const setSearchKey = searchKey => ({\n  type: searchActionTypes.SET_SEARCH_KEY,\n  payload: searchKey\n});\nexport const searchStart = () => ({\n  type: searchActionTypes.SEARCH_START\n});\nexport const searchSuccess = (productList, numPages, currentPage, numProducts) => ({\n  type: searchActionTypes.SEARCH_SUCCESS,\n  payload: {\n    productList,\n    numPages,\n    currentPage,\n    numProducts\n  }\n});\nexport const searchFail = error => ({\n  type: searchActionTypes.SEARCH_FAIL,\n  payload: {\n    msg: error.response.data.message,\n    status: error.response.status\n  }\n});\nexport const onSearch = (searchKey, page) => async dispatch => {\n  try {\n    dispatch(searchStart());\n    console.log(page);\n    const {\n      data: {\n        productList,\n        numPages,\n        numProducts\n      }\n    } = await axios.get(urls.SEARCH_PRODUCT_LIST, {\n      params: {\n        searchKey,\n        page\n      }\n    });\n    dispatch(searchSuccess(productList, numPages, page, numProducts));\n  } catch (error) {\n    dispatch(searchFail());\n  }\n};","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/redux/search/search.actions.js"],"names":["searchActionTypes","axios","urls","setSearchKey","searchKey","type","SET_SEARCH_KEY","payload","searchStart","SEARCH_START","searchSuccess","productList","numPages","currentPage","numProducts","SEARCH_SUCCESS","searchFail","error","SEARCH_FAIL","msg","response","data","message","status","onSearch","page","dispatch","console","log","get","SEARCH_PRODUCT_LIST","params"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,gBAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AAEA,OAAO,MAAMC,YAAY,GAAIC,SAAD,KAAgB;AAC1CC,EAAAA,IAAI,EAAEL,iBAAiB,CAACM,cADkB;AAE1CC,EAAAA,OAAO,EAAEH;AAFiC,CAAhB,CAArB;AAKP,OAAO,MAAMI,WAAW,GAAG,OAAO;AAChCH,EAAAA,IAAI,EAAEL,iBAAiB,CAACS;AADQ,CAAP,CAApB;AAGP,OAAO,MAAMC,aAAa,GAAG,CAC3BC,WAD2B,EAE3BC,QAF2B,EAG3BC,WAH2B,EAI3BC,WAJ2B,MAKvB;AACJT,EAAAA,IAAI,EAAEL,iBAAiB,CAACe,cADpB;AAEJR,EAAAA,OAAO,EAAE;AAAEI,IAAAA,WAAF;AAAeC,IAAAA,QAAf;AAAyBC,IAAAA,WAAzB;AAAsCC,IAAAA;AAAtC;AAFL,CALuB,CAAtB;AASP,OAAO,MAAME,UAAU,GAAIC,KAAD,KAAY;AACpCZ,EAAAA,IAAI,EAAEL,iBAAiB,CAACkB,WADY;AAEpCX,EAAAA,OAAO,EAAE;AAAEY,IAAAA,GAAG,EAAEF,KAAK,CAACG,QAAN,CAAeC,IAAf,CAAoBC,OAA3B;AAAoCC,IAAAA,MAAM,EAAEN,KAAK,CAACG,QAAN,CAAeG;AAA3D;AAF2B,CAAZ,CAAnB;AAKP,OAAO,MAAMC,QAAQ,GAAG,CAACpB,SAAD,EAAYqB,IAAZ,KAAqB,MAAOC,QAAP,IAAoB;AAC/D,MAAI;AACFA,IAAAA,QAAQ,CAAClB,WAAW,EAAZ,CAAR;AACAmB,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,UAAM;AACJJ,MAAAA,IAAI,EAAE;AAAEV,QAAAA,WAAF;AAAeC,QAAAA,QAAf;AAAyBE,QAAAA;AAAzB;AADF,QAEF,MAAMb,KAAK,CAAC4B,GAAN,CAAU3B,IAAI,CAAC4B,mBAAf,EAAoC;AAC5CC,MAAAA,MAAM,EAAE;AAAE3B,QAAAA,SAAF;AAAaqB,QAAAA;AAAb;AADoC,KAApC,CAFV;AAKAC,IAAAA,QAAQ,CAAChB,aAAa,CAACC,WAAD,EAAcC,QAAd,EAAwBa,IAAxB,EAA8BX,WAA9B,CAAd,CAAR;AACD,GATD,CASE,OAAOG,KAAP,EAAc;AACdS,IAAAA,QAAQ,CAACV,UAAU,EAAX,CAAR;AACD;AACF,CAbM","sourcesContent":["import searchActionTypes from \"./search.types\";\nimport axios from \"axios\";\nimport urls from \"../../utils/urls\";\n\nexport const setSearchKey = (searchKey) => ({\n  type: searchActionTypes.SET_SEARCH_KEY,\n  payload: searchKey,\n});\n\nexport const searchStart = () => ({\n  type: searchActionTypes.SEARCH_START,\n});\nexport const searchSuccess = (\n  productList,\n  numPages,\n  currentPage,\n  numProducts\n) => ({\n  type: searchActionTypes.SEARCH_SUCCESS,\n  payload: { productList, numPages, currentPage, numProducts },\n});\nexport const searchFail = (error) => ({\n  type: searchActionTypes.SEARCH_FAIL,\n  payload: { msg: error.response.data.message, status: error.response.status },\n});\n\nexport const onSearch = (searchKey, page) => async (dispatch) => {\n  try {\n    dispatch(searchStart());\n    console.log(page);\n    const {\n      data: { productList, numPages, numProducts },\n    } = await axios.get(urls.SEARCH_PRODUCT_LIST, {\n      params: { searchKey, page },\n    });\n    dispatch(searchSuccess(productList, numPages, page, numProducts));\n  } catch (error) {\n    dispatch(searchFail());\n  }\n};\n"]},"metadata":{},"sourceType":"module"}