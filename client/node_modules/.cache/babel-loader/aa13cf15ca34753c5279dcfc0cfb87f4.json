{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Layout/category-overview/category-overview.component.jsx\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { CategoryOverViewContainer } from \"./category-overview.styles\";\nimport CategoryToggle from \"../category-toggle/category-toggle.component\";\nimport { withRouter } from \"react-router-dom\";\nimport Backdrop from \"../../UI/backdrop/backdrop.component\";\nimport AppContext from \"../../../context/app-viewport.context\";\n\nconst CategoryOverView = ({\n  match\n}) => {\n  const [toggle, setToggle] = useState(false);\n  const [hardToggle, setHardToogle] = useState(false);\n  const [showBackdrop, setShowBackdrop] = useState(false);\n  const [smallView, setSmallView] = useState(window.innerWidth < 992);\n  const width = useContext(AppContext);\n  useEffect(() => {\n    if (width < 992) {\n      setSmallView(true);\n    } else {\n      setSmallView(false);\n    }\n  }, [width]);\n  useEffect(() => {\n    if (match.path === \"/\" && match.isExact) {\n      setToggle(smallView ? false : true);\n      setHardToogle(smallView ? false : true);\n    } else {\n      setHardToogle(false);\n    }\n  }, [match.path, match.isExact]);\n\n  const handleToggleCategory = e => {\n    console.log(\"ok\");\n    setToggle(prevState => !prevState);\n    setShowBackdrop(prevState => !prevState);\n  };\n\n  return /*#__PURE__*/React.createElement(CategoryOverViewContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Backdrop, {\n    show: showBackdrop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), hardToggle && !smallView ? /*#__PURE__*/React.createElement(CategoryToggle, {\n    show: true,\n    onClick: handleToggleCategory,\n    onMouseEnter: () => setShowBackdrop(true),\n    onMouseLeave: () => setShowBackdrop(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CategoryToggle, {\n    show: toggle,\n    onClick: handleToggleCategory,\n    onMouseEnter: () => {\n      setToggle(true);\n      setShowBackdrop(true);\n    },\n    onMouseLeave: () => {\n      setToggle(false);\n      setShowBackdrop(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default withRouter(CategoryOverView);","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Layout/category-overview/category-overview.component.jsx"],"names":["React","useState","useEffect","useContext","CategoryOverViewContainer","CategoryToggle","withRouter","Backdrop","AppContext","CategoryOverView","match","toggle","setToggle","hardToggle","setHardToogle","showBackdrop","setShowBackdrop","smallView","setSmallView","window","innerWidth","width","path","isExact","handleToggleCategory","e","console","log","prevState"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { CategoryOverViewContainer } from \"./category-overview.styles\";\nimport CategoryToggle from \"../category-toggle/category-toggle.component\";\nimport { withRouter } from \"react-router-dom\";\nimport Backdrop from \"../../UI/backdrop/backdrop.component\"\nimport AppContext from \"../../../context/app-viewport.context\";\nconst CategoryOverView = ({ match }) => {\n  const [toggle, setToggle] = useState(false);\n  const [hardToggle, setHardToogle] = useState(false);\n  const [showBackdrop, setShowBackdrop] = useState(false);\n  const [smallView, setSmallView] = useState(window.innerWidth < 992);\n  const width = useContext(AppContext);\n  useEffect(() => {\n    if (width < 992) {\n      setSmallView(true);\n    } else {\n      setSmallView(false);\n    }\n  }, [width]);\n  useEffect(() => {\n    if (match.path === \"/\" && match.isExact) {\n      setToggle(smallView ? false : true);\n      setHardToogle(smallView ? false : true);\n    } else {\n      setHardToogle(false);\n    }\n  }, [match.path, match.isExact]);\n  const handleToggleCategory = e => {\n    console.log(\"ok\");\n    setToggle(prevState => !prevState);\n    setShowBackdrop(prevState => !prevState)\n  }\n  return (\n    <CategoryOverViewContainer>\n      <Backdrop show={showBackdrop} />     \n      {hardToggle && !smallView ? (\n        <CategoryToggle show={true} onClick={handleToggleCategory}  onMouseEnter={() => setShowBackdrop(true)}  onMouseLeave={() => setShowBackdrop(false)} />\n      ) : (\n        <React.Fragment>             \n          <CategoryToggle            \n            show={toggle}            \n            onClick={handleToggleCategory}\n            onMouseEnter={() => { setToggle(true) ; setShowBackdrop(true) }}\n            onMouseLeave={() => { setToggle(false) ; setShowBackdrop(false) }}\n          />\n        </React.Fragment>\n      )}\n    </CategoryOverViewContainer>\n  );\n};\n\nexport default withRouter(CategoryOverView);\n"]},"metadata":{},"sourceType":"module"}