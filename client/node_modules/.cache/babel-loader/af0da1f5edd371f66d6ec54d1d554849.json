{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Auth/restore-account/restore-account.component.jsx\";\nimport React from \"react\";\nimport { CustomFormContainer, FormHeader, FormGroups, FormActions, StyledLink, Option, ErrorMessage, Title, SubTitle } from \"../../UI/custom-form/custom-form.styles\";\nimport CustomInput from \"../../UI/custom-input/custom-input.component\";\nimport CustomButton from \"../../UI/custom-button/custom-button.component\";\nimport { withRouter } from \"react-router-dom\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nconst TEST_SITE_KEY = \"6LcvD8AZAAAAACzN8Rm8GyuqDckBjdIft40W75wJ\";\nconst DELAY = 1500;\n\nclass RestoreAccount extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"\",\n      error: null,\n      loading: false,\n      disabled: true\n    };\n    this._reCaptchaRef = React.createRef();\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = async e => {\n      const {\n        email\n      } = this.state;\n      e.preventDefault();\n\n      if (!email) {\n        return;\n      }\n\n      try {\n        // await resetAccount(email);\n        this.props.history.push(`${this.props.match.path}/done`);\n      } catch (error) {\n        this.setState({\n          error: error.message\n        });\n      }\n    };\n\n    this.reCaptchaHandleChange = value => {\n      this.setState({\n        value,\n        disabled: false\n      });\n      if (value === null) this.setState({\n        disabled: true\n      });\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({\n        loading: true\n      });\n    }, DELAY);\n  }\n\n  render() {\n    console.log(this.props);\n    const {\n      email,\n      error,\n      loading,\n      disabled\n    } = this.state;\n    return /*#__PURE__*/React.createElement(CustomFormContainer, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(FormHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, \"Forgot account\"), /*#__PURE__*/React.createElement(SubTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, \"Get your account via Email.\")), error && /*#__PURE__*/React.createElement(ErrorMessage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }\n    }, error), /*#__PURE__*/React.createElement(FormGroups, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CustomInput, {\n      type: \"text\",\n      name: \"email\",\n      value: email,\n      label: \"Email\",\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }), loading && /*#__PURE__*/React.createElement(Option, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, \" \", /*#__PURE__*/React.createElement(ReCAPTCHA, {\n      style: {\n        display: \"inline-block\"\n      },\n      theme: \"dark\",\n      badge: \"inline\",\n      size: \"normal\",\n      ref: this._reCaptchaRef,\n      sitekey: TEST_SITE_KEY,\n      onChange: this.reCaptchaHandleChange,\n      asyncScriptOnLoad: this.asyncScriptOnLoad,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(CustomButton, {\n      variant: \"contained\",\n      color: \"white\",\n      size: \"small\",\n      bgColor: \"#3949ab\",\n      disabled: disabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, \"Submit\")), /*#__PURE__*/React.createElement(FormActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Option, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(StyledLink, {\n      to: \"/auth/signin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, \"Back to Signin\"))));\n  }\n\n}\n\nexport default withRouter(RestoreAccount);","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Auth/restore-account/restore-account.component.jsx"],"names":["React","CustomFormContainer","FormHeader","FormGroups","FormActions","StyledLink","Option","ErrorMessage","Title","SubTitle","CustomInput","CustomButton","withRouter","ReCAPTCHA","TEST_SITE_KEY","DELAY","RestoreAccount","Component","state","email","error","loading","disabled","_reCaptchaRef","createRef","handleChange","e","name","value","target","setState","handleSubmit","preventDefault","props","history","push","match","path","message","reCaptchaHandleChange","componentDidMount","setTimeout","render","console","log","display","asyncScriptOnLoad"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,mBADF,EAEEC,UAFF,EAGEC,UAHF,EAIEC,WAJF,EAKEC,UALF,EAMEC,MANF,EAOEC,YAPF,EAQEC,KARF,EASEC,QATF,QAUO,yCAVP;AAWA,OAAOC,WAAP,MAAwB,8CAAxB;AACA,OAAOC,YAAP,MAAyB,gDAAzB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AAEA,MAAMC,aAAa,GAAG,0CAAtB;AACA,MAAMC,KAAK,GAAG,IAAd;;AACA,MAAMC,cAAN,SAA6BhB,KAAK,CAACiB,SAAnC,CAA6C;AAAA;AAAA;AAAA,SAC3CC,KAD2C,GACnC;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,KAAK,EAAE,IAFD;AAGNC,MAAAA,OAAO,EAAE,KAHH;AAINC,MAAAA,QAAQ,EAAE;AAJJ,KADmC;AAAA,SAQ3CC,aAR2C,GAQ3BvB,KAAK,CAACwB,SAAN,EAR2B;;AAAA,SAgB3CC,YAhB2C,GAgB3BC,CAAD,IAAO;AACpB,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkBF,CAAC,CAACG,MAA1B;AACA,WAAKC,QAAL,CAAc;AAAE,SAACH,IAAD,GAAQC;AAAV,OAAd;AACD,KAnB0C;;AAAA,SAqB3CG,YArB2C,GAqB5B,MAAOL,CAAP,IAAa;AAC1B,YAAM;AAAEP,QAAAA;AAAF,UAAY,KAAKD,KAAvB;AACAQ,MAAAA,CAAC,CAACM,cAAF;;AACA,UAAI,CAACb,KAAL,EAAY;AACV;AACD;;AACD,UAAI;AACF;AACA,aAAKc,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAyB,GAAE,KAAKF,KAAL,CAAWG,KAAX,CAAiBC,IAAK,OAAjD;AACD,OAHD,CAGE,OAAOjB,KAAP,EAAc;AACd,aAAKU,QAAL,CAAc;AAAEV,UAAAA,KAAK,EAAEA,KAAK,CAACkB;AAAf,SAAd;AACD;AACF,KAjC0C;;AAAA,SAmC3CC,qBAnC2C,GAmClBX,KAAD,IAAW;AACjC,WAAKE,QAAL,CAAc;AAAEF,QAAAA,KAAF;AAASN,QAAAA,QAAQ,EAAG;AAApB,OAAd;AACA,UAAGM,KAAK,KAAK,IAAb,EAAmB,KAAKE,QAAL,CAAc;AAACR,QAAAA,QAAQ,EAAE;AAAX,OAAd;AACpB,KAtC0C;AAAA;;AAU3CkB,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,UAAU,CAAC,MAAM;AACf,WAAKX,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAFS,EAEPN,KAFO,CAAV;AAGD;;AA0BD2B,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAjB;AACA,UAAM;AAAEd,MAAAA,KAAF;AAASC,MAAAA,KAAT;AAAgBC,MAAAA,OAAhB;AAAyBC,MAAAA;AAAzB,QAAsC,KAAKJ,KAAjD;AACA,wBACE,oBAAC,mBAAD;AAAqB,MAAA,QAAQ,EAAE,KAAKa,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAFF,CADF,EAKGX,KAAK,iBAAI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAeA,KAAf,CALZ,eAME,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,KAAK,EAAED,KAHT;AAIE,MAAA,KAAK,EAAC,OAJR;AAKE,MAAA,QAAQ,EAAE,KAAKM,YALjB;AAME,MAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EASGJ,OAAO,iBACN,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,eAEE,oBAAC,SAAD;AACE,MAAA,KAAK,EAAE;AAAEwB,QAAAA,OAAO,EAAE;AAAX,OADT;AAEE,MAAA,KAAK,EAAC,MAFR;AAGE,MAAA,KAAK,EAAC,QAHR;AAIE,MAAA,IAAI,EAAC,QAJP;AAKE,MAAA,GAAG,EAAE,KAAKtB,aALZ;AAME,MAAA,OAAO,EAAET,aANX;AAOE,MAAA,QAAQ,EAAE,KAAKyB,qBAPjB;AAQE,MAAA,iBAAiB,EAAE,KAAKO,iBAR1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAVJ,eAwBE,oBAAC,YAAD;AACE,MAAA,OAAO,EAAC,WADV;AAEE,MAAA,KAAK,EAAC,OAFR;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,MAAA,OAAO,EAAC,SAJV;AAKE,MAAA,QAAQ,EAAExB,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxBF,CANF,eAyCE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAY,MAAA,EAAE,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CADF,CAzCF,CADF;AAiDD;;AA5F0C;;AA+F7C,eAAeV,UAAU,CAACI,cAAD,CAAzB","sourcesContent":["import React from \"react\";\nimport {\n  CustomFormContainer,\n  FormHeader,\n  FormGroups,\n  FormActions,\n  StyledLink,\n  Option,\n  ErrorMessage,\n  Title,\n  SubTitle,\n} from \"../../UI/custom-form/custom-form.styles\";\nimport CustomInput from \"../../UI/custom-input/custom-input.component\";\nimport CustomButton from \"../../UI/custom-button/custom-button.component\";\nimport { withRouter } from \"react-router-dom\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\n\nconst TEST_SITE_KEY = \"6LcvD8AZAAAAACzN8Rm8GyuqDckBjdIft40W75wJ\";\nconst DELAY = 1500;\nclass RestoreAccount extends React.Component {\n  state = {\n    email: \"\",\n    error: null,\n    loading: false,\n    disabled: true,    \n  };\n\n  _reCaptchaRef = React.createRef();\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({ loading: true });\n    }, DELAY);\n  }\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = async (e) => {\n    const { email } = this.state;\n    e.preventDefault();\n    if (!email) {\n      return;\n    }\n    try {\n      // await resetAccount(email);\n      this.props.history.push(`${this.props.match.path}/done`);\n    } catch (error) {\n      this.setState({ error: error.message });\n    }\n  };\n\n  reCaptchaHandleChange = (value) => {\n    this.setState({ value, disabled : false  });\n    if(value === null) this.setState({disabled: true})\n  }\n\n  render() {\n    console.log(this.props);\n    const { email, error, loading, disabled } = this.state;\n    return (\n      <CustomFormContainer onSubmit={this.handleSubmit}>\n        <FormHeader>\n          <Title>Forgot account</Title>\n          <SubTitle>Get your account via Email.</SubTitle>\n        </FormHeader>\n        {error && <ErrorMessage>{error}</ErrorMessage>}\n        <FormGroups>\n          <CustomInput\n            type=\"text\"\n            name=\"email\"\n            value={email}\n            label=\"Email\"\n            onChange={this.handleChange}\n            required\n          />\n          {loading && (\n            <Option>\n              {\" \"}\n              <ReCAPTCHA\n                style={{ display: \"inline-block\" }}\n                theme=\"dark\"\n                badge=\"inline\"\n                size=\"normal\"\n                ref={this._reCaptchaRef}\n                sitekey={TEST_SITE_KEY}\n                onChange={this.reCaptchaHandleChange}\n                asyncScriptOnLoad={this.asyncScriptOnLoad}\n              />\n            </Option>\n          )}\n          <CustomButton\n            variant=\"contained\"\n            color=\"white\"\n            size=\"small\"            \n            bgColor=\"#3949ab\"\n            disabled={disabled}\n          >\n            Submit\n          </CustomButton>\n        </FormGroups>\n\n        <FormActions>\n          <Option>\n            <StyledLink to=\"/auth/signin\">Back to Signin</StyledLink>\n          </Option>\n        </FormActions>\n      </CustomFormContainer>\n    );\n  }\n}\n\nexport default withRouter(RestoreAccount);\n"]},"metadata":{},"sourceType":"module"}