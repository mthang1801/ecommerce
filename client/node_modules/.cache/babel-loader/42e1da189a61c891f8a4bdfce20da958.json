{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\nimport rootReducer from \"./root-reducer\";\nimport rootSaga from \"./root-saga\";\nimport createSagaMiddlewares from \"redux-saga\";\nimport { persistStore } from \"redux-persist\";\nconst sagaMiddlewares = createSagaMiddlewares();\nconst middleware = [thunk, sagaMiddlewares];\n\nif (process.env.NODE_ENV === \"development\") {\n  middleware.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middleware));\nsagaMiddlewares.run(rootSaga);\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/redux/store.js"],"names":["createStore","applyMiddleware","thunk","logger","rootReducer","rootSaga","createSagaMiddlewares","persistStore","sagaMiddlewares","middleware","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,qBAAP,MAAkC,YAAlC;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,MAAMC,eAAe,GAAGF,qBAAqB,EAA7C;AAEA,MAAMG,UAAU,GAAG,CAACP,KAAD,EAAQM,eAAR,CAAnB;;AACA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CH,EAAAA,UAAU,CAACI,IAAX,CAAgBV,MAAhB;AACD;;AAED,OAAO,MAAMW,KAAK,GAAGd,WAAW,CAACI,WAAD,EAAcH,eAAe,CAAC,GAAGQ,UAAJ,CAA7B,CAAzB;AACPD,eAAe,CAACO,GAAhB,CAAoBV,QAApB;AAEA,OAAO,MAAMW,SAAS,GAAGT,YAAY,CAACO,KAAD,CAA9B","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\nimport rootReducer from \"./root-reducer\";\nimport rootSaga from \"./root-saga\";\nimport createSagaMiddlewares from \"redux-saga\";\nimport { persistStore } from \"redux-persist\";\nconst sagaMiddlewares = createSagaMiddlewares();\n\nconst middleware = [thunk, sagaMiddlewares];\nif (process.env.NODE_ENV === \"development\") {\n  middleware.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middleware));\nsagaMiddlewares.run(rootSaga);\n\nexport const persistor = persistStore(store);\n"]},"metadata":{},"sourceType":"module"}