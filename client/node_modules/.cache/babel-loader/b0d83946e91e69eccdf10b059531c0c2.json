{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Ordered/ordered-item/ordered-item.component.jsx\";\nimport React from \"react\";\nimport { OrderItemContainer, ItemName, ItemPrice, ItemImage } from \"./ordered-item.styles\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./ordered-item.css\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst OrderedItem = ({\n  item,\n  show,\n  timeout\n}) => {\n  console.log(item);\n  console.log(show, timeout);\n  const columns = [\"\", \"tên SP\", \"Số lượng\", \"Khuyến mãi\", \"Thành tiền\"];\n  return /*#__PURE__*/React.createElement(CSSTransition, {\n    in: show,\n    timeout: timeout,\n    unmountOnExit: true,\n    classNames: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(OrderItemContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, columns.map(column => /*#__PURE__*/React.createElement(TableCell, {\n    key: column.id,\n    align: column.align,\n    style: {\n      minWidth: column.minWidth\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, column.label)))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: row.code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, columns.map(column => {\n      const value = row[column.id];\n      return /*#__PURE__*/React.createElement(TableCell, {\n        key: column.id,\n        align: column.align,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 23\n        }\n      }, column.format && typeof value === 'number' ? column.format(value) : value);\n    }));\n  }))))));\n};\n\nexport default OrderedItem;","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Ordered/ordered-item/ordered-item.component.jsx"],"names":["React","OrderItemContainer","ItemName","ItemPrice","ItemImage","CSSTransition","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","OrderedItem","item","show","timeout","console","log","columns","map","column","id","align","minWidth","label","rows","slice","page","rowsPerPage","row","code","value","format"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { OrderItemContainer, ItemName, ItemPrice, ItemImage } from \"./ordered-item.styles\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./ordered-item.css\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nconst OrderedItem = ({item, show, timeout }) => {\n  console.log(item)\n  console.log(show, timeout);\n  const columns = [\"\", \"tên SP\", \"Số lượng\", \"Khuyến mãi\", \"Thành tiền\"]\n  return (\n    <CSSTransition in={show} timeout={timeout} unmountOnExit classNames=\"alert\">    \n      <OrderItemContainer>\n        {/* <ItemImage src={`data:${item.image.mimetype};base64,${item.image.data}`}/>\n        <ItemName>{item.name}</ItemName>\n        <ItemPrice>${item.price * item.quantity}</ItemPrice> */}\n        <TableContainer>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n              return (\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                  {columns.map((column) => {\n                    const value = row[column.id];\n                    return (\n                      <TableCell key={column.id} align={column.align}>\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      </OrderItemContainer>\n      \n    </CSSTransition>\n  );\n};\n\nexport default OrderedItem;\n"]},"metadata":{},"sourceType":"module"}