{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Layout/categories-slider/categories-slider.component.jsx\";\nimport React, { useState, useRef, useEffect, useContext } from \"react\";\nimport { CategoriesSliderContainer, Caption, CategoryItem, CategoryImage, CategoryName } from \"./categories-slider.styles\";\nimport categoriesData from \"../../../data/category\";\nimport Slider from \"react-slick\";\nimport AppContext from \"../../../context/app-viewport.context\";\nimport { getCategoryList } from \"../../../utils/connectDB\";\n\nconst CategoriesSlider = props => {\n  const [slide, setSlide] = useState(null);\n  const [mobileView, setMobileView] = useState(window.innerWidth < 600);\n  const [tabletView, setTabletView] = useState(window.innerWidth < 992);\n  const width = useContext(AppContext);\n  const [category, setCategory] = useState([]);\n  useEffect(() => {\n    let _mounted = true;\n    getCategoryList().then(data => {\n      if (_mounted) {\n        setCategory(data);\n      }\n    });\n    return () => _mounted = false;\n  }, [getCategoryList]);\n  useEffect(() => {\n    if (width < 600) {\n      setMobileView(true);\n    } else {\n      setMobileView(false);\n    }\n\n    if (width < 992) {\n      setTabletView(true);\n    } else {\n      setTabletView(false);\n    }\n  }, [width]);\n  const slideRef = useRef(null);\n  useEffect(() => {\n    setSlide(slideRef.current);\n  }, [slideRef]);\n  let categoriesGroup = [];\n  let categoriesPerPage = [];\n  category.forEach((item, index) => {\n    if (index !== 0 && index % 4 === 0) {\n      categoriesGroup.push(categoriesPerPage);\n      categoriesPerPage = [];\n    }\n\n    categoriesPerPage.push(item);\n\n    if (index === category.length - 1 && index % 4 !== 0) {\n      categoriesGroup.push(categoriesPerPage);\n    }\n  });\n  return /*#__PURE__*/React.createElement(CategoriesSliderContainer, {\n    mobileView: mobileView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Caption, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 8\n    }\n  }, \"Danh m\\u1EE5c s\\u1EA3n ph\\u1EA9m\"), /*#__PURE__*/React.createElement(Slider, {\n    asNavFor: slide,\n    ref: slideRef,\n    slidesToShow: mobileView ? 2 : tabletView ? 3 : 4,\n    swipeToSlide: true,\n    focusOnSelect: true,\n    autoplay: true,\n    pauseOnHover: false,\n    autoplaySpeed: 2000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, categoriesGroup.map(group => group.map(item => /*#__PURE__*/React.createElement(CategoryItem, {\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CategoryImage, {\n    src: require(`../../../assets/img/categories/${item.imageUrl}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CategoryName, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, item.name))))));\n};\n\nexport default CategoriesSlider;","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Layout/categories-slider/categories-slider.component.jsx"],"names":["React","useState","useRef","useEffect","useContext","CategoriesSliderContainer","Caption","CategoryItem","CategoryImage","CategoryName","categoriesData","Slider","AppContext","getCategoryList","CategoriesSlider","props","slide","setSlide","mobileView","setMobileView","window","innerWidth","tabletView","setTabletView","width","category","setCategory","_mounted","then","data","slideRef","current","categoriesGroup","categoriesPerPage","forEach","item","index","push","length","map","group","id","require","imageUrl","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,EAA6CC,UAA7C,QAA+D,OAA/D;AACA,SAASC,yBAAT,EAAoCC,OAApC,EAA6CC,YAA7C,EAA2DC,aAA3D,EAA0EC,YAA1E,QAA6F,4BAA7F;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AACA,SAAQC,eAAR,QAA8B,0BAA9B;;AAIA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAClC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACiB,UAAD,EAAaC,aAAb,IAA8BlB,QAAQ,CAACmB,MAAM,CAACC,UAAP,GAAoB,GAArB,CAA5C;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BtB,QAAQ,CAACmB,MAAM,CAACC,UAAP,GAAoB,GAArB,CAA5C;AACA,QAAMG,KAAK,GAAGpB,UAAU,CAACQ,UAAD,CAAxB;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0BzB,QAAQ,CAAC,EAAD,CAAxC;AACAE,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIwB,QAAQ,GAAG,IAAf;AACAd,IAAAA,eAAe,GAAGe,IAAlB,CAAuBC,IAAI,IAAI;AAC7B,UAAGF,QAAH,EAAY;AACVD,QAAAA,WAAW,CAACG,IAAD,CAAX;AACD;AACF,KAJD;AAKA,WAAO,MAAMF,QAAQ,GAAG,KAAxB;AACD,GARQ,EAQN,CAACd,eAAD,CARM,CAAT;AAUAV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIqB,KAAK,GAAG,GAAZ,EAAiB;AACfL,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD,KAFD,MAEO;AACLA,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD;;AACD,QAAIK,KAAK,GAAG,GAAZ,EAAiB;AACfD,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD,KAFD,MAEO;AACLA,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD;AACF,GAXQ,EAWN,CAACC,KAAD,CAXM,CAAT;AAYA,QAAMM,QAAQ,GAAG5B,MAAM,CAAC,IAAD,CAAvB;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,QAAQ,CAACa,QAAQ,CAACC,OAAV,CAAR;AACD,GAFQ,EAEN,CAACD,QAAD,CAFM,CAAT;AAIA,MAAIE,eAAe,GAAG,EAAtB;AACA,MAAIC,iBAAiB,GAAG,EAAxB;AACAR,EAAAA,QAAQ,CAACS,OAAT,CAAiB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAChC,QAAIA,KAAK,KAAK,CAAV,IAAeA,KAAK,GAAG,CAAR,KAAc,CAAjC,EAAoC;AAClCJ,MAAAA,eAAe,CAACK,IAAhB,CAAqBJ,iBAArB;AACAA,MAAAA,iBAAiB,GAAG,EAApB;AACD;;AACDA,IAAAA,iBAAiB,CAACI,IAAlB,CAAuBF,IAAvB;;AACA,QAAIC,KAAK,KAAKX,QAAQ,CAACa,MAAT,GAAkB,CAA5B,IAAiCF,KAAK,GAAG,CAAR,KAAc,CAAnD,EAAsD;AACpDJ,MAAAA,eAAe,CAACK,IAAhB,CAAqBJ,iBAArB;AACD;AACF,GATD;AAUE,sBACE,oBAAC,yBAAD;AAA2B,IAAA,UAAU,EAAEf,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADD,eAEE,oBAAC,MAAD;AACE,IAAA,QAAQ,EAAEF,KADZ;AAEE,IAAA,GAAG,EAAEc,QAFP;AAGE,IAAA,YAAY,EAAEZ,UAAU,GAAG,CAAH,GAAOI,UAAU,GAAG,CAAH,GAAO,CAHlD;AAIE,IAAA,YAAY,EAAE,IAJhB;AAKE,IAAA,aAAa,EAAE,IALjB;AAME,IAAA,QAAQ,MANV;AAOE,IAAA,YAAY,EAAE,KAPhB;AAQE,IAAA,aAAa,EAAE,IARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGU,eAAe,CAACO,GAAhB,CAAoBC,KAAK,IACxBA,KAAK,CAACD,GAAN,CAAUJ,IAAI,iBACZ,oBAAC,YAAD;AAAc,IAAA,GAAG,EAAEA,IAAI,CAACM,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAEC,OAAO,CAAE,kCAAiCP,IAAI,CAACQ,QAAS,EAAjD,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeR,IAAI,CAACS,IAApB,CAFF,CADF,CADD,CAVH,CAFF,CADF;AA0BH,CAvED;;AAyEA,eAAe9B,gBAAf","sourcesContent":["import React, { useState, useRef, useEffect, useContext } from \"react\";\nimport { CategoriesSliderContainer, Caption, CategoryItem, CategoryImage, CategoryName} from \"./categories-slider.styles\";\nimport categoriesData from \"../../../data/category\";\nimport Slider from \"react-slick\";\nimport AppContext from \"../../../context/app-viewport.context\";\nimport {getCategoryList} from \"../../../utils/connectDB\";\n\n\n\nconst CategoriesSlider = (props) => {\n  const [slide, setSlide] = useState(null)\n  const [mobileView, setMobileView] = useState(window.innerWidth < 600);\n  const [tabletView, setTabletView] = useState(window.innerWidth < 992);\n  const width = useContext(AppContext);\n  const [category, setCategory] = useState([]);\n  useEffect(() => {\n    let _mounted = true ; \n    getCategoryList().then(data => {\n      if(_mounted){\n        setCategory(data);\n      }\n    })\n    return () => _mounted = false ;\n  }, [getCategoryList]);\n\n  useEffect(() => {\n    if (width < 600) {\n      setMobileView(true);\n    } else {\n      setMobileView(false);\n    }\n    if (width < 992) {\n      setTabletView(true);\n    } else {\n      setTabletView(false);\n    }\n  }, [width]);\n  const slideRef = useRef(null);\n  useEffect(() => {  \n    setSlide(slideRef.current)\n  }, [slideRef]);  \n  \n  let categoriesGroup = [];\n  let categoriesPerPage = [];\n  category.forEach((item, index) => {\n    if (index !== 0 && index % 4 === 0) {\n      categoriesGroup.push(categoriesPerPage);\n      categoriesPerPage = [];\n    }\n    categoriesPerPage.push(item);\n    if (index === category.length - 1 && index % 4 !== 0) {\n      categoriesGroup.push(categoriesPerPage);\n    }\n  });\n    return (\n      <CategoriesSliderContainer mobileView={mobileView}>\n       <Caption>Danh mục sản phẩm</Caption>\n        <Slider\n          asNavFor={slide}\n          ref={slideRef}\n          slidesToShow={mobileView ? 2 : tabletView ? 3 : 4}\n          swipeToSlide={true}\n          focusOnSelect={true}        \n          autoplay\n          pauseOnHover={false}\n          autoplaySpeed={2000}\n        >\n          {categoriesGroup.map(group => \n            group.map(item =>(\n              <CategoryItem key={item.id}>\n                <CategoryImage src={require(`../../../assets/img/categories/${item.imageUrl}`)}/>\n                <CategoryName>{item.name}</CategoryName>              \n              </CategoryItem>              \n            ))\n          )}\n        </Slider>\n     \n      </CategoriesSliderContainer>\n    );\n  \n}\n\nexport default CategoriesSlider;\n"]},"metadata":{},"sourceType":"module"}