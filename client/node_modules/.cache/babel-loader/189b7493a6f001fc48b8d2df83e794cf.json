{"ast":null,"code":"export const setLikeForComment = (comments, commentId, userId) => {\n  return comments.map(comment => {\n    if (comment._id == commentId) {\n      comment.likes.push(userId);\n    }\n\n    return comment;\n  });\n};\nexport const setUnlikeForComment = (comments, commentId, userId) => {\n  return comments.map(comment => {\n    if (comment._id == commentId) {\n      comment.likes = comment.likes.filter(_id => _id != userId);\n    }\n\n    return comment;\n  });\n};\nexport const setDislikeForComment = (comments, commentId, userId) => {\n  return comments.map(comment => {\n    if (comment._id == commentId) {\n      comment.likes.push(userId);\n    }\n\n    return comment;\n  });\n};\nexport const setUndislikeForComment = (comments, commentId, userId) => {\n  return comments.map(comment => {\n    if (comment._id == commentId) {\n      comment.likes = comment.likes.filter(_id => _id != userId);\n    }\n\n    return comment;\n  });\n};","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/redux/product-comment-review/product-comment-review.utils.js"],"names":["setLikeForComment","comments","commentId","userId","map","comment","_id","likes","push","setUnlikeForComment","filter","setDislikeForComment","setUndislikeForComment"],"mappings":"AAAA,OAAO,MAAMA,iBAAiB,GAAG,CAACC,QAAD,EAAWC,SAAX,EAAsBC,MAAtB,KAAiC;AAChE,SAAOF,QAAQ,CAACG,GAAT,CAAcC,OAAD,IAAa;AAC/B,QAAIA,OAAO,CAACC,GAAR,IAAeJ,SAAnB,EAA8B;AAC5BG,MAAAA,OAAO,CAACE,KAAR,CAAcC,IAAd,CAAmBL,MAAnB;AACD;;AACD,WAAOE,OAAP;AACD,GALM,CAAP;AAMD,CAPM;AASP,OAAO,MAAMI,mBAAmB,GAAG,CAACR,QAAD,EAAWC,SAAX,EAAsBC,MAAtB,KAAiC;AAClE,SAAOF,QAAQ,CAACG,GAAT,CAAcC,OAAD,IAAa;AAC/B,QAAIA,OAAO,CAACC,GAAR,IAAeJ,SAAnB,EAA8B;AAC5BG,MAAAA,OAAO,CAACE,KAAR,GAAgBF,OAAO,CAACE,KAAR,CAAcG,MAAd,CAAsBJ,GAAD,IAASA,GAAG,IAAIH,MAArC,CAAhB;AACD;;AACD,WAAOE,OAAP;AACD,GALM,CAAP;AAMD,CAPM;AAQP,OAAO,MAAMM,oBAAoB,GAAG,CAACV,QAAD,EAAWC,SAAX,EAAsBC,MAAtB,KAAiC;AACnE,SAAOF,QAAQ,CAACG,GAAT,CAAcC,OAAD,IAAa;AAC/B,QAAIA,OAAO,CAACC,GAAR,IAAeJ,SAAnB,EAA8B;AAC5BG,MAAAA,OAAO,CAACE,KAAR,CAAcC,IAAd,CAAmBL,MAAnB;AACD;;AACD,WAAOE,OAAP;AACD,GALM,CAAP;AAMD,CAPM;AASP,OAAO,MAAMO,sBAAsB,GAAG,CAACX,QAAD,EAAWC,SAAX,EAAsBC,MAAtB,KAAiC;AACrE,SAAOF,QAAQ,CAACG,GAAT,CAAcC,OAAD,IAAa;AAC/B,QAAIA,OAAO,CAACC,GAAR,IAAeJ,SAAnB,EAA8B;AAC5BG,MAAAA,OAAO,CAACE,KAAR,GAAgBF,OAAO,CAACE,KAAR,CAAcG,MAAd,CAAsBJ,GAAD,IAASA,GAAG,IAAIH,MAArC,CAAhB;AACD;;AACD,WAAOE,OAAP;AACD,GALM,CAAP;AAMD,CAPM","sourcesContent":["export const setLikeForComment = (comments, commentId, userId) => {\n  return comments.map((comment) => {\n    if (comment._id == commentId) {\n      comment.likes.push(userId);\n    }\n    return comment;\n  });\n};\n\nexport const setUnlikeForComment = (comments, commentId, userId) => {\n  return comments.map((comment) => {\n    if (comment._id == commentId) {\n      comment.likes = comment.likes.filter((_id) => _id != userId);\n    }\n    return comment;\n  });\n};\nexport const setDislikeForComment = (comments, commentId, userId) => {\n  return comments.map((comment) => {\n    if (comment._id == commentId) {\n      comment.likes.push(userId);\n    }\n    return comment;\n  });\n};\n\nexport const setUndislikeForComment = (comments, commentId, userId) => {\n  return comments.map((comment) => {\n    if (comment._id == commentId) {\n      comment.likes = comment.likes.filter((_id) => _id != userId);\n    }\n    return comment;\n  });\n};\n"]},"metadata":{},"sourceType":"module"}