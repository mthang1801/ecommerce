{"ast":null,"code":"import { put, takeLatest, call, all } from \"redux-saga/effects\";\nimport { registerSuccess, registerFail } from \"./user.actions\";\nimport userActionTypes from \"./user.types\";\nimport axios from \"axios\";\n\nfunction* register({\n  payload: {\n    name,\n    email,\n    password\n  }\n}) {\n  try {\n    console.log(name, email, password);\n    const data = yield call(() => axios.post(\"/user/register\", {\n      name,\n      email,\n      password\n    }));\n    console.log(data); // localStorage.setItem(\"userToken\", token);\n    // localStorage.setItem(\"expDate\", new Date(Date.now() + 60 * 60 * 1000));\n    // yield put(registerSuccess(user));\n  } catch (error) {\n    yield put(registerFail(error.message));\n  }\n}\n\nfunction* onRegister() {\n  yield takeLatest(userActionTypes.REGISTER_START, register);\n}\n\nexport default function* userSaga() {\n  yield all([call(onRegister)]);\n}","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/redux/user/user.saga.js"],"names":["put","takeLatest","call","all","registerSuccess","registerFail","userActionTypes","axios","register","payload","name","email","password","console","log","data","post","error","message","onRegister","REGISTER_START","userSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,SAASC,eAAT,EAA0BC,YAA1B,QAA8C,gBAA9C;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,UAAUC,QAAV,CAAmB;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf;AAAX,CAAnB,EAA2D;AACzD,MAAI;AACFC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EAAkBC,KAAlB,EAAyBC,QAAzB;AACA,UAAMG,IAAI,GAAG,MAAMb,IAAI,CAAC,MACtBK,KAAK,CAACS,IAAN,CAAW,gBAAX,EAA6B;AAAEN,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA;AAAf,KAA7B,CADqB,CAAvB;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ,EALE,CAMF;AACA;AACA;AACD,GATD,CASE,OAAOE,KAAP,EAAc;AACd,UAAMjB,GAAG,CAACK,YAAY,CAACY,KAAK,CAACC,OAAP,CAAb,CAAT;AACD;AACF;;AAED,UAAUC,UAAV,GAAuB;AACrB,QAAMlB,UAAU,CAACK,eAAe,CAACc,cAAjB,EAAiCZ,QAAjC,CAAhB;AACD;;AAED,eAAe,UAAUa,QAAV,GAAqB;AAClC,QAAMlB,GAAG,CAAC,CAACD,IAAI,CAACiB,UAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { put, takeLatest, call, all } from \"redux-saga/effects\";\nimport { registerSuccess, registerFail } from \"./user.actions\";\nimport userActionTypes from \"./user.types\";\nimport axios from \"axios\";\nfunction* register({ payload: { name, email, password } }) {\n  try {\n    console.log(name, email, password);\n    const data = yield call(() =>\n      axios.post(\"/user/register\", { name, email, password })\n    );\n    console.log(data);\n    // localStorage.setItem(\"userToken\", token);\n    // localStorage.setItem(\"expDate\", new Date(Date.now() + 60 * 60 * 1000));\n    // yield put(registerSuccess(user));\n  } catch (error) {\n    yield put(registerFail(error.message));\n  }\n}\n\nfunction* onRegister() {\n  yield takeLatest(userActionTypes.REGISTER_START, register);\n}\n\nexport default function* userSaga() {\n  yield all([call(onRegister)]);\n}\n"]},"metadata":{},"sourceType":"module"}