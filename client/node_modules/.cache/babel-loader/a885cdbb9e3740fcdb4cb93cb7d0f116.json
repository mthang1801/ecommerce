{"ast":null,"code":"import orderedActionTypes from \"./ordered.styles\";\n\nconst fetchOrderedListStart = () => ({\n  type: orderedActionTypes.FETCH_ORDERED_LIST_START\n});\n\nconst fetchOrderedListSuccess = orderedList => ({\n  type: orderedActionTypes.FETCH_ORDERED_LIST_SUCCESS,\n  payload: orderedList\n});\n\nconst fetchOrderedListFail = error => ({\n  type: orderedActionTypes.FETCH_ORDERED_LIST_FAIL,\n  payload: error.message\n});\n\nexport const fetchOrderedList = () => async dispatch => {\n  try {\n    dispatch(fetchOrderedListStart());\n    auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const orderedList = await firestore.collection(\"ordered\").where(\"userId\", \"==\", userAuth.uid).get();\n        const orderedListToMap = orderedList.docs.map(ordered => {\n          return {\n            id: ordered.id,\n            ...ordered.data()\n          };\n        });\n        dispatch(fetchOrderedListSuccess(orderedListToMap));\n      }\n    });\n  } catch (error) {\n    dispatch(fetchOrderedListFail(error.message));\n  }\n};","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/redux/ordered/ordered.actions.js"],"names":["orderedActionTypes","fetchOrderedListStart","type","FETCH_ORDERED_LIST_START","fetchOrderedListSuccess","orderedList","FETCH_ORDERED_LIST_SUCCESS","payload","fetchOrderedListFail","error","FETCH_ORDERED_LIST_FAIL","message","fetchOrderedList","dispatch","auth","onAuthStateChanged","userAuth","firestore","collection","where","uid","get","orderedListToMap","docs","map","ordered","id","data"],"mappings":"AAAA,OAAOA,kBAAP,MAA+B,kBAA/B;;AACA,MAAMC,qBAAqB,GAAG,OAAO;AACnCC,EAAAA,IAAI,EAAEF,kBAAkB,CAACG;AADU,CAAP,CAA9B;;AAIA,MAAMC,uBAAuB,GAAIC,WAAD,KAAkB;AAChDH,EAAAA,IAAI,EAAEF,kBAAkB,CAACM,0BADuB;AAEhDC,EAAAA,OAAO,EAAEF;AAFuC,CAAlB,CAAhC;;AAKA,MAAMG,oBAAoB,GAAIC,KAAD,KAAY;AACvCP,EAAAA,IAAI,EAAEF,kBAAkB,CAACU,uBADc;AAEvCH,EAAAA,OAAO,EAAEE,KAAK,CAACE;AAFwB,CAAZ,CAA7B;;AAKA,OAAO,MAAMC,gBAAgB,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACxD,MAAI;AACFA,IAAAA,QAAQ,CAACZ,qBAAqB,EAAtB,CAAR;AACAa,IAAAA,IAAI,CAACC,kBAAL,CAAwB,MAAOC,QAAP,IAAoB;AAC1C,UAAIA,QAAJ,EAAc;AACZ,cAAMX,WAAW,GAAG,MAAMY,SAAS,CAChCC,UADuB,CACZ,SADY,EAEvBC,KAFuB,CAEjB,QAFiB,EAEP,IAFO,EAEDH,QAAQ,CAACI,GAFR,EAGvBC,GAHuB,EAA1B;AAIA,cAAMC,gBAAgB,GAAGjB,WAAW,CAACkB,IAAZ,CAAiBC,GAAjB,CAAsBC,OAAD,IAAa;AACzD,iBAAO;AAAEC,YAAAA,EAAE,EAAED,OAAO,CAACC,EAAd;AAAkB,eAAGD,OAAO,CAACE,IAAR;AAArB,WAAP;AACD,SAFwB,CAAzB;AAGAd,QAAAA,QAAQ,CAACT,uBAAuB,CAACkB,gBAAD,CAAxB,CAAR;AACD;AACF,KAXD;AAYD,GAdD,CAcE,OAAOb,KAAP,EAAc;AACdI,IAAAA,QAAQ,CAACL,oBAAoB,CAACC,KAAK,CAACE,OAAP,CAArB,CAAR;AACD;AACF,CAlBM","sourcesContent":["import orderedActionTypes from \"./ordered.styles\";\nconst fetchOrderedListStart = () => ({\n  type: orderedActionTypes.FETCH_ORDERED_LIST_START,\n});\n\nconst fetchOrderedListSuccess = (orderedList) => ({\n  type: orderedActionTypes.FETCH_ORDERED_LIST_SUCCESS,\n  payload: orderedList,\n});\n\nconst fetchOrderedListFail = (error) => ({\n  type: orderedActionTypes.FETCH_ORDERED_LIST_FAIL,\n  payload: error.message,\n});\n\nexport const fetchOrderedList = () => async (dispatch) => {\n  try {\n    dispatch(fetchOrderedListStart());\n    auth.onAuthStateChanged(async (userAuth) => {\n      if (userAuth) {\n        const orderedList = await firestore\n          .collection(\"ordered\")\n          .where(\"userId\", \"==\", userAuth.uid)\n          .get();\n        const orderedListToMap = orderedList.docs.map((ordered) => {\n          return { id: ordered.id, ...ordered.data() };\n        });\n        dispatch(fetchOrderedListSuccess(orderedListToMap));\n      }\n    });\n  } catch (error) {\n    dispatch(fetchOrderedListFail(error.message));\n  }\n};\n"]},"metadata":{},"sourceType":"module"}