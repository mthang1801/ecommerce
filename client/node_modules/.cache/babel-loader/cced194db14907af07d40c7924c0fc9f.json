{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Product-Detail/comment-reviews-item/comment-reviews-item.component.jsx\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { CommentReviewsItemWrapper, Avatar, Row, ReadMore, CommentText, ButtonLink, TextArea, ResponseComment, ResponseWrapper } from \"./comment-reviews-item.styles\";\nimport Moment from \"react-moment\";\nimport Button from \"@material-ui/core/Button\";\nimport { FcBusinessman } from \"react-icons/fc\";\nimport { connect } from \"react-redux\";\nimport { selectCurrentUser } from \"../../../redux/user/user.selectors\";\nimport { selectCommentResponses } from \"../../../redux/product-comment-review/product-comment-review.selectors\";\nimport { createStructuredSelector } from \"reselect\";\nimport { withRouter, Redirect, Link } from \"react-router-dom\";\nimport { AiOutlineLike, AiOutlineDislike } from \"react-icons/ai\";\nimport { postLikeOrUnlikeComment, postDislikeOrUndislikeComment, postResponseComment, postLikeOrUnlikeResponseComment, postDislikeOrUndislikeResponseComment, postResponseToResponseComment } from \"../../../redux/product-comment-review/product-comment-review.actions\";\nimport ResponseItem from \"../response-item/response-item.component\";\n\nconst CommentReviewsItem = ({\n  comment,\n  product,\n  currentUser,\n  match,\n  history,\n  postLikeOrUnlikeComment,\n  postDislikeOrUndislikeComment,\n  postResponseComment,\n  responses,\n  postLikeOrUnlikeResponseComment,\n  postDislikeOrUndislikeResponseComment,\n  postResponseToResponseComment\n}) => {\n  const commentItemReadMore = useRef(null);\n  const responseRef = useRef(null);\n  const commentResponseRef = useRef(null);\n  const [readMore, setReadMore] = useState(false);\n  const [showReadMore, setShowReadMore] = useState(false);\n  const [text, setText] = useState(\"\");\n  const [isResponseComment, setIsReponseComment] = useState(false);\n  const [responseComment, setResponseComment] = useState(`${comment.user.name}, `);\n  const [responseList, setResponseList] = useState([]);\n  const timeShowResponse = 700;\n  useEffect(() => {\n    console.log(\"change\");\n    setResponseList(responses.filter(response => response.comment == comment._id));\n  }, [responses]);\n  useEffect(() => {\n    if (comment.text.length > 200) {\n      setShowReadMore(true);\n      setText(comment.text.substr(0, 200));\n    } else {\n      setShowReadMore(false);\n      setText(comment.text);\n    }\n  }, [comment]);\n\n  const handleSetReadMore = () => {\n    if (readMore) {\n      setReadMore(false);\n      setText(comment.text.substr(0, 200));\n    } else {\n      setReadMore(true);\n      setText(comment.text);\n    }\n  };\n\n  const handleClickLikeButton = () => {\n    if (!currentUser) {\n      let splitUrl = match.url.split(\"/\");\n      splitUrl[splitUrl.length - 1] = encodeURIComponent(splitUrl[splitUrl.length - 1]);\n      const encodeUrl = splitUrl.join(\"/\");\n      return history.push({\n        pathname: \"/auth\",\n        state: {\n          from: encodeUrl\n        }\n      });\n    }\n\n    postLikeOrUnlikeComment(comment._id, currentUser._id);\n  };\n\n  const handleClickDislikeButton = () => {\n    if (!currentUser) {\n      let splitUrl = match.url.split(\"/\");\n      splitUrl[splitUrl.length - 1] = encodeURIComponent(splitUrl[splitUrl.length - 1]);\n      const encodeUrl = splitUrl.join(\"/\");\n      return history.push({\n        pathname: \"/auth\",\n        state: {\n          from: encodeUrl\n        }\n      });\n    }\n\n    postDislikeOrUndislikeComment(comment._id, currentUser._id);\n  };\n\n  const handleClickResponseCommentButton = () => {\n    if (!currentUser) {\n      let splitUrl = match.url.split(\"/\");\n      splitUrl[splitUrl.length - 1] = encodeURIComponent(splitUrl[splitUrl.length - 1]);\n      const encodeUrl = splitUrl.join(\"/\");\n      return history.push({\n        pathname: \"/auth\",\n        state: {\n          from: encodeUrl\n        }\n      });\n    }\n\n    setIsReponseComment(true);\n    setTimeout(() => {\n      responseRef.current.focus();\n      responseRef.current.setSelectionRange(responseRef.current.value.length, responseRef.current.value.length);\n    }, timeShowResponse);\n  };\n\n  const handleSubmitResponseComment = e => {\n    e.preventDefault();\n\n    if (!responseComment) {\n      return;\n    }\n\n    postResponseComment(comment._id, responseComment);\n  };\n\n  const handleClickLikeResponseButton = responseId => {\n    if (!currentUser) {\n      let splitUrl = match.url.split(\"/\");\n      splitUrl[splitUrl.length - 1] = encodeURIComponent(splitUrl[splitUrl.length - 1]);\n      const encodeUrl = splitUrl.join(\"/\");\n      return history.push({\n        pathname: \"/auth\",\n        state: {\n          from: encodeUrl\n        }\n      });\n    }\n\n    postLikeOrUnlikeResponseComment(responseId, currentUser._id);\n  };\n\n  const handleClickDislikeReponseButton = responseId => {\n    if (!currentUser) {\n      let splitUrl = match.url.split(\"/\");\n      splitUrl[splitUrl.length - 1] = encodeURIComponent(splitUrl[splitUrl.length - 1]);\n      const encodeUrl = splitUrl.join(\"/\");\n      return history.push({\n        pathname: \"/auth\",\n        state: {\n          from: encodeUrl\n        }\n      });\n    }\n\n    postDislikeOrUndislikeResponseComment(responseId, currentUser._id);\n  };\n\n  const handleSubmitResponseToResponseComment = text => {\n    if (!text) {\n      return;\n    }\n\n    postResponseToResponseComment(comment._id, currentUser._id, text);\n  };\n\n  return /*#__PURE__*/React.createElement(CommentReviewsItemWrapper, {\n    ref: commentItemReadMore,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    src: comment.user.avatar === \"avatar-default.png\" ? `http://localhost:5000/images/${comment.user.avatar}` : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      flexDirection: \"column\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CommentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  }, comment.user.name, \" \", comment.user._id === product.user._id ? /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"#3f51b5\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 19\n    }\n  }, \"Nh\\xE0 b\\xE1n h\\xE0ng \", /*#__PURE__*/React.createElement(FcBusinessman, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 34\n    }\n  })) : \"\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"rgba(0,0,0,0.75)\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Moment, {\n    format: \"DD-MM-YYYY HH:mm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }, comment.createdAt)), \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }, text, \" \", showReadMore ? /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  }, !readMore ? \"...\" : \" \", /*#__PURE__*/React.createElement(ReadMore, {\n    onClick: handleSetReadMore,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 19\n    }\n  }, !readMore ? \"Xem thêm\" : \"Thu gọn\")) : null, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ButtonLink, {\n    onClick: handleClickLikeButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: \"1em\",\n      verticalAlign: \"middle\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(AiOutlineLike, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  })), \" \", \"(\", comment.likes.length, \")\"), /*#__PURE__*/React.createElement(ButtonLink, {\n    onClick: handleClickDislikeButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: \"1em\",\n      verticalAlign: \"middle\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(AiOutlineDislike, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }\n  })), \" \", \"(\", comment.dislikes.length, \")\"), currentUser && currentUser._id !== comment.user._id || !currentUser ? /*#__PURE__*/React.createElement(ButtonLink, {\n    onClick: handleClickResponseCommentButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 15\n    }\n  }, \"Tr\\u1EA3 l\\u1EDDi\") : null), isResponseComment ? /*#__PURE__*/React.createElement(ResponseComment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    timeShowResponse: timeShowResponse,\n    ref: responseRef,\n    value: responseComment,\n    onChange: e => setResponseComment(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    style: {\n      margin: \"10px 0\"\n    },\n    size: \"small\",\n    onClick: handleSubmitResponseComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 15\n    }\n  }, \"G\\u1EEDi b\\xECnh lu\\u1EADn\")) : null, /*#__PURE__*/React.createElement(ResponseWrapper, {\n    ref: commentResponseRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 11\n    }\n  }, responseList.length ? responseList.map(response => /*#__PURE__*/React.createElement(ResponseItem, {\n    key: response._id,\n    product: product,\n    response: response,\n    comment: comment,\n    currentUser: currentUser,\n    handleClickLikeResponseButton: responseId => handleClickLikeResponseButton(responseId),\n    handleClickDislikeReponseButton: responseId => handleClickDislikeReponseButton(responseId),\n    handleSubmitResponseToResponseComment: text => handleSubmitResponseToResponseComment(text),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 19\n    }\n  })) : null))));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  responses: selectCommentResponses\n});\n\nconst mapDispatchToProps = dispatch => ({\n  postDislikeOrUndislikeComment: (commentId, userId) => dispatch(postDislikeOrUndislikeComment(commentId, userId)),\n  postLikeOrUnlikeComment: (commentId, userId) => dispatch(postLikeOrUnlikeComment(commentId, userId)),\n  postResponseComment: (commentId, text) => dispatch(postResponseComment(commentId, text)),\n  postLikeOrUnlikeResponseComment: (responseId, userId) => dispatch(postLikeOrUnlikeResponseComment(responseId, userId)),\n  postDislikeOrUndislikeResponseComment: (responseId, userId) => dispatch(postDislikeOrUndislikeResponseComment(responseId, userId)),\n  postResponseToResponseComment: (commentId, userId, text) => dispatch(postResponseToResponseComment(commentId, userId, text))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(CommentReviewsItem));","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Product-Detail/comment-reviews-item/comment-reviews-item.component.jsx"],"names":["React","useEffect","useState","useRef","CommentReviewsItemWrapper","Avatar","Row","ReadMore","CommentText","ButtonLink","TextArea","ResponseComment","ResponseWrapper","Moment","Button","FcBusinessman","connect","selectCurrentUser","selectCommentResponses","createStructuredSelector","withRouter","Redirect","Link","AiOutlineLike","AiOutlineDislike","postLikeOrUnlikeComment","postDislikeOrUndislikeComment","postResponseComment","postLikeOrUnlikeResponseComment","postDislikeOrUndislikeResponseComment","postResponseToResponseComment","ResponseItem","CommentReviewsItem","comment","product","currentUser","match","history","responses","commentItemReadMore","responseRef","commentResponseRef","readMore","setReadMore","showReadMore","setShowReadMore","text","setText","isResponseComment","setIsReponseComment","responseComment","setResponseComment","user","name","responseList","setResponseList","timeShowResponse","console","log","filter","response","_id","length","substr","handleSetReadMore","handleClickLikeButton","splitUrl","url","split","encodeURIComponent","encodeUrl","join","push","pathname","state","from","handleClickDislikeButton","handleClickResponseCommentButton","setTimeout","current","focus","setSelectionRange","value","handleSubmitResponseComment","e","preventDefault","handleClickLikeResponseButton","responseId","handleClickDislikeReponseButton","handleSubmitResponseToResponseComment","avatar","flexDirection","color","createdAt","fontSize","verticalAlign","likes","dislikes","target","margin","map","mapStateToProps","mapDispatchToProps","dispatch","commentId","userId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SACEC,yBADF,EAEEC,MAFF,EAGEC,GAHF,EAIEC,QAJF,EAKEC,WALF,EAMEC,UANF,EAOEC,QAPF,EAQEC,eARF,EASEC,eATF,QAUO,+BAVP;AAWA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,oCAAlC;AACA,SAASC,sBAAT,QAAuC,wEAAvC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,UAAT,EAAqBC,QAArB,EAA+BC,IAA/B,QAA2C,kBAA3C;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,gBAAhD;AACA,SACEC,uBADF,EAEEC,6BAFF,EAGEC,mBAHF,EAIEC,+BAJF,EAKEC,qCALF,EAMEC,6BANF,QAOO,sEAPP;AAQA,OAAOC,YAAP,MAAyB,0CAAzB;;AACA,MAAMC,kBAAkB,GAAG,CAAC;AAC1BC,EAAAA,OAD0B;AAE1BC,EAAAA,OAF0B;AAG1BC,EAAAA,WAH0B;AAI1BC,EAAAA,KAJ0B;AAK1BC,EAAAA,OAL0B;AAM1BZ,EAAAA,uBAN0B;AAO1BC,EAAAA,6BAP0B;AAQ1BC,EAAAA,mBAR0B;AAS1BW,EAAAA,SAT0B;AAU1BV,EAAAA,+BAV0B;AAW1BC,EAAAA,qCAX0B;AAY1BC,EAAAA;AAZ0B,CAAD,KAcrB;AACJ,QAAMS,mBAAmB,GAAGpC,MAAM,CAAC,IAAD,CAAlC;AACA,QAAMqC,WAAW,GAAGrC,MAAM,CAAC,IAAD,CAA1B;AACA,QAAMsC,kBAAkB,GAAGtC,MAAM,CAAC,IAAD,CAAjC;AACA,QAAM,CAACuC,QAAD,EAAWC,WAAX,IAA0BzC,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAAC0C,YAAD,EAAeC,eAAf,IAAkC3C,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAAC4C,IAAD,EAAOC,OAAP,IAAkB7C,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAAC8C,iBAAD,EAAoBC,mBAApB,IAA2C/C,QAAQ,CAAC,KAAD,CAAzD;AACA,QAAM,CAACgD,eAAD,EAAkBC,kBAAlB,IAAwCjD,QAAQ,CACnD,GAAE+B,OAAO,CAACmB,IAAR,CAAaC,IAAK,IAD+B,CAAtD;AAGA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCrD,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAMsD,gBAAgB,GAAG,GAAzB;AACAvD,EAAAA,SAAS,CAAC,MAAM;AACdwD,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAH,IAAAA,eAAe,CACbjB,SAAS,CAACqB,MAAV,CAAkBC,QAAD,IAAcA,QAAQ,CAAC3B,OAAT,IAAoBA,OAAO,CAAC4B,GAA3D,CADa,CAAf;AAGD,GALQ,EAKP,CAACvB,SAAD,CALO,CAAT;AAMArC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgC,OAAO,CAACa,IAAR,CAAagB,MAAb,GAAsB,GAA1B,EAA+B;AAC7BjB,MAAAA,eAAe,CAAC,IAAD,CAAf;AACAE,MAAAA,OAAO,CAACd,OAAO,CAACa,IAAR,CAAaiB,MAAb,CAAoB,CAApB,EAAuB,GAAvB,CAAD,CAAP;AACD,KAHD,MAGO;AACLlB,MAAAA,eAAe,CAAC,KAAD,CAAf;AACAE,MAAAA,OAAO,CAACd,OAAO,CAACa,IAAT,CAAP;AACD;AACF,GARQ,EAQN,CAACb,OAAD,CARM,CAAT;;AASA,QAAM+B,iBAAiB,GAAG,MAAM;AAC9B,QAAItB,QAAJ,EAAc;AACZC,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAI,MAAAA,OAAO,CAACd,OAAO,CAACa,IAAR,CAAaiB,MAAb,CAAoB,CAApB,EAAuB,GAAvB,CAAD,CAAP;AACD,KAHD,MAGO;AACLpB,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAI,MAAAA,OAAO,CAACd,OAAO,CAACa,IAAT,CAAP;AACD;AACF,GARD;;AASA,QAAMmB,qBAAqB,GAAG,MAAM;AAClC,QAAI,CAAC9B,WAAL,EAAkB;AAChB,UAAI+B,QAAQ,GAAG9B,KAAK,CAAC+B,GAAN,CAAUC,KAAV,CAAgB,GAAhB,CAAf;AACAF,MAAAA,QAAQ,CAACA,QAAQ,CAACJ,MAAT,GAAkB,CAAnB,CAAR,GAAgCO,kBAAkB,CAChDH,QAAQ,CAACA,QAAQ,CAACJ,MAAT,GAAkB,CAAnB,CADwC,CAAlD;AAGA,YAAMQ,SAAS,GAAGJ,QAAQ,CAACK,IAAT,CAAc,GAAd,CAAlB;AACA,aAAOlC,OAAO,CAACmC,IAAR,CAAa;AAAEC,QAAAA,QAAQ,EAAE,OAAZ;AAAqBC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEL;AAAR;AAA5B,OAAb,CAAP;AACD;;AACD7C,IAAAA,uBAAuB,CAACQ,OAAO,CAAC4B,GAAT,EAAc1B,WAAW,CAAC0B,GAA1B,CAAvB;AACD,GAVD;;AAWA,QAAMe,wBAAwB,GAAG,MAAM;AACrC,QAAI,CAACzC,WAAL,EAAkB;AAChB,UAAI+B,QAAQ,GAAG9B,KAAK,CAAC+B,GAAN,CAAUC,KAAV,CAAgB,GAAhB,CAAf;AACAF,MAAAA,QAAQ,CAACA,QAAQ,CAACJ,MAAT,GAAkB,CAAnB,CAAR,GAAgCO,kBAAkB,CAChDH,QAAQ,CAACA,QAAQ,CAACJ,MAAT,GAAkB,CAAnB,CADwC,CAAlD;AAGA,YAAMQ,SAAS,GAAGJ,QAAQ,CAACK,IAAT,CAAc,GAAd,CAAlB;AACA,aAAOlC,OAAO,CAACmC,IAAR,CAAa;AAAEC,QAAAA,QAAQ,EAAE,OAAZ;AAAqBC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEL;AAAR;AAA5B,OAAb,CAAP;AACD;;AACD5C,IAAAA,6BAA6B,CAACO,OAAO,CAAC4B,GAAT,EAAc1B,WAAW,CAAC0B,GAA1B,CAA7B;AACD,GAVD;;AAWA,QAAMgB,gCAAgC,GAAG,MAAM;AAC7C,QAAI,CAAC1C,WAAL,EAAkB;AAChB,UAAI+B,QAAQ,GAAG9B,KAAK,CAAC+B,GAAN,CAAUC,KAAV,CAAgB,GAAhB,CAAf;AACAF,MAAAA,QAAQ,CAACA,QAAQ,CAACJ,MAAT,GAAkB,CAAnB,CAAR,GAAgCO,kBAAkB,CAChDH,QAAQ,CAACA,QAAQ,CAACJ,MAAT,GAAkB,CAAnB,CADwC,CAAlD;AAGA,YAAMQ,SAAS,GAAGJ,QAAQ,CAACK,IAAT,CAAc,GAAd,CAAlB;AACA,aAAOlC,OAAO,CAACmC,IAAR,CAAa;AAAEC,QAAAA,QAAQ,EAAE,OAAZ;AAAqBC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEL;AAAR;AAA5B,OAAb,CAAP;AACD;;AACDrB,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACA6B,IAAAA,UAAU,CAAC,MAAM;AACftC,MAAAA,WAAW,CAACuC,OAAZ,CAAoBC,KAApB;AACAxC,MAAAA,WAAW,CAACuC,OAAZ,CAAoBE,iBAApB,CACEzC,WAAW,CAACuC,OAAZ,CAAoBG,KAApB,CAA0BpB,MAD5B,EAEEtB,WAAW,CAACuC,OAAZ,CAAoBG,KAApB,CAA0BpB,MAF5B;AAID,KANS,EAMPN,gBANO,CAAV;AAOD,GAjBD;;AAkBA,QAAM2B,2BAA2B,GAAIC,CAAD,IAAO;AACzCA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI,CAACnC,eAAL,EAAsB;AACpB;AACD;;AAEDvB,IAAAA,mBAAmB,CAACM,OAAO,CAAC4B,GAAT,EAAcX,eAAd,CAAnB;AACD,GAPD;;AAQA,QAAMoC,6BAA6B,GAAIC,UAAD,IAAgB;AACpD,QAAI,CAACpD,WAAL,EAAkB;AAChB,UAAI+B,QAAQ,GAAG9B,KAAK,CAAC+B,GAAN,CAAUC,KAAV,CAAgB,GAAhB,CAAf;AACAF,MAAAA,QAAQ,CAACA,QAAQ,CAACJ,MAAT,GAAkB,CAAnB,CAAR,GAAgCO,kBAAkB,CAChDH,QAAQ,CAACA,QAAQ,CAACJ,MAAT,GAAkB,CAAnB,CADwC,CAAlD;AAGA,YAAMQ,SAAS,GAAGJ,QAAQ,CAACK,IAAT,CAAc,GAAd,CAAlB;AACA,aAAOlC,OAAO,CAACmC,IAAR,CAAa;AAAEC,QAAAA,QAAQ,EAAE,OAAZ;AAAqBC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEL;AAAR;AAA5B,OAAb,CAAP;AACD;;AACD1C,IAAAA,+BAA+B,CAAC2D,UAAD,EAAcpD,WAAW,CAAC0B,GAA1B,CAA/B;AACD,GAVD;;AAWA,QAAM2B,+BAA+B,GAAID,UAAD,IAAgB;AACtD,QAAI,CAACpD,WAAL,EAAkB;AAChB,UAAI+B,QAAQ,GAAG9B,KAAK,CAAC+B,GAAN,CAAUC,KAAV,CAAgB,GAAhB,CAAf;AACAF,MAAAA,QAAQ,CAACA,QAAQ,CAACJ,MAAT,GAAkB,CAAnB,CAAR,GAAgCO,kBAAkB,CAChDH,QAAQ,CAACA,QAAQ,CAACJ,MAAT,GAAkB,CAAnB,CADwC,CAAlD;AAGA,YAAMQ,SAAS,GAAGJ,QAAQ,CAACK,IAAT,CAAc,GAAd,CAAlB;AACA,aAAOlC,OAAO,CAACmC,IAAR,CAAa;AAAEC,QAAAA,QAAQ,EAAE,OAAZ;AAAqBC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEL;AAAR;AAA5B,OAAb,CAAP;AACD;;AACDzC,IAAAA,qCAAqC,CAAC0D,UAAD,EAAapD,WAAW,CAAC0B,GAAzB,CAArC;AACD,GAVD;;AAWA,QAAM4B,qCAAqC,GAAG3C,IAAI,IAAI;AACpD,QAAG,CAACA,IAAJ,EAAS;AACP;AACD;;AACDhB,IAAAA,6BAA6B,CAACG,OAAO,CAAC4B,GAAT,EAAc1B,WAAW,CAAC0B,GAA1B,EAAgCf,IAAhC,CAA7B;AACD,GALD;;AAMA,sBACE,oBAAC,yBAAD;AAA2B,IAAA,GAAG,EAAEP,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,GAAG,EACDN,OAAO,CAACmB,IAAR,CAAasC,MAAb,KAAwB,oBAAxB,GACK,gCAA+BzD,OAAO,CAACmB,IAAR,CAAasC,MAAO,EADxD,GAEI,IAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,aAAa,EAAE;AAAjB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG1D,OAAO,CAACmB,IAAR,CAAaC,IADhB,EACsB,GADtB,EAEGpB,OAAO,CAACmB,IAAR,CAAaS,GAAb,KAAqB3B,OAAO,CAACkB,IAAR,CAAaS,GAAlC,gBACC;AAAM,IAAA,KAAK,EAAE;AAAE+B,MAAAA,KAAK,EAAE;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CACe,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADf,CADD,GAKC,EAPJ,CADF,EAUY,GAVZ,eAWE;AAAM,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAAE;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmC3D,OAAO,CAAC4D,SAA3C,CADF,CAXF,EAaU,GAbV,CADF,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG/C,IADH,EACS,GADT,EAEGF,YAAY,gBACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACF,QAAD,GAAY,KAAZ,GAAoB,GADvB,eAEE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAEsB,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACtB,QAAD,GAAY,UAAZ,GAAyB,SAD5B,CAFF,CADW,GAOT,IATN,EASY,GATZ,CAhBF,CADF,eA6BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEuB,qBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,KAAK,EAAE;AAAE6B,MAAAA,QAAQ,EAAE,KAAZ;AAAmBC,MAAAA,aAAa,EAAE;AAAlC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAGU,GAHV,OAII9D,OAAO,CAAC+D,KAAR,CAAclC,MAJlB,MADF,eAOE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEc,wBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,KAAK,EAAE;AAAEkB,MAAAA,QAAQ,EAAE,KAAZ;AAAmBC,MAAAA,aAAa,EAAE;AAAlC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAGU,GAHV,OAII9D,OAAO,CAACgE,QAAR,CAAiBnC,MAJrB,MAPF,EAaI3B,WAAW,IAAIA,WAAW,CAAC0B,GAAZ,KAAoB5B,OAAO,CAACmB,IAAR,CAAaS,GAAjD,IACD,CAAC1B,WADA,gBAEC,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAE0C,gCAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFD,GAKG,IAlBN,CA7BF,EAiDG7B,iBAAiB,gBAChB,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACE,IAAA,gBAAgB,EAAEQ,gBADpB;AAEE,IAAA,GAAG,EAAEhB,WAFP;AAGE,IAAA,KAAK,EAAEU,eAHT;AAIE,IAAA,QAAQ,EAAGkC,CAAD,IAAOjC,kBAAkB,CAACiC,CAAC,CAACc,MAAF,CAAShB,KAAV,CAJrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,OAAO,EAAC,WAFV;AAGE,IAAA,KAAK,EAAE;AAAEiB,MAAAA,MAAM,EAAE;AAAV,KAHT;AAIE,IAAA,IAAI,EAAC,OAJP;AAKE,IAAA,OAAO,EAAEhB,2BALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAPF,CADgB,GAkBd,IAnEN,eAoEE,oBAAC,eAAD;AAAiB,IAAA,GAAG,EAAE1C,kBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGa,YAAY,CAACQ,MAAb,GACGR,YAAY,CAAC8C,GAAb,CAAkBxC,QAAD,iBACf,oBAAC,YAAD;AACE,IAAA,GAAG,EAAEA,QAAQ,CAACC,GADhB;AAEE,IAAA,OAAO,EAAE3B,OAFX;AAGE,IAAA,QAAQ,EAAE0B,QAHZ;AAIE,IAAA,OAAO,EAAE3B,OAJX;AAKE,IAAA,WAAW,EAAEE,WALf;AAME,IAAA,6BAA6B,EAAGoD,UAAD,IAAgBD,6BAA6B,CAACC,UAAD,CAN9E;AAOE,IAAA,+BAA+B,EAAGA,UAAD,IAAgBC,+BAA+B,CAACD,UAAD,CAPlF;AAQE,IAAA,qCAAqC,EAAGzC,IAAD,IAAU2C,qCAAqC,CAAC3C,IAAD,CARxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADH,GAaG,IAdN,CApEF,CARF,CADF,CADF;AAkGD,CAjOD;;AAkOA,MAAMuD,eAAe,GAAGlF,wBAAwB,CAAC;AAC/CgB,EAAAA,WAAW,EAAElB,iBADkC;AAE/CqB,EAAAA,SAAS,EAAEpB;AAFoC,CAAD,CAAhD;;AAIA,MAAMoF,kBAAkB,GAAIC,QAAD,KAAe;AACxC7E,EAAAA,6BAA6B,EAAE,CAAC8E,SAAD,EAAYC,MAAZ,KAC7BF,QAAQ,CAAC7E,6BAA6B,CAAC8E,SAAD,EAAYC,MAAZ,CAA9B,CAF8B;AAGxChF,EAAAA,uBAAuB,EAAE,CAAC+E,SAAD,EAAYC,MAAZ,KACvBF,QAAQ,CAAC9E,uBAAuB,CAAC+E,SAAD,EAAYC,MAAZ,CAAxB,CAJ8B;AAKxC9E,EAAAA,mBAAmB,EAAE,CAAC6E,SAAD,EAAY1D,IAAZ,KACnByD,QAAQ,CAAC5E,mBAAmB,CAAC6E,SAAD,EAAY1D,IAAZ,CAApB,CAN8B;AAOtClB,EAAAA,+BAA+B,EAAG,CAAC2D,UAAD,EAAakB,MAAb,KAAwBF,QAAQ,CAAC3E,+BAA+B,CAAC2D,UAAD,EAAakB,MAAb,CAAhC,CAP5B;AAQtC5E,EAAAA,qCAAqC,EAAG,CAAC0D,UAAD,EAAakB,MAAb,KAAwBF,QAAQ,CAAC1E,qCAAqC,CAAC0D,UAAD,EAAakB,MAAb,CAAtC,CARlC;AAStC3E,EAAAA,6BAA6B,EAAG,CAAC0E,SAAD,EAAYC,MAAZ,EAAoB3D,IAApB,KAA6ByD,QAAQ,CAACzE,6BAA6B,CAAC0E,SAAD,EAAYC,MAAZ,EAAoB3D,IAApB,CAA9B;AAT/B,CAAf,CAA3B;;AAWA,eAAe9B,OAAO,CACpBqF,eADoB,EAEpBC,kBAFoB,CAAP,CAGblF,UAAU,CAACY,kBAAD,CAHG,CAAf","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport {\n  CommentReviewsItemWrapper,\n  Avatar,\n  Row,\n  ReadMore,\n  CommentText,\n  ButtonLink,\n  TextArea,\n  ResponseComment,\n  ResponseWrapper,\n} from \"./comment-reviews-item.styles\";\nimport Moment from \"react-moment\";\nimport Button from \"@material-ui/core/Button\";\nimport { FcBusinessman } from \"react-icons/fc\";\nimport { connect } from \"react-redux\";\nimport { selectCurrentUser } from \"../../../redux/user/user.selectors\";\nimport { selectCommentResponses } from \"../../../redux/product-comment-review/product-comment-review.selectors\";\nimport { createStructuredSelector } from \"reselect\";\nimport { withRouter, Redirect, Link } from \"react-router-dom\";\nimport { AiOutlineLike, AiOutlineDislike } from \"react-icons/ai\";\nimport {\n  postLikeOrUnlikeComment,\n  postDislikeOrUndislikeComment,\n  postResponseComment,\n  postLikeOrUnlikeResponseComment,\n  postDislikeOrUndislikeResponseComment,\n  postResponseToResponseComment\n} from \"../../../redux/product-comment-review/product-comment-review.actions\";\nimport ResponseItem from \"../response-item/response-item.component\";\nconst CommentReviewsItem = ({\n  comment,\n  product,\n  currentUser,\n  match,\n  history,\n  postLikeOrUnlikeComment,\n  postDislikeOrUndislikeComment,\n  postResponseComment,\n  responses,\n  postLikeOrUnlikeResponseComment,\n  postDislikeOrUndislikeResponseComment,\n  postResponseToResponseComment\n  \n}) => {\n  const commentItemReadMore = useRef(null);\n  const responseRef = useRef(null);\n  const commentResponseRef = useRef(null);\n  const [readMore, setReadMore] = useState(false);\n  const [showReadMore, setShowReadMore] = useState(false);\n  const [text, setText] = useState(\"\");\n  const [isResponseComment, setIsReponseComment] = useState(false);\n  const [responseComment, setResponseComment] = useState(\n    `${comment.user.name}, `\n  );\n  const [responseList, setResponseList] = useState([]);\n  const timeShowResponse = 700;\n  useEffect(() => {\n    console.log(\"change\")   \n    setResponseList(\n      responses.filter((response) => response.comment == comment._id)\n    );\n  },[responses]);\n  useEffect(() => {\n    if (comment.text.length > 200) {\n      setShowReadMore(true);\n      setText(comment.text.substr(0, 200));\n    } else {\n      setShowReadMore(false);\n      setText(comment.text);\n    }\n  }, [comment]);\n  const handleSetReadMore = () => {\n    if (readMore) {\n      setReadMore(false);\n      setText(comment.text.substr(0, 200));\n    } else {\n      setReadMore(true);\n      setText(comment.text);\n    }\n  };\n  const handleClickLikeButton = () => {\n    if (!currentUser) {\n      let splitUrl = match.url.split(\"/\");\n      splitUrl[splitUrl.length - 1] = encodeURIComponent(\n        splitUrl[splitUrl.length - 1]\n      );\n      const encodeUrl = splitUrl.join(\"/\");\n      return history.push({ pathname: \"/auth\", state: { from: encodeUrl } });\n    }\n    postLikeOrUnlikeComment(comment._id, currentUser._id);\n  };\n  const handleClickDislikeButton = () => {\n    if (!currentUser) {\n      let splitUrl = match.url.split(\"/\");\n      splitUrl[splitUrl.length - 1] = encodeURIComponent(\n        splitUrl[splitUrl.length - 1]\n      );\n      const encodeUrl = splitUrl.join(\"/\");\n      return history.push({ pathname: \"/auth\", state: { from: encodeUrl } });\n    }\n    postDislikeOrUndislikeComment(comment._id, currentUser._id);\n  };\n  const handleClickResponseCommentButton = () => {\n    if (!currentUser) {\n      let splitUrl = match.url.split(\"/\");\n      splitUrl[splitUrl.length - 1] = encodeURIComponent(\n        splitUrl[splitUrl.length - 1]\n      );\n      const encodeUrl = splitUrl.join(\"/\");\n      return history.push({ pathname: \"/auth\", state: { from: encodeUrl } });\n    }\n    setIsReponseComment(true);\n    setTimeout(() => {\n      responseRef.current.focus();\n      responseRef.current.setSelectionRange(\n        responseRef.current.value.length,\n        responseRef.current.value.length\n      );\n    }, timeShowResponse);\n  };\n  const handleSubmitResponseComment = (e) => {\n    e.preventDefault();\n    if (!responseComment) {\n      return;\n    }\n\n    postResponseComment(comment._id, responseComment);\n  };\n  const handleClickLikeResponseButton = (responseId) => {\n    if (!currentUser) {\n      let splitUrl = match.url.split(\"/\");\n      splitUrl[splitUrl.length - 1] = encodeURIComponent(\n        splitUrl[splitUrl.length - 1]\n      );\n      const encodeUrl = splitUrl.join(\"/\");\n      return history.push({ pathname: \"/auth\", state: { from: encodeUrl } });\n    }  \n    postLikeOrUnlikeResponseComment(responseId , currentUser._id ) \n  };\n  const handleClickDislikeReponseButton = (responseId) => {\n    if (!currentUser) {\n      let splitUrl = match.url.split(\"/\");\n      splitUrl[splitUrl.length - 1] = encodeURIComponent(\n        splitUrl[splitUrl.length - 1]\n      );\n      const encodeUrl = splitUrl.join(\"/\");\n      return history.push({ pathname: \"/auth\", state: { from: encodeUrl } });\n    }   \n    postDislikeOrUndislikeResponseComment(responseId, currentUser._id)\n  };\n  const handleSubmitResponseToResponseComment = text => {\n    if(!text){\n      return ; \n    }\n    postResponseToResponseComment(comment._id, currentUser._id , text)\n  }\n  return (\n    <CommentReviewsItemWrapper ref={commentItemReadMore}>\n      <Row>\n        <Avatar\n          src={\n            comment.user.avatar === \"avatar-default.png\"\n              ? `http://localhost:5000/images/${comment.user.avatar}`\n              : null\n          }\n        />\n        <Row style={{ flexDirection: \"column\" }}>\n          <CommentText>\n            <p>\n              <strong>\n                {comment.user.name}{\" \"}\n                {comment.user._id === product.user._id ? (\n                  <span style={{ color: \"#3f51b5\" }}>\n                    Nhà bán hàng <FcBusinessman />\n                  </span>\n                ) : (\n                  \"\"\n                )}\n              </strong>{\" \"}\n              <span style={{ color: \"rgba(0,0,0,0.75)\" }}>\n                <Moment format=\"DD-MM-YYYY HH:mm\">{comment.createdAt}</Moment>\n              </span>{\" \"}\n            </p>\n            <p>\n              {text}{\" \"}\n              {showReadMore ? (\n                <span>\n                  {!readMore ? \"...\" : \" \"}\n                  <ReadMore onClick={handleSetReadMore}>\n                    {!readMore ? \"Xem thêm\" : \"Thu gọn\"}\n                  </ReadMore>\n                </span>\n              ) : null}{\" \"}\n            </p>\n          </CommentText>\n          <div>\n            <ButtonLink onClick={handleClickLikeButton}>\n              <span style={{ fontSize: \"1em\", verticalAlign: \"middle\" }}>\n                <AiOutlineLike />\n              </span>{\" \"}\n              ({comment.likes.length})\n            </ButtonLink>\n            <ButtonLink onClick={handleClickDislikeButton}>\n              <span style={{ fontSize: \"1em\", verticalAlign: \"middle\" }}>\n                <AiOutlineDislike />\n              </span>{\" \"}\n              ({comment.dislikes.length})\n            </ButtonLink>\n            {(currentUser && currentUser._id !== comment.user._id) ||\n            !currentUser ? (\n              <ButtonLink onClick={handleClickResponseCommentButton}>\n                Trả lời\n              </ButtonLink>\n            ) : null}\n          </div>\n          {isResponseComment ? (\n            <ResponseComment>\n              <TextArea\n                timeShowResponse={timeShowResponse}\n                ref={responseRef}\n                value={responseComment}\n                onChange={(e) => setResponseComment(e.target.value)}\n              />\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                style={{ margin: \"10px 0\" }}\n                size=\"small\"\n                onClick={handleSubmitResponseComment}\n              >\n                Gửi bình luận\n              </Button>\n            </ResponseComment>\n          ) : null}\n          <ResponseWrapper ref={commentResponseRef}>\n            {responseList.length\n              ? responseList.map((response) => (\n                  <ResponseItem\n                    key={response._id}\n                    product={product}\n                    response={response}                    \n                    comment={comment}\n                    currentUser={currentUser}\n                    handleClickLikeResponseButton={(responseId) => handleClickLikeResponseButton(responseId)}\n                    handleClickDislikeReponseButton={(responseId) => handleClickDislikeReponseButton(responseId)}\n                    handleSubmitResponseToResponseComment={(text) => handleSubmitResponseToResponseComment(text)}\n                  />\n                ))\n              : null}\n          </ResponseWrapper>\n        </Row>\n      </Row>\n    </CommentReviewsItemWrapper>\n  );\n};\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  responses: selectCommentResponses,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  postDislikeOrUndislikeComment: (commentId, userId) =>\n    dispatch(postDislikeOrUndislikeComment(commentId, userId)),\n  postLikeOrUnlikeComment: (commentId, userId) =>\n    dispatch(postLikeOrUnlikeComment(commentId, userId)),\n  postResponseComment: (commentId, text) =>\n    dispatch(postResponseComment(commentId, text)),\n    postLikeOrUnlikeResponseComment : (responseId, userId) => dispatch(postLikeOrUnlikeResponseComment(responseId, userId)),\n    postDislikeOrUndislikeResponseComment : (responseId, userId) => dispatch(postDislikeOrUndislikeResponseComment(responseId, userId)),\n    postResponseToResponseComment : (commentId, userId, text) => dispatch(postResponseToResponseComment(commentId, userId, text))\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(CommentReviewsItem));\n"]},"metadata":{},"sourceType":"module"}