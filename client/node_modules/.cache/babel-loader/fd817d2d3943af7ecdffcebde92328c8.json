{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Layout/products-popup/products-popup.component.jsx\";\nimport React from \"react\";\nimport { ProductsPopupContainer } from \"./products-popup.styles\";\nimport { selectProductTypeList } from \"../../../redux/product-type/product-type.selectors\";\nimport { selectProductList } from \"../../../redux/product/product.selectors\";\nimport ProductsPopupItem from \"../products-popup-item/products-popup-item.component\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\n\nconst ProductsPopup = ({\n  offsetWidth,\n  categoryId,\n  productTypeList,\n  productList\n}) => {\n  const productTypesByCategoryId = productTypeList.filter(productType => productType.category.toString() === categoryId.toString());\n  return /*#__PURE__*/React.createElement(ProductsPopupContainer, {\n    offsetWidth: offsetWidth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, productTypesByCategoryId && productTypesByCategoryId.map(productType => /*#__PURE__*/React.createElement(ProductsPopupItem, {\n    key: productType._id,\n    productLabel: productType.name,\n    productList: productList.filter(product => product.productType.toString() === productType._id.toString()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  })));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  productTypeList: selectProductTypeList,\n  productList: selectProductList\n});\nexport default connect(mapStateToProps)(ProductsPopup);","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Layout/products-popup/products-popup.component.jsx"],"names":["React","ProductsPopupContainer","selectProductTypeList","selectProductList","ProductsPopupItem","connect","createStructuredSelector","ProductsPopup","offsetWidth","categoryId","productTypeList","productList","productTypesByCategoryId","filter","productType","category","toString","map","_id","name","product","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,sBAAT,QAAuC,yBAAvC;AACA,SAASC,qBAAT,QAAsC,oDAAtC;AACA,SAASC,iBAAT,QAAkC,0CAAlC;AACA,OAAOC,iBAAP,MAA8B,sDAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;;AACA,MAAMC,aAAa,GAAG,CAAC;AACrBC,EAAAA,WADqB;AAErBC,EAAAA,UAFqB;AAGrBC,EAAAA,eAHqB;AAIrBC,EAAAA;AAJqB,CAAD,KAKhB;AACJ,QAAMC,wBAAwB,GAAGF,eAAe,CAACG,MAAhB,CAC9BC,WAAD,IAAiBA,WAAW,CAACC,QAAZ,CAAqBC,QAArB,OAAoCP,UAAU,CAACO,QAAX,EADtB,CAAjC;AAGA,sBACE,oBAAC,sBAAD;AAAwB,IAAA,WAAW,EAAER,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,wBAAwB,IAAIA,wBAAwB,CAACK,GAAzB,CAA8BH,WAAD,iBACtD,oBAAC,iBAAD;AACE,IAAA,GAAG,EAAEA,WAAW,CAACI,GADnB;AAEE,IAAA,YAAY,EAAEJ,WAAW,CAACK,IAF5B;AAGE,IAAA,WAAW,EAAER,WAAW,CAACE,MAAZ,CAAmBO,OAAO,IAAIA,OAAO,CAACN,WAAR,CAAoBE,QAApB,OAAmCF,WAAW,CAACI,GAAZ,CAAgBF,QAAhB,EAAjE,CAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADyB,CAD/B,CADF;AAWD,CApBD;;AAsBA,MAAMK,eAAe,GAAGf,wBAAwB,CAAC;AAC/CI,EAAAA,eAAe,EAAER,qBAD8B;AAE/CS,EAAAA,WAAW,EAAER;AAFkC,CAAD,CAAhD;AAIA,eAAeE,OAAO,CAACgB,eAAD,CAAP,CAAyBd,aAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport { ProductsPopupContainer } from \"./products-popup.styles\";\nimport { selectProductTypeList } from \"../../../redux/product-type/product-type.selectors\";\nimport { selectProductList } from \"../../../redux/product/product.selectors\";\nimport ProductsPopupItem from \"../products-popup-item/products-popup-item.component\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nconst ProductsPopup = ({\n  offsetWidth,\n  categoryId,\n  productTypeList,\n  productList,\n}) => {\n  const productTypesByCategoryId = productTypeList.filter(\n    (productType) => productType.category.toString() === categoryId.toString()\n  );\n  return (\n    <ProductsPopupContainer offsetWidth={offsetWidth}>\n      {productTypesByCategoryId && productTypesByCategoryId.map((productType) => (\n          <ProductsPopupItem\n            key={productType._id}\n            productLabel={productType.name}\n            productList={productList.filter(product => product.productType.toString() === productType._id.toString())}\n          />\n        ))}\n    </ProductsPopupContainer>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  productTypeList: selectProductTypeList,\n  productList: selectProductList,\n});\nexport default connect(mapStateToProps)(ProductsPopup);\n"]},"metadata":{},"sourceType":"module"}