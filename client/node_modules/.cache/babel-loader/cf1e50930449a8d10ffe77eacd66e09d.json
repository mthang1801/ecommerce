{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Category/category-left-side/category-left-side.component.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { CategoryLeftSideWrapper } from \"./category-left-side.styles\";\nimport PriceScope from \"../../Layout/price-scope/price-scope.component\";\nimport StarScope from \"../../Layout/star-scope/star-scope.component\";\nimport LeftSideMenu from \"../../Layout/left-side-menu/left-side-menu.component\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectProductTypeList, selectMaxPrice } from \"../../../redux/category/category.selectors\";\nimport { withRouter } from \"react-router-dom\";\n\nconst CategoryLeftSide = ({\n  mobileView,\n  tabletView,\n  productTypeList,\n  maxPrice\n}) => {\n  const [minPriceChange, setMinPriceChange] = useState(0);\n  const [maxPriceChange, setMaxPriceChange] = useState(maxPrice);\n  const [filter, setFilter] = useState(false);\n  useEffect(() => {\n    let categoryPath = match.url.split(\"/\")[1];\n    let page = +match.params.page || 1;\n\n    if (filter) {\n      history.push(`/${categoryPath}/products?page=${page}&min_price=${minPriceChange}&max_price=${maxPriceChange}`);\n    }\n  }, [filter, minPriceChange, maxPriceChange]);\n  return /*#__PURE__*/React.createElement(CategoryLeftSideWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, productTypeList.length && /*#__PURE__*/React.createElement(LeftSideMenu, {\n    title: \"Danh m\\u1EE5c S\\u1EA3n ph\\u1EA9m\",\n    list: productTypeList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(PriceScope, {\n    mobileView: mobileView,\n    tabletView: tabletView,\n    maxPrice: maxPrice,\n    setMinPriceChange: value => setMinPriceChange(value),\n    setMaxPriceChange: value => setMaxPriceChange(value),\n    setFilter: () => setFilter(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(StarScope, {\n    mobileView: mobileView,\n    tabletView: tabletView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  productTypeList: selectProductTypeList,\n  maxPrice: selectMaxPrice\n});\nexport default connect(mapStateToProps)(withRouter(CategoryLeftSide));","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Category/category-left-side/category-left-side.component.jsx"],"names":["React","useState","useEffect","CategoryLeftSideWrapper","PriceScope","StarScope","LeftSideMenu","connect","createStructuredSelector","selectProductTypeList","selectMaxPrice","withRouter","CategoryLeftSide","mobileView","tabletView","productTypeList","maxPrice","minPriceChange","setMinPriceChange","maxPriceChange","setMaxPriceChange","filter","setFilter","categoryPath","match","url","split","page","params","history","push","length","value","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,uBAAT,QAAwC,6BAAxC;AACA,OAAOC,UAAP,MAAuB,gDAAvB;AACA,OAAOC,SAAP,MAAsB,8CAAtB;AACA,OAAOC,YAAP,MAAyB,sDAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SACEC,qBADF,EAEEC,cAFF,QAGO,4CAHP;AAIA,SAASC,UAAT,QAA2B,kBAA3B;;AACA,MAAMC,gBAAgB,GAAG,CAAC;AACxBC,EAAAA,UADwB;AAExBC,EAAAA,UAFwB;AAGxBC,EAAAA,eAHwB;AAIxBC,EAAAA;AAJwB,CAAD,KAKnB;AACJ,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCjB,QAAQ,CAAC,CAAD,CAApD;AACA,QAAM,CAACkB,cAAD,EAAiBC,iBAAjB,IAAsCnB,QAAQ,CAACe,QAAD,CAApD;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBrB,QAAQ,CAAC,KAAD,CAApC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIqB,YAAY,GAAGC,KAAK,CAACC,GAAN,CAAUC,KAAV,CAAgB,GAAhB,EAAqB,CAArB,CAAnB;AACA,QAAIC,IAAI,GAAG,CAACH,KAAK,CAACI,MAAN,CAAaD,IAAd,IAAsB,CAAjC;;AACA,QAAGN,MAAH,EAAU;AACRQ,MAAAA,OAAO,CAACC,IAAR,CAAc,IAAGP,YAAa,kBAAiBI,IAAK,cAAaV,cAAe,cAAaE,cAAe,EAA5G;AACD;AACF,GANQ,EAMN,CAACE,MAAD,EAAQJ,cAAR,EAAwBE,cAAxB,CANM,CAAT;AAOA,sBACE,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,eAAe,CAACgB,MAAhB,iBACC,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAC,kCAApB;AAAwC,IAAA,IAAI,EAAEhB,eAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAIE,oBAAC,UAAD;AACE,IAAA,UAAU,EAAEF,UADd;AAEE,IAAA,UAAU,EAAEC,UAFd;AAGE,IAAA,QAAQ,EAAEE,QAHZ;AAIE,IAAA,iBAAiB,EAAGgB,KAAD,IAAWd,iBAAiB,CAACc,KAAD,CAJjD;AAKE,IAAA,iBAAiB,EAAGA,KAAD,IAAWZ,iBAAiB,CAACY,KAAD,CALjD;AAME,IAAA,SAAS,EAAE,MAAMV,SAAS,CAAC,IAAD,CAN5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAYE,oBAAC,SAAD;AAAW,IAAA,UAAU,EAAET,UAAvB;AAAmC,IAAA,UAAU,EAAEC,UAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF;AAgBD,CAhCD;;AAkCA,MAAMmB,eAAe,GAAGzB,wBAAwB,CAAC;AAC/CO,EAAAA,eAAe,EAAEN,qBAD8B;AAE/CO,EAAAA,QAAQ,EAAEN;AAFqC,CAAD,CAAhD;AAKA,eAAeH,OAAO,CAAC0B,eAAD,CAAP,CAAyBtB,UAAU,CAACC,gBAAD,CAAnC,CAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport { CategoryLeftSideWrapper } from \"./category-left-side.styles\";\nimport PriceScope from \"../../Layout/price-scope/price-scope.component\";\nimport StarScope from \"../../Layout/star-scope/star-scope.component\";\nimport LeftSideMenu from \"../../Layout/left-side-menu/left-side-menu.component\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport {\n  selectProductTypeList,\n  selectMaxPrice,\n} from \"../../../redux/category/category.selectors\";\nimport { withRouter } from \"react-router-dom\";\nconst CategoryLeftSide = ({\n  mobileView,\n  tabletView,\n  productTypeList,\n  maxPrice,\n}) => {\n  const [minPriceChange, setMinPriceChange] = useState(0);\n  const [maxPriceChange, setMaxPriceChange] = useState(maxPrice);\n  const [filter, setFilter] = useState(false);\n  useEffect(() => {  \n    let categoryPath = match.url.split(\"/\")[1];        \n    let page = +match.params.page || 1;    \n    if(filter){     \n      history.push(`/${categoryPath}/products?page=${page}&min_price=${minPriceChange}&max_price=${maxPriceChange}`);      \n    }\n  }, [filter,minPriceChange, maxPriceChange])\n  return (\n    <CategoryLeftSideWrapper>\n      {productTypeList.length && (\n        <LeftSideMenu title=\"Danh mục Sản phẩm\" list={productTypeList} />\n      )}\n      <PriceScope\n        mobileView={mobileView}\n        tabletView={tabletView}\n        maxPrice={maxPrice}\n        setMinPriceChange={(value) => setMinPriceChange(value)}\n        setMaxPriceChange={(value) => setMaxPriceChange(value)}\n        setFilter={() => setFilter(true)}\n      />\n      <StarScope mobileView={mobileView} tabletView={tabletView} />\n    </CategoryLeftSideWrapper>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  productTypeList: selectProductTypeList,\n  maxPrice: selectMaxPrice,\n});\n\nexport default connect(mapStateToProps)(withRouter(CategoryLeftSide));\n"]},"metadata":{},"sourceType":"module"}