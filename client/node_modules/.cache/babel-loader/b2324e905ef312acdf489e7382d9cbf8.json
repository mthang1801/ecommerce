{"ast":null,"code":"import CATEGORIES_DATA from \"../data/category\";\nimport PRODUCTS_DATA from \"../data/products\";\nimport SELLERS_DATA from \"../data/sellers\";\nimport CART_DATA from \"../data/cart\";\nimport axios from \"axios\";\nimport urls from \"./urls\";\nexport const getLatestProducts = () => {\n  let sellers = [...SELLERS_DATA];\n  sellers.sort((a, b) => {\n    if (Date.parse(a.createdAt) > Date.parse(b.createdAt)) return -1;\n  });\n  let checkProductIsTheSame = {};\n  let j = 0;\n  let len = 6;\n  let result = [];\n\n  if (sellers.length <= 6) {\n    return sellers;\n  }\n\n  for (let i = 0; i < len; i++) {\n    if (checkProductIsTheSame[sellers[i].productId]) {\n      sellers[i] = sellers[len + j];\n      j++;\n      i--;\n    } else {\n      checkProductIsTheSame[sellers[i].productId] = true;\n      result.push(sellers[i]);\n    }\n  }\n\n  return result;\n};\nexport const getProductsBestSeller = () => {\n  let sellers = [...SELLERS_DATA];\n  sellers = sellers.filter(seller => Math.ceil((Date.now() - Date.parse(seller.createdAt)) / 84600000) < 14 && seller.votes > 4).sort((a, b) => b.sold - a.sold);\n  return sellers.slice(0, 6);\n};\nexport const getProductsTopRated = () => {\n  let sellers = [...SELLERS_DATA];\n  sellers.sort((a, b) => {\n    if (a.votes > b.votes) return -1;\n  });\n  return sellers.slice(0, 9);\n};\nexport const getProductsListByCategoryId = categeryId => {\n  const categories = { ...CATEGORIES_DATA\n  };\n  const listProductsId = categories[categeryId].products;\n  const products = { ...PRODUCTS_DATA\n  };\n  let productsList = {};\n  listProductsId.length && listProductsId.forEach(productId => {\n    productsList[productId] = products[productId];\n  });\n  return productsList;\n};\nexport const getCategoryData = () => {\n  const categoryList = { ...CATEGORIES_DATA\n  };\n  return Object.keys(categoryList).map(key => categoryList[key]);\n};\nexport const getMaxPrice = () => {\n  const sellers = [...SELLERS_DATA];\n  let max = sellers[0].price;\n  sellers.forEach(seller => {\n    if (seller.price > max) {\n      max = seller.price;\n    }\n  });\n  return max;\n};\nexport const getSaleOffProducts = () => {\n  let sellers = [...SELLERS_DATA];\n  sellers = sellers.filter(seller => seller.discount > 0);\n  sellers.sort((a, b) => {\n    if (a.discount > b.discount) {\n      return -1;\n    }\n\n    return 1;\n  });\n  return sellers;\n};\nexport const getNumberOfProducts = () => {\n  let sellers = [...SELLERS_DATA];\n  return sellers.length;\n};\nexport const getProductsPerpage = (page = 1, viewport = \"desktop\", sort = \"ascending\") => {\n  let NUM_PRODUCTS_PER_PAGE;\n\n  switch (viewport) {\n    case \"mobileView\":\n      NUM_PRODUCTS_PER_PAGE = 3;\n      break;\n\n    case \"tabletView\":\n      NUM_PRODUCTS_PER_PAGE = 6;\n      break;\n\n    default:\n      NUM_PRODUCTS_PER_PAGE = 12;\n  }\n\n  let sellers = [...SELLERS_DATA];\n  return sellers.filter((_, idx) => idx >= (page - 1) * NUM_PRODUCTS_PER_PAGE && idx < page * NUM_PRODUCTS_PER_PAGE);\n};\nexport const getCartItems = () => {\n  return [...CART_DATA];\n};\nexport const getCategoryList = () => {\n  return Object.keys(CATEGORIES_DATA).map(key => CATEGORIES_DATA[key]);\n};\nexport const getProductsByProductType = productType => {\n  return PRODUCTS_DATA[productType];\n};\nexport const getListCities = async () => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const {\n        data: {\n          listCities\n        }\n      } = await axios.get(urls.LIST_CITIES_API);\n      resolve(listCities);\n    } catch (error) {\n      console.log(error);\n      reject(error);\n    }\n  });\n};","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/utils/algorithms.js"],"names":["CATEGORIES_DATA","PRODUCTS_DATA","SELLERS_DATA","CART_DATA","axios","urls","getLatestProducts","sellers","sort","a","b","Date","parse","createdAt","checkProductIsTheSame","j","len","result","length","i","productId","push","getProductsBestSeller","filter","seller","Math","ceil","now","votes","sold","slice","getProductsTopRated","getProductsListByCategoryId","categeryId","categories","listProductsId","products","productsList","forEach","getCategoryData","categoryList","Object","keys","map","key","getMaxPrice","max","price","getSaleOffProducts","discount","getNumberOfProducts","getProductsPerpage","page","viewport","NUM_PRODUCTS_PER_PAGE","_","idx","getCartItems","getCategoryList","getProductsByProductType","productType","getListCities","Promise","resolve","reject","data","listCities","get","LIST_CITIES_API","error","console","log"],"mappings":"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","sourcesContent":["import CATEGORIES_DATA from \"../data/category\";\nimport PRODUCTS_DATA from \"../data/products\";\nimport SELLERS_DATA from \"../data/sellers\";\nimport CART_DATA from \"../data/cart\";\nimport axios from \"axios\";\nimport urls from \"./urls\";\nexport const getLatestProducts = () => {\n  let sellers = [...SELLERS_DATA];\n  sellers.sort((a, b) => {\n    if (Date.parse(a.createdAt) > Date.parse(b.createdAt)) return -1;\n  });\n  let checkProductIsTheSame = {};\n  let j = 0;\n  let len = 6;\n  let result = [];\n  if (sellers.length <= 6) {\n    return sellers;\n  }\n  for (let i = 0; i < len; i++) {\n    if (checkProductIsTheSame[sellers[i].productId]) {\n      sellers[i] = sellers[len + j];\n      j++;\n      i--;\n    } else {\n      checkProductIsTheSame[sellers[i].productId] = true;\n      result.push(sellers[i]);\n    }\n  }\n  return result;\n};\n\nexport const getProductsBestSeller = () => {\n  let sellers = [...SELLERS_DATA];\n  sellers = sellers\n    .filter(\n      (seller) =>\n        Math.ceil((Date.now() - Date.parse(seller.createdAt)) / 84600000) <\n          14 && seller.votes > 4\n    )\n    .sort((a, b) => b.sold - a.sold);\n  return sellers.slice(0, 6);\n};\n\nexport const getProductsTopRated = () => {\n  let sellers = [...SELLERS_DATA];\n  sellers.sort((a, b) => {\n    if (a.votes > b.votes) return -1;\n  });\n  return sellers.slice(0, 9);\n};\n\nexport const getProductsListByCategoryId = (categeryId) => {\n  const categories = { ...CATEGORIES_DATA };\n  const listProductsId = categories[categeryId].products;\n  const products = { ...PRODUCTS_DATA };\n  let productsList = {};\n  listProductsId.length &&\n    listProductsId.forEach((productId) => {\n      productsList[productId] = products[productId];\n    });\n  return productsList;\n};\n\nexport const getCategoryData = () => {\n  const categoryList = { ...CATEGORIES_DATA };\n  return Object.keys(categoryList).map((key) => categoryList[key]);\n};\n\nexport const getMaxPrice = () => {\n  const sellers = [...SELLERS_DATA];\n  let max = sellers[0].price;\n  sellers.forEach((seller) => {\n    if (seller.price > max) {\n      max = seller.price;\n    }\n  });\n  return max;\n};\n\nexport const getSaleOffProducts = () => {\n  let sellers = [...SELLERS_DATA];\n  sellers = sellers.filter((seller) => seller.discount > 0);\n  sellers.sort((a, b) => {\n    if (a.discount > b.discount) {\n      return -1;\n    }\n    return 1;\n  });\n  return sellers;\n};\n\nexport const getNumberOfProducts = () => {\n  let sellers = [...SELLERS_DATA];\n  return sellers.length;\n};\n\nexport const getProductsPerpage = (\n  page = 1,\n  viewport = \"desktop\",\n  sort = \"ascending\"\n) => {\n  let NUM_PRODUCTS_PER_PAGE;\n  switch (viewport) {\n    case \"mobileView\":\n      NUM_PRODUCTS_PER_PAGE = 3;\n      break;\n    case \"tabletView\":\n      NUM_PRODUCTS_PER_PAGE = 6;\n      break;\n    default:\n      NUM_PRODUCTS_PER_PAGE = 12;\n  }\n  let sellers = [...SELLERS_DATA];\n  return sellers.filter(\n    (_, idx) =>\n      idx >= (page - 1) * NUM_PRODUCTS_PER_PAGE &&\n      idx < page * NUM_PRODUCTS_PER_PAGE\n  );\n};\n\nexport const getCartItems = () => {\n  return [...CART_DATA];\n};\n\nexport const getCategoryList = () => {\n  return Object.keys(CATEGORIES_DATA).map((key) => CATEGORIES_DATA[key]);\n};\n\nexport const getProductsByProductType = (productType) => {\n  return PRODUCTS_DATA[productType];\n};\n\nexport const getListCities = async () => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const {\n        data: { listCities },\n      } = await axios.get(urls.LIST_CITIES_API);\n      resolve(listCities);\n    } catch (error) {\n      console.log(error);\n      reject(error);\n    }\n  });\n};\n"]},"metadata":{},"sourceType":"module"}