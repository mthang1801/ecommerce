{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Layout/master-search/master-search.component.jsx\";\nimport React, { useState, useContext, useEffect, useRef } from \"react\";\nimport { MasterSearchContainer, CategoryTypes, SearchInput, SearchButton } from \"./master-search.styles\";\nimport { FaSearch } from \"react-icons/fa\";\nimport { onSearch, setSearchKey } from \"../../../redux/search/search.actions\";\nimport { selectSearchKey } from \"../../../redux/search/search.selectors\";\nimport { createStructuredSelector } from \"reselect\";\nimport AppContext from \"../../../context/app-viewport.context\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nconst MasterSearch = ({\n  history,\n  onSearch,\n  searchKey,\n  setSearchKey\n}) => {\n  const [mobileView, setMobileView] = useState(window.innerWidth < 600);\n  const width = useContext(AppContext);\n  const searchRef = useRef(null);\n  useEffect(() => {\n    if (width < 600) {\n      setMobileView(true);\n    } else {\n      setMobileView(false);\n    }\n  }, [width]);\n\n  const handleSearch = e => {\n    e.preventDefault();\n    history.push(`/search?key=${textSearch}`);\n  };\n\n  return /*#__PURE__*/React.createElement(MasterSearchContainer, {\n    mobileView: mobileView,\n    onSubmit: handleSearch,\n    ref: searchRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SearchInput, {\n    type: \"text\",\n    placeholder: \"T\\xECm ki\\u1EBFm\",\n    value: searchKey,\n    onChange: e => setSearchKey(e.target.value),\n    style: {\n      fontSize: mobileView ? \"1em\" : \"1.2em\",\n      padding: mobileView ? \"0 0.2rem\" : \"0 1rem\",\n      width: mobileView ? \"70%\" : \"50%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SearchButton, {\n    mobileView: mobileView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FaSearch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 45\n    }\n  })));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  searchKey: selectSearchKey\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSearch: searchKey => dispatch(onSearch(searchKey)),\n  setSearchKey: searchKey => dispatch(setSearchKey(searchKey))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(MasterSearch));","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Layout/master-search/master-search.component.jsx"],"names":["React","useState","useContext","useEffect","useRef","MasterSearchContainer","CategoryTypes","SearchInput","SearchButton","FaSearch","onSearch","setSearchKey","selectSearchKey","createStructuredSelector","AppContext","withRouter","connect","MasterSearch","history","searchKey","mobileView","setMobileView","window","innerWidth","width","searchRef","handleSearch","e","preventDefault","push","textSearch","target","value","fontSize","padding","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,SACEC,qBADF,EAEEC,aAFF,EAGEC,WAHF,EAIEC,YAJF,QAKO,wBALP;AAMA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAAQC,QAAR,EAAkBC,YAAlB,QAAqC,sCAArC;AACA,SAAQC,eAAR,QAA8B,wCAA9B;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AACA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUR,EAAAA,QAAV;AAAoBS,EAAAA,SAApB;AAA+BR,EAAAA;AAA/B,CAAD,KAAkD;AACrE,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BpB,QAAQ,CAACqB,MAAM,CAACC,UAAP,GAAoB,GAArB,CAA5C;AACA,QAAMC,KAAK,GAAGtB,UAAU,CAACY,UAAD,CAAxB;AACA,QAAMW,SAAS,GAAGrB,MAAM,CAAC,IAAD,CAAxB;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIqB,KAAK,GAAG,GAAZ,EAAiB;AACfH,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD,KAFD,MAEO;AACLA,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD;AACF,GANQ,EAMN,CAACG,KAAD,CANM,CAAT;;AAQA,QAAME,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACAV,IAAAA,OAAO,CAACW,IAAR,CAAc,eAAcC,UAAW,EAAvC;AACD,GAHD;;AAIA,sBACE,oBAAC,qBAAD;AAAuB,IAAA,UAAU,EAAEV,UAAnC;AAA+C,IAAA,QAAQ,EAAEM,YAAzD;AAAuE,IAAA,GAAG,EAAED,SAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AACE,IAAA,IAAI,EAAC,MADP;AACc,IAAA,WAAW,EAAC,kBAD1B;AAEE,IAAA,KAAK,EAAEN,SAFT;AAGE,IAAA,QAAQ,EAAGQ,CAAD,IAAOhB,YAAY,CAACgB,CAAC,CAACI,MAAF,CAASC,KAAV,CAH/B;AAIE,IAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAEb,UAAU,GAAG,KAAH,GAAW,OAD1B;AAELc,MAAAA,OAAO,EAAGd,UAAU,GAAG,UAAH,GAAgB,QAF/B;AAGLI,MAAAA,KAAK,EAAKJ,UAAU,GAAG,KAAH,GAAW;AAH1B,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAWE,oBAAC,YAAD;AAAc,IAAA,UAAU,EAAEA,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAsC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAtC,CAXF,CADF;AAeD,CA/BD;;AAgCA,MAAMe,eAAe,GAAGtB,wBAAwB,CAAC;AAC/CM,EAAAA,SAAS,EAAGP;AADmC,CAAD,CAAhD;;AAGA,MAAMwB,kBAAkB,GAAGC,QAAQ,KAAK;AACtC3B,EAAAA,QAAQ,EAAIS,SAAD,IAAekB,QAAQ,CAAC3B,QAAQ,CAACS,SAAD,CAAT,CADI;AAEtCR,EAAAA,YAAY,EAAIQ,SAAD,IAAekB,QAAQ,CAAC1B,YAAY,CAACQ,SAAD,CAAb;AAFA,CAAL,CAAnC;;AAIA,eAAeH,OAAO,CAACmB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CrB,UAAU,CAACE,YAAD,CAAvD,CAAf","sourcesContent":["import React, { useState, useContext, useEffect, useRef } from \"react\";\nimport {\n  MasterSearchContainer,\n  CategoryTypes,\n  SearchInput,\n  SearchButton,\n} from \"./master-search.styles\";\nimport { FaSearch } from \"react-icons/fa\";\nimport {onSearch, setSearchKey} from \"../../../redux/search/search.actions\"\nimport {selectSearchKey} from \"../../../redux/search/search.selectors\"\nimport {createStructuredSelector} from \"reselect\"\nimport AppContext from \"../../../context/app-viewport.context\";\nimport {withRouter} from \"react-router-dom\"\nimport {connect} from \"react-redux\";\nconst MasterSearch = ({history, onSearch, searchKey, setSearchKey}) => { \n  const [mobileView, setMobileView] = useState(window.innerWidth < 600);\n  const width = useContext(AppContext);  \n  const searchRef = useRef(null);  \n  useEffect(() => {\n    if (width < 600) {\n      setMobileView(true);\n    } else {\n      setMobileView(false);\n    }\n  }, [width]);\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    history.push(`/search?key=${textSearch}`)\n  }\n  return (\n    <MasterSearchContainer mobileView={mobileView} onSubmit={handleSearch} ref={searchRef}>      \n      <SearchInput\n        type=\"text\" placeholder=\"Tìm kiếm\" \n        value={searchKey}\n        onChange={(e) => setSearchKey(e.target.value)}\n        style={{          \n          fontSize: mobileView ? \"1em\" : \"1.2em\",          \n          padding : mobileView ? \"0 0.2rem\" : \"0 1rem\",\n          width :   mobileView ? \"70%\" : \"50%\"\n        }}\n      />\n      <SearchButton mobileView={mobileView}><FaSearch/></SearchButton>\n    </MasterSearchContainer>\n  );\n};\nconst mapStateToProps = createStructuredSelector({\n  searchKey : selectSearchKey\n})\nconst mapDispatchToProps = dispatch => ({\n  onSearch : (searchKey) => dispatch(onSearch(searchKey)),\n  setSearchKey : (searchKey) => dispatch(setSearchKey(searchKey))\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(MasterSearch));\n"]},"metadata":{},"sourceType":"module"}