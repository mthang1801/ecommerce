{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/pages/product-type/product-type.component.jsx\";\nimport React, { useEffect } from 'react';\nimport { ProductTypeWrapper } from \"./product-type.styles\";\nimport { default as CategoryOverview } from \"../../components/Category/category-overview/category-overview.container\";\nimport MasterHeader from \"../../components/Layout/master-header/master-header.component\";\nimport Background from \"../../components/Layout/background/background.component\";\nimport { fetchProductType, fetchProductList } from \"../../redux/product-type/product-type.actions\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectProductTypeError, selectProductTypeLoading, selectProductTypeList, selectProductFetched } from \"../../redux/product-type/product-type.selectors\";\nimport PageNotFound from \"../page-not-found/page-not-found.component\";\nimport Loader from \"../../components/UI/loader/loader.component\";\n\nconst CategoryPage = ({\n  match,\n  fetchProductType,\n  fetchProductList,\n  loading,\n  error\n}) => {\n  useEffect(() => {\n    let page = 1;\n    let productTypeUrl = match.params.productTypeUrl; // if(location.search && fetched){\n    //   page = +location.search.split(\"=\")[1];       \n    //   fetchProductList(productTypeUrl, page);\n    //   return ; \n    // }         \n    // fetchCategory(productTypeUrl, page);\n  }, [fetchProductType, fetchProductList, location.search, match.params.categoryUrl, match.params.productTypeUrl]);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 10\n      }\n    });\n  }\n\n  if (error && error.status == 404) {\n    return /*#__PURE__*/React.createElement(PageNotFound, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 10\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(ProductTypeWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, \"ProductType\");\n};\n\nconst mapStateToProps = createStructuredSelector({\n  error: selectProductTypeError,\n  loading: selectProductTypeLoading,\n  productTypeList: selectProductTypeList,\n  fetched: selectProductFetched\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchProductType: (path, page) => dispatch(fetchProductType(path, page)),\n  fetchProductList: (path, page) => dispatch(fetchProductList(path, page))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryPage);","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/pages/product-type/product-type.component.jsx"],"names":["React","useEffect","ProductTypeWrapper","default","CategoryOverview","MasterHeader","Background","fetchProductType","fetchProductList","connect","createStructuredSelector","selectProductTypeError","selectProductTypeLoading","selectProductTypeList","selectProductFetched","PageNotFound","Loader","CategoryPage","match","loading","error","page","productTypeUrl","params","location","search","categoryUrl","status","mapStateToProps","productTypeList","fetched","mapDispatchToProps","dispatch","path"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,kBAAR,QAAiC,uBAAjC;AACA,SAAQC,OAAO,IAAIC,gBAAnB,QAA0C,yEAA1C;AACA,OAAOC,YAAP,MAAyB,+DAAzB;AACA,OAAOC,UAAP,MAAuB,yDAAvB;AACA,SAAQC,gBAAR,EAA0BC,gBAA1B,QAAiD,+CAAjD;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAAQC,sBAAR,EAAgCC,wBAAhC,EAA2DC,qBAA3D,EAAkFC,oBAAlF,QAA6G,iDAA7G;AACA,OAAOC,YAAP,MAAyB,4CAAzB;AACA,OAAOC,MAAP,MAAmB,6CAAnB;;AACA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQX,EAAAA,gBAAR;AAA0BC,EAAAA,gBAA1B;AAA4CW,EAAAA,OAA5C;AAAqDC,EAAAA;AAArD,CAAD,KAAiE;AACpFnB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIoB,IAAI,GAAG,CAAX;AACA,QAAIC,cAAc,GAAGJ,KAAK,CAACK,MAAN,CAAaD,cAAlC,CAFc,CAId;AACA;AACA;AACA;AACA;AACA;AAED,GAXQ,EAWN,CAACf,gBAAD,EAAmBC,gBAAnB,EAAqCgB,QAAQ,CAACC,MAA9C,EAAsDP,KAAK,CAACK,MAAN,CAAaG,WAAnE,EAAgFR,KAAK,CAACK,MAAN,CAAaD,cAA7F,CAXM,CAAT;;AAYA,MAAGH,OAAH,EAAW;AACX,wBAAO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACC;;AACD,MAAGC,KAAK,IAAIA,KAAK,CAACO,MAAN,IAAgB,GAA5B,EAAgC;AAChC,wBAAO,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACC;;AACD,sBACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF;AAKD,CAxBD;;AA0BA,MAAMC,eAAe,GAAGlB,wBAAwB,CAAC;AAC/CU,EAAAA,KAAK,EAAGT,sBADuC;AAE/CQ,EAAAA,OAAO,EAAGP,wBAFqC;AAG/CiB,EAAAA,eAAe,EAAGhB,qBAH6B;AAI/CiB,EAAAA,OAAO,EAAGhB;AAJqC,CAAD,CAAhD;;AAMA,MAAMiB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCzB,EAAAA,gBAAgB,EAAG,CAAC0B,IAAD,EAAMZ,IAAN,KAAeW,QAAQ,CAACzB,gBAAgB,CAAC0B,IAAD,EAAMZ,IAAN,CAAjB,CADJ;AAEtCb,EAAAA,gBAAgB,EAAG,CAACyB,IAAD,EAAOZ,IAAP,KAAgBW,QAAQ,CAACxB,gBAAgB,CAACyB,IAAD,EAAOZ,IAAP,CAAjB;AAFL,CAAL,CAAnC;;AAIA,eAAeZ,OAAO,CAACmB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6Cd,YAA7C,CAAf","sourcesContent":["import React, {useEffect} from 'react'\nimport {ProductTypeWrapper} from \"./product-type.styles\";\nimport {default as CategoryOverview} from \"../../components/Category/category-overview/category-overview.container\";\nimport MasterHeader from \"../../components/Layout/master-header/master-header.component\"\nimport Background from \"../../components/Layout/background/background.component\"\nimport {fetchProductType, fetchProductList} from \"../../redux/product-type/product-type.actions\";\nimport {connect} from \"react-redux\";\nimport {createStructuredSelector} from \"reselect\";\nimport {selectProductTypeError, selectProductTypeLoading , selectProductTypeList, selectProductFetched} from \"../../redux/product-type/product-type.selectors\"\nimport PageNotFound from \"../page-not-found/page-not-found.component\"\nimport Loader from \"../../components/UI/loader/loader.component\"\nconst CategoryPage = ({match, fetchProductType, fetchProductList, loading, error}) => {\n  useEffect(() => {\n    let page = 1 ; \n    let productTypeUrl = match.params.productTypeUrl\n\n    // if(location.search && fetched){\n    //   page = +location.search.split(\"=\")[1];       \n    //   fetchProductList(productTypeUrl, page);\n    //   return ; \n    // }         \n    // fetchCategory(productTypeUrl, page);\n                  \n  }, [fetchProductType, fetchProductList, location.search, match.params.categoryUrl, match.params.productTypeUrl]);\n  if(loading){\n  return <Loader/>\n  }\n  if(error && error.status == 404){\n  return <PageNotFound/>\n  }\n  return (\n    <ProductTypeWrapper>\n      ProductType\n    </ProductTypeWrapper>\n  )\n}\n\nconst mapStateToProps = createStructuredSelector({\n  error : selectProductTypeError,\n  loading : selectProductTypeLoading,\n  productTypeList : selectProductTypeList,\n  fetched : selectProductFetched\n})\nconst mapDispatchToProps = dispatch => ({\n  fetchProductType : (path,page) => dispatch(fetchProductType(path,page)),\n  fetchProductList : (path, page) => dispatch(fetchProductList(path, page))\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryPage)\n"]},"metadata":{},"sourceType":"module"}