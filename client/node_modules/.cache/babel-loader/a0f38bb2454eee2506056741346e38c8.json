{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Product-Detail/comment-reviews/comment-reviews.component.jsx\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { getCommentReviewsByProductId } from \"../../../utils/connectDB\";\nimport Spinner from \"../../UI/spinner/spinner.component\";\nimport { CommentReviewsWrapper, TextArea, CommentsGet, ReadMore, CommentsPost } from \"./comment-reviews.styles\";\nimport CommentReviewsItem from \"../comment-reviews-item/comment-reviews-item.component\";\nimport Button from \"@material-ui/core/Button\";\nimport { connect } from \"react-redux\";\nimport { selectCommentsLoading, selectComments, selectCommentReviewsError, selectNumberOfComments } from \"../../../redux/product-comment-review/product-comment-review.selectors\";\nimport { selectProductDetailData } from \"../../../redux/product-detail/product-detail.selectors\";\nimport { createStructuredSelector } from \"reselect\";\nimport { fetchProductCommentReview } from \"../../../redux/product-comment-review/product-comment-review.actions\";\n\nconst CommentReviews = ({\n  product,\n  show,\n  productId,\n  comments,\n  loading,\n  error,\n  fetchProductCommentReview,\n  readMore,\n  setReadMore,\n  setTaskHeight,\n  selectCommentResponses\n}) => {\n  const commentsRef = useRef(null);\n  const [showReadMore, setShowReadMore] = useState(false);\n  const [commentItemHeight, setCommentItemHeight] = useState(0);\n  useEffect(() => {\n    let _mounted = true;\n\n    if (productId) {\n      fetchProductCommentReview(productId);\n    }\n\n    if (commentsRef.current.scrollHeight > commentsRef.current.clientHeight) {\n      setShowReadMore(true);\n      setTaskHeight(commentsRef.current.scrollHeight + commentItemHeight);\n    }\n\n    return () => {\n      _mounted = false;\n    };\n  }, [productId]);\n  return /*#__PURE__*/React.createElement(CommentReviewsWrapper, {\n    ref: commentsRef,\n    show: show,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Spinner, {\n    loadChildComponent: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CommentsPost, {\n    show: show,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    placeholder: \"\\u0110\\u1EC3 l\\u1EA1i b\\xECnh lu\\u1EADn c\\u1EE7a b\\u1EA1n t\\u1EA1i \\u0111\\xE2y\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"G\\u1EEDi\")), /*#__PURE__*/React.createElement(CommentsGet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, comments.length ? comments.map(comment => {\n    return /*#__PURE__*/React.createElement(CommentReviewsItem, {\n      key: comment._id,\n      comment: comment,\n      product: product,\n      setCommentItemHeight: value => setCommentItemHeight(value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    });\n  }) : null)), showReadMore ? /*#__PURE__*/React.createElement(ReadMore, {\n    onClick: () => setReadMore(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }, !readMore ? \"Xem thêm\" : \"Thu gọn\") : null);\n};\n\nconst mapStateToProps = createStructuredSelector({\n  comments: selectComments,\n  loading: selectCommentsLoading,\n  error: selectCommentReviewsError,\n  product: selectProductDetailData,\n  numberOfComments: selectNumberOfComments\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchProductCommentReview: productId => dispatch(fetchProductCommentReview(productId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentReviews);","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Product-Detail/comment-reviews/comment-reviews.component.jsx"],"names":["React","useEffect","useState","useRef","getCommentReviewsByProductId","Spinner","CommentReviewsWrapper","TextArea","CommentsGet","ReadMore","CommentsPost","CommentReviewsItem","Button","connect","selectCommentsLoading","selectComments","selectCommentReviewsError","selectNumberOfComments","selectProductDetailData","createStructuredSelector","fetchProductCommentReview","CommentReviews","product","show","productId","comments","loading","error","readMore","setReadMore","setTaskHeight","selectCommentResponses","commentsRef","showReadMore","setShowReadMore","commentItemHeight","setCommentItemHeight","_mounted","current","scrollHeight","clientHeight","length","map","comment","_id","value","mapStateToProps","numberOfComments","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { getCommentReviewsByProductId } from \"../../../utils/connectDB\";\nimport Spinner from \"../../UI/spinner/spinner.component\";\nimport {\n  CommentReviewsWrapper,\n  TextArea,\n  CommentsGet,\n  ReadMore,\n  CommentsPost\n} from \"./comment-reviews.styles\";\nimport CommentReviewsItem from \"../comment-reviews-item/comment-reviews-item.component\";\nimport Button from \"@material-ui/core/Button\";\nimport {connect} from \"react-redux\";\nimport {selectCommentsLoading, selectComments, selectCommentReviewsError, selectNumberOfComments} from \"../../../redux/product-comment-review/product-comment-review.selectors\"\nimport {selectProductDetailData} from \"../../../redux/product-detail/product-detail.selectors\"\nimport {createStructuredSelector} from \"reselect\"\nimport {fetchProductCommentReview} from \"../../../redux/product-comment-review/product-comment-review.actions\"\nconst CommentReviews = ({ product, show, productId, comments, loading, error, fetchProductCommentReview, readMore, setReadMore, setTaskHeight, selectCommentResponses }) => {    \n  const commentsRef = useRef(null);\n  const [showReadMore, setShowReadMore] = useState(false);\n  const [commentItemHeight, setCommentItemHeight] = useState(0);\n  useEffect(() => {\n    let _mounted = true;\n    if (productId) {\n      fetchProductCommentReview(productId)\n    }\n    if(commentsRef.current.scrollHeight > commentsRef.current.clientHeight ){          \n      setShowReadMore(true);         \n      setTaskHeight(commentsRef.current.scrollHeight + commentItemHeight)\n     }\n    return () => {\n      _mounted = false;\n    };\n  }, [productId]);\n  \n  return (\n    <CommentReviewsWrapper ref={commentsRef} show={show}>\n      {loading ? (\n        <Spinner loadChildComponent />\n      ) : (\n        <React.Fragment>\n          <CommentsPost show={show}>\n            <TextArea placeholder=\"Để lại bình luận của bạn tại đây\" />\n            <Button color=\"primary\" variant=\"contained\" size=\"small\">\n              Gửi\n            </Button>\n          </CommentsPost>          \n          <CommentsGet>\n            {comments.length ? comments.map((comment) => {                \n                  return (\n                    <CommentReviewsItem key={comment._id} comment={comment} product={product} setCommentItemHeight={value => setCommentItemHeight(value)}/>\n                  );\n                })\n               : null }\n          </CommentsGet>\n          {}\n        </React.Fragment>\n      )}\n       {showReadMore  ? <ReadMore onClick={() => setReadMore(true)}>{!readMore ? \"Xem thêm\" : \"Thu gọn\"}</ReadMore> : null} \n    </CommentReviewsWrapper>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  comments : selectComments,\n  loading : selectCommentsLoading,\n  error : selectCommentReviewsError,\n  product : selectProductDetailData,\n  numberOfComments : selectNumberOfComments\n})\nconst mapDispatchToProps = dispatch => ({\n  fetchProductCommentReview : (productId) => dispatch(fetchProductCommentReview(productId))\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentReviews);\n"]},"metadata":{},"sourceType":"module"}