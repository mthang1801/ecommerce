{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/pages/manufactor/manufactor.component.jsx\";\nimport React, { useEffect } from \"react\";\nimport { ManufactorWrapper } from \"./manufactor.styles\"; // import { default as ProductTypeOverview } from \"../../components/ProductType/product-type-overview/product-type-overview.container\";\n\nimport MasterHeader from \"../../components/Layout/master-header/master-header.component\";\nimport Background from \"../../components/Layout/background/background.component\";\nimport { fetchProductType, fetchProductList } from \"../../redux/product-type/product-type.actions\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectProductTypeError, selectProductTypeLoading, selectProductTypeList, selectProductFetched, selectName } from \"../../redux/product-type/product-type.selectors\";\nimport PageNotFound from \"../page-not-found/page-not-found.component\";\nimport Loader from \"../../components/UI/loader/loader.component\";\n\nconst ProductTypePage = ({\n  match,\n  location,\n  fetchProductType,\n  fetchProductList,\n  loading,\n  error,\n  fetched,\n  name\n}) => {\n  useEffect(() => {\n    let page = +location.search.split(\"=\")[1] || 1;\n    let {\n      manufactorUrl\n    } = match.params;\n\n    if (location.search && fetched) {\n      fetchProductList(manufactorUrl, page);\n      return;\n    }\n\n    fetchProductType(manufactorUrl, page);\n  }, [fetchProductType, fetchProductList, location.search, match.params.categoryUrl, match.params.productTypeUrl]);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (error && error.status == 404) {\n    return /*#__PURE__*/React.createElement(PageNotFound, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(ManufactorWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  });\n};\n\nconst mapStateToProps = createStructuredSelector({\n  error: selectProductTypeError,\n  loading: selectProductTypeLoading,\n  productTypeList: selectProductTypeList,\n  fetched: selectProductFetched,\n  name: selectName\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchProductType: (categoryUrl, productTypeUrl, page) => dispatch(fetchProductType(categoryUrl, productTypeUrl, page)),\n  fetchProductList: (categoryUrl, productTypeUrl, page) => dispatch(fetchProductList(categoryUrl, productTypeUrl, page))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductTypePage);","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/pages/manufactor/manufactor.component.jsx"],"names":["React","useEffect","ManufactorWrapper","MasterHeader","Background","fetchProductType","fetchProductList","connect","createStructuredSelector","selectProductTypeError","selectProductTypeLoading","selectProductTypeList","selectProductFetched","selectName","PageNotFound","Loader","ProductTypePage","match","location","loading","error","fetched","name","page","search","split","manufactorUrl","params","categoryUrl","productTypeUrl","status","mapStateToProps","productTypeList","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,iBAAT,QAAkC,qBAAlC,C,CACA;;AACA,OAAOC,YAAP,MAAyB,+DAAzB;AACA,OAAOC,UAAP,MAAuB,yDAAvB;AACA,SACEC,gBADF,EAEEC,gBAFF,QAGO,+CAHP;AAIA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SACEC,sBADF,EAEEC,wBAFF,EAGEC,qBAHF,EAIEC,oBAJF,EAKEC,UALF,QAMO,iDANP;AAOA,OAAOC,YAAP,MAAyB,4CAAzB;AACA,OAAOC,MAAP,MAAmB,6CAAnB;;AACA,MAAMC,eAAe,GAAG,CAAC;AACvBC,EAAAA,KADuB;AAEvBC,EAAAA,QAFuB;AAGvBb,EAAAA,gBAHuB;AAIvBC,EAAAA,gBAJuB;AAKvBa,EAAAA,OALuB;AAMvBC,EAAAA,KANuB;AAOvBC,EAAAA,OAPuB;AAQvBC,EAAAA;AARuB,CAAD,KASlB;AACJrB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIsB,IAAI,GAAG,CAACL,QAAQ,CAACM,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAD,IAAkC,CAA7C;AACA,QAAI;AAAEC,MAAAA;AAAF,QAAoBT,KAAK,CAACU,MAA9B;;AACA,QAAIT,QAAQ,CAACM,MAAT,IAAmBH,OAAvB,EAAgC;AAC9Bf,MAAAA,gBAAgB,CAACoB,aAAD,EAAgBH,IAAhB,CAAhB;AACA;AACD;;AACDlB,IAAAA,gBAAgB,CAACqB,aAAD,EAAgBH,IAAhB,CAAhB;AACD,GARQ,EAQN,CACDlB,gBADC,EAEDC,gBAFC,EAGDY,QAAQ,CAACM,MAHR,EAIDP,KAAK,CAACU,MAAN,CAAaC,WAJZ,EAKDX,KAAK,CAACU,MAAN,CAAaE,cALZ,CARM,CAAT;;AAeA,MAAIV,OAAJ,EAAa;AACX,wBAAO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACD,MAAIC,KAAK,IAAIA,KAAK,CAACU,MAAN,IAAgB,GAA7B,EAAkC;AAChC,wBAAO,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACD,sBACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAOD,CAtCD;;AAwCA,MAAMC,eAAe,GAAGvB,wBAAwB,CAAC;AAC/CY,EAAAA,KAAK,EAAEX,sBADwC;AAE/CU,EAAAA,OAAO,EAAET,wBAFsC;AAG/CsB,EAAAA,eAAe,EAAErB,qBAH8B;AAI/CU,EAAAA,OAAO,EAAET,oBAJsC;AAK/CU,EAAAA,IAAI,EAAET;AALyC,CAAD,CAAhD;;AAOA,MAAMoB,kBAAkB,GAAIC,QAAD,KAAe;AACxC7B,EAAAA,gBAAgB,EAAE,CAACuB,WAAD,EAAcC,cAAd,EAA8BN,IAA9B,KAAuCW,QAAQ,CAAC7B,gBAAgB,CAACuB,WAAD,EAAcC,cAAd,EAA8BN,IAA9B,CAAjB,CADzB;AAExCjB,EAAAA,gBAAgB,EAAE,CAACsB,WAAD,EAAcC,cAAd,EAA8BN,IAA9B,KAAuCW,QAAQ,CAAC5B,gBAAgB,CAACsB,WAAD,EAAcC,cAAd,EAA8BN,IAA9B,CAAjB;AAFzB,CAAf,CAA3B;;AAIA,eAAehB,OAAO,CAACwB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CjB,eAA7C,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { ManufactorWrapper } from \"./manufactor.styles\";\n// import { default as ProductTypeOverview } from \"../../components/ProductType/product-type-overview/product-type-overview.container\";\nimport MasterHeader from \"../../components/Layout/master-header/master-header.component\";\nimport Background from \"../../components/Layout/background/background.component\";\nimport {\n  fetchProductType,\n  fetchProductList,\n} from \"../../redux/product-type/product-type.actions\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport {\n  selectProductTypeError,\n  selectProductTypeLoading,\n  selectProductTypeList,\n  selectProductFetched,\n  selectName,\n} from \"../../redux/product-type/product-type.selectors\";\nimport PageNotFound from \"../page-not-found/page-not-found.component\";\nimport Loader from \"../../components/UI/loader/loader.component\";\nconst ProductTypePage = ({\n  match,\n  location,\n  fetchProductType,\n  fetchProductList,\n  loading,\n  error,\n  fetched,\n  name,\n}) => {\n  useEffect(() => {\n    let page = +location.search.split(\"=\")[1] || 1;    \n    let { manufactorUrl } = match.params;\n    if (location.search && fetched) {\n      fetchProductList(manufactorUrl, page);\n      return;\n    }\n    fetchProductType(manufactorUrl, page);\n  }, [\n    fetchProductType,\n    fetchProductList,\n    location.search,\n    match.params.categoryUrl,\n    match.params.productTypeUrl,\n  ]);\n  if (loading) {\n    return <Loader />;\n  }\n  if (error && error.status == 404) {\n    return <PageNotFound />;\n  }\n  return (\n    <ManufactorWrapper>\n      {/* <MasterHeader />\n      <Background label={name} />\n      <ProductTypeOverview /> */}\n    </ManufactorWrapper>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  error: selectProductTypeError,\n  loading: selectProductTypeLoading,\n  productTypeList: selectProductTypeList,\n  fetched: selectProductFetched,\n  name: selectName,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  fetchProductType: (categoryUrl, productTypeUrl, page) => dispatch(fetchProductType(categoryUrl, productTypeUrl, page)),\n  fetchProductList: (categoryUrl, productTypeUrl, page) => dispatch(fetchProductList(categoryUrl, productTypeUrl, page)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductTypePage);\n"]},"metadata":{},"sourceType":"module"}