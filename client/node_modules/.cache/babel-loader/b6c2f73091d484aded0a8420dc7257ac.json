{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/pages/product-type/product-type.component.jsx\";\nimport React, { useEffect } from 'react';\nimport { ProductTypeWrapper } from \"./product-type.styles\";\nimport { default as CategoryOverview } from \"../../components/Category/category-overview/category-overview.container\";\nimport MasterHeader from \"../../components/Layout/master-header/master-header.component\";\nimport Background from \"../../components/Layout/background/background.component\";\nimport { fetchProductType, fetchProductList } from \"../../redux/product-type/product-type.actions\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectCategoryError, selectCategoryLoading, selectCategoryList, selectProductFetched } from \"../../redux/category/category.selectors\";\nimport PageNotFound from \"../page-not-found/page-not-found.component\";\nimport Loader from \"../../components/UI/loader/loader.component\";\n\nconst CategoryPage = ({\n  match,\n  fetchProductType,\n  fetchProductList\n}) => {\n  useEffect(() => {\n    let page = 1;\n    let productTypeUrl = match.params.productTypeUrl; // if(location.search && fetched){\n    //   page = +location.search.split(\"=\")[1];       \n    //   fetchProductList(productTypeUrl, page);\n    //   return ; \n    // }         \n    // fetchCategory(productTypeUrl, page);\n  }, [fetchCategory, location.search, match.params.categoryUrl, match.params.productTypeUrl]);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 10\n      }\n    });\n  }\n\n  if (error && error.status == 404) {\n    return /*#__PURE__*/React.createElement(PageNotFound, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 10\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(ProductTypeWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, \"ProductType\");\n};\n\nconst mapStateToProps = createStructuredSelector({});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchProductType: (path, page) => dispatch(fetchProductType(path, page)),\n  fetchProductList: (path, page) => dispatch(fetchProductList(path, page))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryPage);","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/pages/product-type/product-type.component.jsx"],"names":["React","useEffect","ProductTypeWrapper","default","CategoryOverview","MasterHeader","Background","fetchProductType","fetchProductList","connect","createStructuredSelector","selectCategoryError","selectCategoryLoading","selectCategoryList","selectProductFetched","PageNotFound","Loader","CategoryPage","match","page","productTypeUrl","params","fetchCategory","location","search","categoryUrl","loading","error","status","mapStateToProps","mapDispatchToProps","dispatch","path"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,kBAAR,QAAiC,uBAAjC;AACA,SAAQC,OAAO,IAAIC,gBAAnB,QAA0C,yEAA1C;AACA,OAAOC,YAAP,MAAyB,+DAAzB;AACA,OAAOC,UAAP,MAAuB,yDAAvB;AACA,SAAQC,gBAAR,EAA0BC,gBAA1B,QAAiD,+CAAjD;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAAQC,mBAAR,EAA6BC,qBAA7B,EAAqDC,kBAArD,EAAyEC,oBAAzE,QAAoG,yCAApG;AACA,OAAOC,YAAP,MAAyB,4CAAzB;AACA,OAAOC,MAAP,MAAmB,6CAAnB;;AACA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQX,EAAAA,gBAAR;AAA0BC,EAAAA;AAA1B,CAAD,KAAiD;AACpEP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIkB,IAAI,GAAG,CAAX;AACA,QAAIC,cAAc,GAAGF,KAAK,CAACG,MAAN,CAAaD,cAAlC,CAFc,CAId;AACA;AACA;AACA;AACA;AACA;AAED,GAXQ,EAWN,CAACE,aAAD,EAAgBC,QAAQ,CAACC,MAAzB,EAAiCN,KAAK,CAACG,MAAN,CAAaI,WAA9C,EAA2DP,KAAK,CAACG,MAAN,CAAaD,cAAxE,CAXM,CAAT;;AAYA,MAAGM,OAAH,EAAW;AACX,wBAAO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACC;;AACD,MAAGC,KAAK,IAAIA,KAAK,CAACC,MAAN,IAAgB,GAA5B,EAAgC;AAChC,wBAAO,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACC;;AACD,sBACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF;AAKD,CAxBD;;AA0BA,MAAMC,eAAe,GAAGnB,wBAAwB,CAAC,EAAD,CAAhD;;AAGA,MAAMoB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCxB,EAAAA,gBAAgB,EAAG,CAACyB,IAAD,EAAMb,IAAN,KAAeY,QAAQ,CAACxB,gBAAgB,CAACyB,IAAD,EAAMb,IAAN,CAAjB,CADJ;AAEtCX,EAAAA,gBAAgB,EAAG,CAACwB,IAAD,EAAOb,IAAP,KAAgBY,QAAQ,CAACvB,gBAAgB,CAACwB,IAAD,EAAOb,IAAP,CAAjB;AAFL,CAAL,CAAnC;;AAIA,eAAeV,OAAO,CAACoB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6Cb,YAA7C,CAAf","sourcesContent":["import React, {useEffect} from 'react'\nimport {ProductTypeWrapper} from \"./product-type.styles\";\nimport {default as CategoryOverview} from \"../../components/Category/category-overview/category-overview.container\";\nimport MasterHeader from \"../../components/Layout/master-header/master-header.component\"\nimport Background from \"../../components/Layout/background/background.component\"\nimport {fetchProductType, fetchProductList} from \"../../redux/product-type/product-type.actions\";\nimport {connect} from \"react-redux\";\nimport {createStructuredSelector} from \"reselect\";\nimport {selectCategoryError, selectCategoryLoading , selectCategoryList, selectProductFetched} from \"../../redux/category/category.selectors\"\nimport PageNotFound from \"../page-not-found/page-not-found.component\"\nimport Loader from \"../../components/UI/loader/loader.component\"\nconst CategoryPage = ({match, fetchProductType, fetchProductList}) => {\n  useEffect(() => {\n    let page = 1 ; \n    let productTypeUrl = match.params.productTypeUrl\n\n    // if(location.search && fetched){\n    //   page = +location.search.split(\"=\")[1];       \n    //   fetchProductList(productTypeUrl, page);\n    //   return ; \n    // }         \n    // fetchCategory(productTypeUrl, page);\n                  \n  }, [fetchCategory, location.search, match.params.categoryUrl, match.params.productTypeUrl]);\n  if(loading){\n  return <Loader/>\n  }\n  if(error && error.status == 404){\n  return <PageNotFound/>\n  }\n  return (\n    <ProductTypeWrapper>\n      ProductType\n    </ProductTypeWrapper>\n  )\n}\n\nconst mapStateToProps = createStructuredSelector({\n\n})\nconst mapDispatchToProps = dispatch => ({\n  fetchProductType : (path,page) => dispatch(fetchProductType(path,page)),\n  fetchProductList : (path, page) => dispatch(fetchProductList(path, page))\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryPage)\n"]},"metadata":{},"sourceType":"module"}