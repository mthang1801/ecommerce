{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Layout/products-popup-item/products-popup-item.component.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { ProductsPopupItemContainer, Label, CustomLink } from \"./products-popup-item.styles\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectProductList } from \"../../../redux/product/product.selectors\";\n\nconst ProductsPopupItem = ({\n  productLabel,\n  productTypeId,\n  productList\n}) => {\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    console.log(productList);\n    setProducts(productList.filter(product => product.productType.toString() === productTypeId.toString()));\n  }, [productTypeId]);\n  return /*#__PURE__*/React.createElement(ProductsPopupItemContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, productLabel), products && products.length && products.map(product => /*#__PURE__*/React.createElement(CustomLink, {\n    title: product.name,\n    to: product.linkUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, product.name)));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  productList: selectProductList\n});\nexport default connect(mapStateToProps)(ProductsPopupItem);","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Layout/products-popup-item/products-popup-item.component.jsx"],"names":["React","useState","useEffect","ProductsPopupItemContainer","Label","CustomLink","connect","createStructuredSelector","selectProductList","ProductsPopupItem","productLabel","productTypeId","productList","products","setProducts","console","log","filter","product","productType","toString","length","map","name","linkUrl","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SACEC,0BADF,EAEEC,KAFF,EAGEC,UAHF,QAIO,8BAJP;AAKA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAAQC,iBAAR,QAAgC,0CAAhC;;AACA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,aAAhB;AAA+BC,EAAAA;AAA/B,CAAD,KAAkD;AAC1E,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AACAE,IAAAA,WAAW,CAACF,WAAW,CAACK,MAAZ,CAAmBC,OAAO,IAAIA,OAAO,CAACC,WAAR,CAAoBC,QAApB,OAAmCT,aAAa,CAACS,QAAd,EAAjE,CAAD,CAAX;AACD,GAHQ,EAGN,CAACT,aAAD,CAHM,CAAT;AAIA,sBAEE,oBAAC,0BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQD,YAAR,CADF,EAEGG,QAAQ,IAAIA,QAAQ,CAACQ,MAArB,IACCR,QAAQ,CAACS,GAAT,CAAcJ,OAAD,iBACX,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEA,OAAO,CAACK,IAA3B;AAAiC,IAAA,EAAE,EAAEL,OAAO,CAACM,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,OAAO,CAACK,IADX,CADF,CAHJ,CAFF;AAaD,CAnBD;;AAoBA,MAAOE,eAAe,GAAGlB,wBAAwB,CAAC;AAChDK,EAAAA,WAAW,EAAGJ;AADkC,CAAD,CAAjD;AAGA,eAAeF,OAAO,CAACmB,eAAD,CAAP,CAAyBhB,iBAAzB,CAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport {\n  ProductsPopupItemContainer,\n  Label,\n  CustomLink,\n} from \"./products-popup-item.styles\";\nimport {connect} from \"react-redux\";\nimport {createStructuredSelector} from \"reselect\";\nimport {selectProductList} from \"../../../redux/product/product.selectors\"\nconst ProductsPopupItem = ({ productLabel, productTypeId, productList }) => {\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    console.log(productList)\n    setProducts(productList.filter(product => product.productType.toString() === productTypeId.toString()))\n  }, [productTypeId])\n  return (\n    \n    <ProductsPopupItemContainer>\n      <Label>{productLabel}</Label>\n      {products && products.length && (\n        products.map((product) => (\n          <CustomLink title={product.name} to={product.linkUrl}>\n            {product.name}\n          </CustomLink>\n        ))\n      )}\n    </ProductsPopupItemContainer>\n  );\n};\nconst  mapStateToProps = createStructuredSelector({  \n  productList : selectProductList\n})\nexport default connect(mapStateToProps)(ProductsPopupItem);\n"]},"metadata":{},"sourceType":"module"}