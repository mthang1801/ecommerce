{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Layout/category-menu/category-menu.component.jsx\";\nimport React, { useState, useEffect, useRef, useContext } from \"react\";\nimport { CategoryMenuContainer, DropdownContent, CategoryList, CustomLink } from \"./category-menu.styles\";\nimport CATEGORY_MENU from \"../../../data/menu.json\";\nimport ProductsPopup from \"../products-popup/products-popup.component\";\nimport AppContext from \"../../../context/app-viewport.context\";\nimport { connect } from \"react-redux\";\nimport { selectCategoryList } from \"../../../redux/category/category.selectors\";\nimport { createStructuredSelector } from \"reselect\";\nimport DropdownMenu from \"../dropdown-menu-content/dropdown-menu-content.component\";\nimport { withRouter } from \"react-router-dom\";\n\nconst CategoryMenu = ({\n  history\n}) => {\n  const categoryList = Object.keys(JSON.parse(JSON.stringify(CATEGORY_MENU))).map(key => CATEGORY_MENU[key]);\n  const [ctgId, setCtfId] = useState(null);\n  const [offsetWidth, setOffsetWidth] = useState(0);\n  const [touched, setIsTouched] = useState(false);\n  const [activeLink, setActiveLink] = useState(null);\n  const categoryRef = useRef(null);\n  const listRef = useRef(null);\n  const [smallView, setSmallView] = useState(window.innerWidth < 992);\n  const width = useContext(AppContext);\n  useEffect(() => {\n    if (width < 992) {\n      setSmallView(true);\n    } else {\n      setSmallView(false);\n    }\n\n    setOffsetWidth(categoryRef.current.offsetWidth);\n  }, [width]);\n  useEffect(() => {\n    function removePopupWhenMouseOutListCategory(e) {\n      if (listRef && !listRef.current.contains(e.target)) {\n        setCtfId(null);\n        setIsTouched(false);\n        setActiveLink(null);\n      }\n    }\n\n    document.addEventListener(\"mouseover\", removePopupWhenMouseOutListCategory);\n    return () => document.removeEventListener(\"mouseover\", removePopupWhenMouseOutListCategory);\n  });\n\n  const handleMouseEnter = (e, categoryId) => {\n    setCtfId(categoryId);\n    setIsTouched(true);\n    setActiveLink(categoryId);\n  };\n\n  return /*#__PURE__*/React.createElement(CategoryMenuContainer, {\n    ref: categoryRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CategoryList, {\n    ref: listRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, categoryList.map(item => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: item._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DropdownMenu, {\n    onMouseEnter: e => handleMouseEnter(e, item._id),\n    item: item,\n    activeLink: activeLink,\n    onClick: e => history.push(item.linkUrl),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(ProductsPopup, {\n    offsetWidth: offsetWidth,\n    categoryId: ctgId,\n    data: JSON.stringify(CATEGORY_MENU[ctgId]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 10\n    }\n  })));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  categoryList: selectCategoryList\n});\nexport default connect(mapStateToProps)(withRouter(CategoryMenu));","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Layout/category-menu/category-menu.component.jsx"],"names":["React","useState","useEffect","useRef","useContext","CategoryMenuContainer","DropdownContent","CategoryList","CustomLink","CATEGORY_MENU","ProductsPopup","AppContext","connect","selectCategoryList","createStructuredSelector","DropdownMenu","withRouter","CategoryMenu","history","categoryList","Object","keys","JSON","parse","stringify","map","key","ctgId","setCtfId","offsetWidth","setOffsetWidth","touched","setIsTouched","activeLink","setActiveLink","categoryRef","listRef","smallView","setSmallView","window","innerWidth","width","current","removePopupWhenMouseOutListCategory","e","contains","target","document","addEventListener","removeEventListener","handleMouseEnter","categoryId","item","_id","push","linkUrl","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, useContext } from \"react\";\nimport {\n  CategoryMenuContainer,\n  DropdownContent,\n  CategoryList,\n  CustomLink,\n} from \"./category-menu.styles\";\nimport CATEGORY_MENU from \"../../../data/menu.json\";\nimport ProductsPopup from \"../products-popup/products-popup.component\";\nimport AppContext from \"../../../context/app-viewport.context\";\nimport { connect } from \"react-redux\";\nimport { selectCategoryList } from \"../../../redux/category/category.selectors\";\nimport { createStructuredSelector } from \"reselect\";\nimport DropdownMenu from \"../dropdown-menu-content/dropdown-menu-content.component\";\nimport {withRouter} from \"react-router-dom\";\n\nconst CategoryMenu = ({history}) => {\n  const categoryList = Object.keys(JSON.parse(JSON.stringify(CATEGORY_MENU))).map(\n    (key) => CATEGORY_MENU[key]\n  ); \n  const [ctgId, setCtfId] = useState(null);\n  const [offsetWidth, setOffsetWidth] = useState(0);\n  const [touched, setIsTouched] = useState(false);\n  const [activeLink, setActiveLink] = useState(null);\n  const categoryRef = useRef(null);\n  const listRef = useRef(null);\n\n  const [smallView, setSmallView] = useState(window.innerWidth < 992);\n  const width = useContext(AppContext);\n  useEffect(() => {\n    if (width < 992) {\n      setSmallView(true);\n    } else {\n      setSmallView(false);\n    }\n    setOffsetWidth(categoryRef.current.offsetWidth);\n  }, [width]);\n\n  useEffect(() => {\n    function removePopupWhenMouseOutListCategory(e) {\n      if (listRef && !listRef.current.contains(e.target)) {\n        setCtfId(null);\n        setIsTouched(false);\n        setActiveLink(null);\n      }\n    }\n    document.addEventListener(\"mouseover\", removePopupWhenMouseOutListCategory);\n    return () =>\n      document.removeEventListener(\n        \"mouseover\",\n        removePopupWhenMouseOutListCategory\n      );\n  });\n\n  const handleMouseEnter = (e, categoryId) => {\n    setCtfId(categoryId);\n    setIsTouched(true);\n    setActiveLink(categoryId);\n  };\n\n  return (\n    <CategoryMenuContainer ref={categoryRef}>\n      <CategoryList ref={listRef}>\n        {categoryList.map((item) => (\n          <React.Fragment key={item._id}>\n            <DropdownMenu\n              onMouseEnter={(e) => handleMouseEnter(e, item._id)}\n              item={item}\n              activeLink={activeLink}\n              onClick={e => history.push(item.linkUrl)}\n            />           \n          </React.Fragment>\n        ))}\n         <ProductsPopup\n              offsetWidth={offsetWidth}\n              categoryId={ctgId}\n              data={JSON.stringify(CATEGORY_MENU[ctgId])}\n            />\n      </CategoryList>\n    </CategoryMenuContainer>\n  );\n};\nconst mapStateToProps = createStructuredSelector({\n  categoryList: selectCategoryList,\n});\nexport default connect(mapStateToProps)(withRouter(CategoryMenu));\n"]},"metadata":{},"sourceType":"module"}