{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/pages/category/category.component.jsx\";\nimport React, { useEffect } from 'react';\nimport { CategoryPageWrapper } from \"./category.styles\";\nimport { default as CategoryOverview } from \"../../components/Category/category-overview/category-overview.container\";\nimport MasterHeader from \"../../components/Layout/master-header/master-header.component\";\nimport PageError from \"../page-error/page-error.component\";\nimport Background from \"../../components/Layout/background/background.component\";\nimport { fetchCategory, fetchProductList } from \"../../redux/category/category.actions\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectCategoryError, selectCategoryLoading, selectCategoryList, selectProductFetched } from \"../../redux/category/category.selectors\";\nimport Loader from \"../../components/UI/loader/loader.component\";\n\nconst CategoryPage = ({\n  match,\n  fetchCategory,\n  location,\n  error,\n  loading,\n  categoryList,\n  fetchProductList,\n  fetched\n}) => {\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const min_price = +urlParams.get(\"min_price\");\n    const max_price = +urlParams.get(\"max_price\");\n    const page = +urlParams.get(\"page\") || 1;\n    let categoryPath = match.params.categoryPath;\n\n    if (location.search && fetched) {\n      fetchProductList(categoryPath, page);\n      return;\n    }\n\n    fetchCategory(categoryPath, page);\n  }, [fetchCategory, location.search, match.params.categoryPath]);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(PageError, {\n      error: error.msg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (!loading && categoryList) {\n    return /*#__PURE__*/React.createElement(CategoryPageWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MasterHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Background, {\n      label: `Trang chủ/ Danh mục sản phẩm/ ${categoryList.name}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(CategoryOverview, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }));\n  }\n};\n\nconst mapStateToProps = createStructuredSelector({\n  error: selectCategoryError,\n  loading: selectCategoryLoading,\n  categoryList: selectCategoryList,\n  fetched: selectProductFetched\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCategory: (path, page) => dispatch(fetchCategory(path, page)),\n  fetchProductList: (path, page) => dispatch(fetchProductList(path, page))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryPage);","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/pages/category/category.component.jsx"],"names":["React","useEffect","CategoryPageWrapper","default","CategoryOverview","MasterHeader","PageError","Background","fetchCategory","fetchProductList","connect","createStructuredSelector","selectCategoryError","selectCategoryLoading","selectCategoryList","selectProductFetched","Loader","CategoryPage","match","location","error","loading","categoryList","fetched","urlParams","URLSearchParams","window","search","min_price","get","max_price","page","categoryPath","params","msg","name","mapStateToProps","mapDispatchToProps","dispatch","path"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,mBAAR,QAAkC,mBAAlC;AACA,SAAQC,OAAO,IAAIC,gBAAnB,QAA0C,yEAA1C;AACA,OAAOC,YAAP,MAAyB,+DAAzB;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,UAAP,MAAuB,yDAAvB;AACA,SAAQC,aAAR,EAAuBC,gBAAvB,QAA8C,uCAA9C;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAAQC,mBAAR,EAA6BC,qBAA7B,EAAqDC,kBAArD,EAAyEC,oBAAzE,QAAoG,yCAApG;AACA,OAAOC,MAAP,MAAmB,6CAAnB;;AACA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQV,EAAAA,aAAR;AAAuBW,EAAAA,QAAvB;AAAiCC,EAAAA,KAAjC;AAAwCC,EAAAA,OAAxC;AAAiDC,EAAAA,YAAjD;AAA+Db,EAAAA,gBAA/D;AAAiFc,EAAAA;AAAjF,CAAD,KAA+F;AAClHtB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMuB,SAAS,GAAG,IAAIC,eAAJ,CAAoBC,MAAM,CAACP,QAAP,CAAgBQ,MAApC,CAAlB;AACA,UAAMC,SAAS,GAAG,CAACJ,SAAS,CAACK,GAAV,CAAc,WAAd,CAAnB;AACA,UAAMC,SAAS,GAAG,CAACN,SAAS,CAACK,GAAV,CAAc,WAAd,CAAnB;AACA,UAAME,IAAI,GAAG,CAACP,SAAS,CAACK,GAAV,CAAc,MAAd,CAAD,IAA0B,CAAvC;AACA,QAAIG,YAAY,GAAGd,KAAK,CAACe,MAAN,CAAaD,YAAhC;;AACA,QAAGb,QAAQ,CAACQ,MAAT,IAAmBJ,OAAtB,EAA8B;AAC5Bd,MAAAA,gBAAgB,CAACuB,YAAD,EAAeD,IAAf,CAAhB;AACA;AACD;;AACDvB,IAAAA,aAAa,CAACwB,YAAD,EAAeD,IAAf,CAAb;AAEH,GAZQ,EAYN,CAACvB,aAAD,EAAgBW,QAAQ,CAACQ,MAAzB,EAAiCT,KAAK,CAACe,MAAN,CAAaD,YAA9C,CAZM,CAAT;;AAaA,MAAGX,OAAH,EAAW;AACT,wBAAO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACD,MAAGD,KAAH,EAAS;AACP,wBAAO,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAEA,KAAK,CAACc,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACD,MAAG,CAACb,OAAD,IAAYC,YAAf,EAA4B;AAC1B,wBACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAG,iCAAgCA,YAAY,CAACa,IAAK,EAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAOD;AAEF,CA9BD;;AAgCA,MAAMC,eAAe,GAAGzB,wBAAwB,CAAC;AAC/CS,EAAAA,KAAK,EAAGR,mBADuC;AAE/CS,EAAAA,OAAO,EAAGR,qBAFqC;AAG/CS,EAAAA,YAAY,EAAGR,kBAHgC;AAI/CS,EAAAA,OAAO,EAAGR;AAJqC,CAAD,CAAhD;;AAMA,MAAMsB,kBAAkB,GAAGC,QAAQ,KAAK;AACtC9B,EAAAA,aAAa,EAAG,CAAC+B,IAAD,EAAMR,IAAN,KAAeO,QAAQ,CAAC9B,aAAa,CAAC+B,IAAD,EAAMR,IAAN,CAAd,CADD;AAEtCtB,EAAAA,gBAAgB,EAAG,CAAC8B,IAAD,EAAOR,IAAP,KAAgBO,QAAQ,CAAC7B,gBAAgB,CAAC8B,IAAD,EAAOR,IAAP,CAAjB;AAFL,CAAL,CAAnC;;AAIA,eAAerB,OAAO,CAAC0B,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CpB,YAA7C,CAAf","sourcesContent":["import React, {useEffect} from 'react'\nimport {CategoryPageWrapper} from \"./category.styles\";\nimport {default as CategoryOverview} from \"../../components/Category/category-overview/category-overview.container\";\nimport MasterHeader from \"../../components/Layout/master-header/master-header.component\"\nimport PageError from \"../page-error/page-error.component\"\nimport Background from \"../../components/Layout/background/background.component\"\nimport {fetchCategory, fetchProductList} from \"../../redux/category/category.actions\";\nimport {connect} from \"react-redux\";\nimport {createStructuredSelector} from \"reselect\";\nimport {selectCategoryError, selectCategoryLoading , selectCategoryList, selectProductFetched} from \"../../redux/category/category.selectors\"\nimport Loader from \"../../components/UI/loader/loader.component\"\nconst CategoryPage = ({match, fetchCategory, location, error, loading, categoryList, fetchProductList, fetched}) => { \n  useEffect(() => {              \n      const urlParams = new URLSearchParams(window.location.search);\n      const min_price = +urlParams.get(\"min_price\");\n      const max_price = +urlParams.get(\"max_price\");\n      const page = +urlParams.get(\"page\") || 1;\n      let categoryPath = match.params.categoryPath;      \n      if(location.search && fetched){               \n        fetchProductList(categoryPath, page);\n        return ; \n      }         \n      fetchCategory(categoryPath, page);\n                    \n  }, [fetchCategory, location.search, match.params.categoryPath]);\n  if(loading){\n    return <Loader/>\n  }\n  if(error){\n    return <PageError error={error.msg}/>\n  }\n  if(!loading && categoryList){\n    return (\n      <CategoryPageWrapper>             \n        <MasterHeader/>\n        <Background label={`Trang chủ/ Danh mục sản phẩm/ ${categoryList.name}`}/>   \n        <CategoryOverview/>\n      </CategoryPageWrapper>\n    )\n  }\n  \n}\n\nconst mapStateToProps = createStructuredSelector({\n  error : selectCategoryError,\n  loading : selectCategoryLoading,\n  categoryList : selectCategoryList,\n  fetched : selectProductFetched\n})\nconst mapDispatchToProps = dispatch => ({\n  fetchCategory : (path,page) => dispatch(fetchCategory(path,page)),\n  fetchProductList : (path, page) => dispatch(fetchProductList(path, page))\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryPage)\n"]},"metadata":{},"sourceType":"module"}