{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/pages/manufactor/manufactor.component.jsx\";\nimport React, { useEffect } from \"react\";\nimport { ManufactorWrapper } from \"./manufactor.styles\";\nimport { default as ManufactorOverview } from \"../../components/Manufactor/manufactor-overview/manufactor-overview.container\";\nimport MasterHeader from \"../../components/Layout/master-header/master-header.component\";\nimport Background from \"../../components/Layout/background/background.component\";\nimport { fetchManufactor, fetchProductList } from \"../../redux/manufactor/manufactor.actions\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectManufactorError, selectManufactorLoading, selectProductFetched, selectName } from \"../../redux/manufactor/manufactor.selectors\";\nimport PageNotFound from \"../page-not-found/page-not-found.component\";\nimport Loader from \"../../components/UI/loader/loader.component\";\n\nconst ManufactorPage = ({\n  match,\n  location,\n  fetchManufactor,\n  fetchProductList,\n  loading,\n  error,\n  fetched,\n  name\n}) => {\n  useEffect(() => {\n    let page = +location.search.split(\"=\")[1] || 1;\n    let {\n      manufactorPath\n    } = match.params;\n    console.log(manufactorPath);\n\n    if (location.search && fetched) {\n      fetchProductList(manufactorPath, page);\n      return;\n    }\n\n    fetchManufactor(manufactorPath, page);\n  }, [fetchManufactor, fetchProductList, location.search, match.params.manufactorPath]);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (error && error.status == 404) {\n    return /*#__PURE__*/React.createElement(PageNotFound, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(ManufactorWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MasterHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Background, {\n    label: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ManufactorOverview, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  error: selectManufactorError,\n  loading: selectManufactorLoading,\n  fetched: selectProductFetched,\n  name: selectName\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchManufactor: (pathUrl, page) => dispatch(fetchManufactor(pathUrl, page)),\n  fetchProductList: (pathUrl, page) => dispatch(fetchProductList(pathUrl, page))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManufactorPage);","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/pages/manufactor/manufactor.component.jsx"],"names":["React","useEffect","ManufactorWrapper","default","ManufactorOverview","MasterHeader","Background","fetchManufactor","fetchProductList","connect","createStructuredSelector","selectManufactorError","selectManufactorLoading","selectProductFetched","selectName","PageNotFound","Loader","ManufactorPage","match","location","loading","error","fetched","name","page","search","split","manufactorPath","params","console","log","status","mapStateToProps","mapDispatchToProps","dispatch","pathUrl"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { ManufactorWrapper } from \"./manufactor.styles\";\nimport { default as ManufactorOverview } from \"../../components/Manufactor/manufactor-overview/manufactor-overview.container\";\nimport MasterHeader from \"../../components/Layout/master-header/master-header.component\";\nimport Background from \"../../components/Layout/background/background.component\";\nimport {\n  fetchManufactor,\n  fetchProductList,\n} from \"../../redux/manufactor/manufactor.actions\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport {\n  selectManufactorError,\n  selectManufactorLoading,\n  selectProductFetched,\n  selectName,\n} from \"../../redux/manufactor/manufactor.selectors\";\nimport PageNotFound from \"../page-not-found/page-not-found.component\";\nimport Loader from \"../../components/UI/loader/loader.component\";\nconst ManufactorPage = ({\n  match,\n  location,\n  fetchManufactor,\n  fetchProductList,\n  loading,\n  error,\n  fetched,\n  name,\n}) => {\n  useEffect(() => {   \n    let page = +location.search.split(\"=\")[1] || 1;       \n    let { manufactorPath } = match.params;  \n    console.log(manufactorPath);\n    if (location.search && fetched) {\n      fetchProductList(manufactorPath, page);\n      return;\n    } \n    fetchManufactor(manufactorPath, page);\n  }, [\n    fetchManufactor,\n    fetchProductList,\n    location.search,\n    match.params.manufactorPath,\n  ]);\n  if (loading) {\n    return <Loader />;\n  }\n  if (error && error.status == 404) {\n    return <PageNotFound />;\n  }\n  return (\n    <ManufactorWrapper>\n      <MasterHeader />\n      <Background label={name} />\n      <ManufactorOverview />\n    </ManufactorWrapper>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  error: selectManufactorError,\n  loading: selectManufactorLoading, \n  fetched: selectProductFetched,\n  name: selectName,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  fetchManufactor: ( pathUrl, page) => dispatch(fetchManufactor( pathUrl, page)),\n  fetchProductList: ( pathUrl, page) => dispatch(fetchProductList( pathUrl, page)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ManufactorPage);\n"]},"metadata":{},"sourceType":"module"}