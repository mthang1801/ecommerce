{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Layout/products-popup/products-popup.component.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { ProductsPopupContainer } from \"./products-popup.styles\";\nimport { selectProductTypeList } from \"../../../redux/product-type/product-type.selectors\";\nimport { selectProductList } from \"../../../redux/product/product.selectors\";\nimport ProductsPopupItem from \"../products-popup-item/products-popup-item.component\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\n\nconst ProductsPopup = ({\n  offsetWidth,\n  categoryId,\n  productTypeList,\n  productList\n}) => {\n  const [productTypesByCategoryId, setProductTypesByCategoryId] = useState(null);\n  useEffect(() => {\n    setProductTypesByCategoryId(productTypeList.filter(productType => productType.category.toString() === categoryId.toString()));\n  }, [categoryId]);\n  console.log(productTypesByCategoryId);\n  return /*#__PURE__*/React.createElement(ProductsPopupContainer, {\n    offsetWidth: offsetWidth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  });\n};\n\nconst mapStateToProps = createStructuredSelector({\n  productTypeList: selectProductTypeList,\n  productList: selectProductList\n});\nexport default connect(mapStateToProps)(ProductsPopup);","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Layout/products-popup/products-popup.component.jsx"],"names":["React","useEffect","useState","ProductsPopupContainer","selectProductTypeList","selectProductList","ProductsPopupItem","connect","createStructuredSelector","ProductsPopup","offsetWidth","categoryId","productTypeList","productList","productTypesByCategoryId","setProductTypesByCategoryId","filter","productType","category","toString","console","log","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,sBAAT,QAAuC,yBAAvC;AACA,SAASC,qBAAT,QAAsC,oDAAtC;AACA,SAASC,iBAAT,QAAkC,0CAAlC;AACA,OAAOC,iBAAP,MAA8B,sDAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;;AACA,MAAMC,aAAa,GAAG,CAAC;AACrBC,EAAAA,WADqB;AAErBC,EAAAA,UAFqB;AAGrBC,EAAAA,eAHqB;AAIrBC,EAAAA;AAJqB,CAAD,KAKhB;AACJ,QAAM,CAACC,wBAAD,EAA2BC,2BAA3B,IAA0Db,QAAQ,CACtE,IADsE,CAAxE;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,2BAA2B,CACzBH,eAAe,CAACI,MAAhB,CACGC,WAAD,IACEA,WAAW,CAACC,QAAZ,CAAqBC,QAArB,OAAoCR,UAAU,CAACQ,QAAX,EAFxC,CADyB,CAA3B;AAMD,GAPQ,EAON,CAACR,UAAD,CAPM,CAAT;AAQAS,EAAAA,OAAO,CAACC,GAAR,CAAYP,wBAAZ;AACA,sBACE,oBAAC,sBAAD;AAAwB,IAAA,WAAW,EAAEJ,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAWD,CA7BD;;AA8BA,MAAMY,eAAe,GAAGd,wBAAwB,CAAC;AAC/CI,EAAAA,eAAe,EAAER,qBAD8B;AAE/CS,EAAAA,WAAW,EAAER;AAFkC,CAAD,CAAhD;AAIA,eAAeE,OAAO,CAACe,eAAD,CAAP,CAAyBb,aAAzB,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { ProductsPopupContainer } from \"./products-popup.styles\";\nimport { selectProductTypeList } from \"../../../redux/product-type/product-type.selectors\";\nimport { selectProductList } from \"../../../redux/product/product.selectors\";\nimport ProductsPopupItem from \"../products-popup-item/products-popup-item.component\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nconst ProductsPopup = ({\n  offsetWidth,\n  categoryId,\n  productTypeList,\n  productList,\n}) => {\n  const [productTypesByCategoryId, setProductTypesByCategoryId] = useState(\n    null\n  );\n  useEffect(() => {\n    setProductTypesByCategoryId(\n      productTypeList.filter(\n        (productType) =>\n          productType.category.toString() === categoryId.toString()\n      )\n    );\n  }, [categoryId]);\n  console.log(productTypesByCategoryId);\n  return (\n    <ProductsPopupContainer offsetWidth={offsetWidth}>\n      {/* {productTypesByCategoryId && productTypesByCategoryId.map((productType) => (\n          <ProductsPopupItem\n            key={productType._id}\n            productLabel={productType.name}\n            productList={productType ? productList.filter(product => product.productType.toString() === productType._id.toString()) : []}\n          />\n        ))} */}\n    </ProductsPopupContainer>\n  );\n};\nconst mapStateToProps = createStructuredSelector({\n  productTypeList: selectProductTypeList,\n  productList: selectProductList,\n});\nexport default connect(mapStateToProps)(ProductsPopup);\n"]},"metadata":{},"sourceType":"module"}