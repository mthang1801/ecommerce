{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/pages/category/category.component.jsx\";\nimport React, { useEffect } from 'react';\nimport { ShopGridPageContainer } from \"./category.styles\";\nimport ShopGridOverview from \"../../components/ShopGrid/shop-grid-overview/shop-grid-overview.component\";\nimport MasterHeader from \"../../components/Layout/master-header/master-header.component\";\nimport Background from \"../../components/Layout/background/background.component\";\nimport { fetchCategory } from \"../../redux/category/category.actions\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectCategoryError, selectCategoryLoading } from \"../../redux/category/category.selectors\";\nimport { Redirect } from \"react-router-dom\";\nimport PageNotFound from \"../page-not-found/page-not-found.component\";\nimport Loader from \"../../components/UI/loader/loader.component\";\n\nconst ShopGridPage = ({\n  match,\n  fetchCategory,\n  location,\n  error,\n  loading\n}) => {\n  console.log(error);\n  useEffect(() => {\n    let page = 1;\n\n    if (location.search) {\n      page = +location.search.split(\"=\")[1];\n    }\n\n    fetchCategory(match.params.categoryUrl || \"\", page);\n  }, [fetchCategory]);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (error && error.status == 404) {\n    return /*#__PURE__*/React.createElement(PageNotFound, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(ShopGridPageContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MasterHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Background, {\n    label: match.params.categoryUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ShopGridOverview, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  error: selectCategoryError,\n  loading: selectCategoryLoading\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCategory: (path, page) => dispatch(fetchCategory(path, page))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopGridPage);","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/pages/category/category.component.jsx"],"names":["React","useEffect","ShopGridPageContainer","ShopGridOverview","MasterHeader","Background","fetchCategory","connect","createStructuredSelector","selectCategoryError","selectCategoryLoading","Redirect","PageNotFound","Loader","ShopGridPage","match","location","error","loading","console","log","page","search","split","params","categoryUrl","status","mapStateToProps","mapDispatchToProps","dispatch","path"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,qBAAR,QAAoC,mBAApC;AACA,OAAOC,gBAAP,MAA6B,2EAA7B;AACA,OAAOC,YAAP,MAAyB,+DAAzB;AACA,OAAOC,UAAP,MAAuB,yDAAvB;AACA,SAAQC,aAAR,QAA4B,uCAA5B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAAQC,mBAAR,EAA6BC,qBAA7B,QAA0D,yCAA1D;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,OAAOC,YAAP,MAAyB,4CAAzB;AACA,OAAOC,MAAP,MAAmB,6CAAnB;;AACA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQT,EAAAA,aAAR;AAAuBU,EAAAA,QAAvB;AAAiCC,EAAAA,KAAjC;AAAwCC,EAAAA;AAAxC,CAAD,KAAsD;AACzEC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAhB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIoB,IAAI,GAAG,CAAX;;AACA,QAAGL,QAAQ,CAACM,MAAZ,EAAmB;AACjBD,MAAAA,IAAI,GAAG,CAACL,QAAQ,CAACM,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAR;AACD;;AACCjB,IAAAA,aAAa,CAACS,KAAK,CAACS,MAAN,CAAaC,WAAb,IAA4B,EAA7B,EAAiCJ,IAAjC,CAAb;AACL,GANQ,EAMN,CAACf,aAAD,CANM,CAAT;;AAOA,MAAGY,OAAH,EAAW;AACT,wBAAO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACD,MAAGD,KAAK,IAAIA,KAAK,CAACS,MAAN,IAAgB,GAA5B,EAAgC;AAC9B,wBAAO,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACD,sBACE,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEX,KAAK,CAACS,MAAN,CAAaC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD,CAtBD;;AAwBA,MAAME,eAAe,GAAGnB,wBAAwB,CAAC;AAC/CS,EAAAA,KAAK,EAAGR,mBADuC;AAE/CS,EAAAA,OAAO,EAAGR;AAFqC,CAAD,CAAhD;;AAIA,MAAMkB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCvB,EAAAA,aAAa,EAAG,CAACwB,IAAD,EAAMT,IAAN,KAAeQ,QAAQ,CAACvB,aAAa,CAACwB,IAAD,EAAMT,IAAN,CAAd;AADD,CAAL,CAAnC;;AAGA,eAAed,OAAO,CAACoB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6Cd,YAA7C,CAAf","sourcesContent":["import React, {useEffect} from 'react'\nimport {ShopGridPageContainer} from \"./category.styles\";\nimport ShopGridOverview from \"../../components/ShopGrid/shop-grid-overview/shop-grid-overview.component\";\nimport MasterHeader from \"../../components/Layout/master-header/master-header.component\"\nimport Background from \"../../components/Layout/background/background.component\"\nimport {fetchCategory} from \"../../redux/category/category.actions\";\nimport {connect} from \"react-redux\";\nimport {createStructuredSelector} from \"reselect\";\nimport {selectCategoryError, selectCategoryLoading } from \"../../redux/category/category.selectors\"\nimport {Redirect} from \"react-router-dom\"\nimport PageNotFound from \"../page-not-found/page-not-found.component\"\nimport Loader from \"../../components/UI/loader/loader.component\"\nconst ShopGridPage = ({match, fetchCategory, location, error, loading}) => { \n  console.log(error);\n  useEffect(() => {\n      let page = 1 ; \n      if(location.search){\n        page = +location.search.split(\"=\")[1];\n      }          \n        fetchCategory(match.params.categoryUrl || \"\", page)                  \n  }, [fetchCategory]);\n  if(loading){\n    return <Loader/>\n  }\n  if(error && error.status == 404){\n    return <PageNotFound/>\n  }\n  return (\n    <ShopGridPageContainer>             \n      <MasterHeader/>\n      <Background label={match.params.categoryUrl}/>   \n      <ShopGridOverview/>\n    </ShopGridPageContainer>\n  )\n}\n\nconst mapStateToProps = createStructuredSelector({\n  error : selectCategoryError,\n  loading : selectCategoryLoading\n})\nconst mapDispatchToProps = dispatch => ({\n  fetchCategory : (path,page) => dispatch(fetchCategory(path,page))\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopGridPage)\n"]},"metadata":{},"sourceType":"module"}