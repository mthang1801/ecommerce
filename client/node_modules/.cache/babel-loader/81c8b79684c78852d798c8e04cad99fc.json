{"ast":null,"code":"import productReviewsActionTypes from \"./product-reviews.types\";\nimport urls from \"../../utils/urls\";\nimport axios from \"axios\";\n\nconst fetchProductReviewsStart = () => ({\n  type: productReviewsActionTypes.FETCH_PRODUCT_REVIEW_START\n});\n\nconst fetchProductReviewsSuccess = product => ({\n  type: productReviewsActionTypes.FETCH_PRODUCT_REVIEW_START,\n  payload: product\n});\n\nconst fetchProductReviewsFail = err => ({\n  type: productReviewsActionTypes.FETCH_PRODUCT_REVIEW_FAIL,\n  payload: {\n    msg: err.response.data.message,\n    status: err.response.status\n  }\n});\n\nexport const fetchProductReviews = productId => async dispatch => {\n  try {\n    dispatch(fetchProductReviewsStart());\n    const {\n      data\n    } = await axios.get(urls.GET_PRODUCT_REVIEWS(productId));\n    dispatch(fetchProductReviewsSuccess(data));\n  } catch (error) {\n    dispatch(fetchProductReviewsFail(error));\n  }\n};","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/redux/product-reviews/product-reviews.actions.js"],"names":["productReviewsActionTypes","urls","axios","fetchProductReviewsStart","type","FETCH_PRODUCT_REVIEW_START","fetchProductReviewsSuccess","product","payload","fetchProductReviewsFail","err","FETCH_PRODUCT_REVIEW_FAIL","msg","response","data","message","status","fetchProductReviews","productId","dispatch","get","GET_PRODUCT_REVIEWS","error"],"mappings":"AAAA,OAAOA,yBAAP,MAAsC,yBAAtC;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,MAAMC,wBAAwB,GAAG,OAAO;AACtCC,EAAAA,IAAI,EAAEJ,yBAAyB,CAACK;AADM,CAAP,CAAjC;;AAIA,MAAMC,0BAA0B,GAAIC,OAAD,KAAc;AAC/CH,EAAAA,IAAI,EAAEJ,yBAAyB,CAACK,0BADe;AAE/CG,EAAAA,OAAO,EAAED;AAFsC,CAAd,CAAnC;;AAKA,MAAME,uBAAuB,GAAIC,GAAD,KAAU;AACxCN,EAAAA,IAAI,EAAEJ,yBAAyB,CAACW,yBADQ;AAExCH,EAAAA,OAAO,EAAE;AAAEI,IAAAA,GAAG,EAAEF,GAAG,CAACG,QAAJ,CAAaC,IAAb,CAAkBC,OAAzB;AAAkCC,IAAAA,MAAM,EAAEN,GAAG,CAACG,QAAJ,CAAaG;AAAvD;AAF+B,CAAV,CAAhC;;AAKA,OAAO,MAAMC,mBAAmB,GAAIC,SAAD,IAAe,MAAOC,QAAP,IAAoB;AACpE,MAAI;AACFA,IAAAA,QAAQ,CAAChB,wBAAwB,EAAzB,CAAR;AACA,UAAM;AAAEW,MAAAA;AAAF,QAAW,MAAMZ,KAAK,CAACkB,GAAN,CAAUnB,IAAI,CAACoB,mBAAL,CAAyBH,SAAzB,CAAV,CAAvB;AACAC,IAAAA,QAAQ,CAACb,0BAA0B,CAACQ,IAAD,CAA3B,CAAR;AACD,GAJD,CAIE,OAAOQ,KAAP,EAAc;AACdH,IAAAA,QAAQ,CAACV,uBAAuB,CAACa,KAAD,CAAxB,CAAR;AACD;AACF,CARM","sourcesContent":["import productReviewsActionTypes from \"./product-reviews.types\";\nimport urls from \"../../utils/urls\";\nimport axios from \"axios\";\nconst fetchProductReviewsStart = () => ({\n  type: productReviewsActionTypes.FETCH_PRODUCT_REVIEW_START,\n});\n\nconst fetchProductReviewsSuccess = (product) => ({\n  type: productReviewsActionTypes.FETCH_PRODUCT_REVIEW_START,\n  payload: product,\n});\n\nconst fetchProductReviewsFail = (err) => ({\n  type: productReviewsActionTypes.FETCH_PRODUCT_REVIEW_FAIL,\n  payload: { msg: err.response.data.message, status: err.response.status },\n});\n\nexport const fetchProductReviews = (productId) => async (dispatch) => {\n  try {\n    dispatch(fetchProductReviewsStart());\n    const { data } = await axios.get(urls.GET_PRODUCT_REVIEWS(productId));\n    dispatch(fetchProductReviewsSuccess(data));\n  } catch (error) {\n    dispatch(fetchProductReviewsFail(error));\n  }\n};\n"]},"metadata":{},"sourceType":"module"}