{"ast":null,"code":"import { takeLatest, all, put, call } from \"redux-saga/effects\";\nimport * as productTypeActions from \"./product-type.actions\";\nimport axios from \"axios\";\nimport urls from \"../../utils/urls\";\n\nfunction* fetchProductType() {\n  try {\n    const {\n      data\n    } = yield axios.get(urls.GET_LIST_PRODUCT_TYPE_LIST);\n    yield put(productTypeActions.fetchCategorySuccess(data));\n  } catch (error) {\n    yield put(categoryActions.fetchCategoryFail(error.response.data.message));\n  }\n}\n\nfunction* onFetchProductType() {\n  yield takeLatest(productTypeActions.fetchProductTypeStart, fetchProductType);\n}\n\nexport default function* categorySaga() {\n  yield all([call(onFetchProductType)]);\n}","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/redux/product-type/product-type.saga.js"],"names":["takeLatest","all","put","call","productTypeActions","axios","urls","fetchProductType","data","get","GET_LIST_PRODUCT_TYPE_LIST","fetchCategorySuccess","error","categoryActions","fetchCategoryFail","response","message","onFetchProductType","fetchProductTypeStart","categorySaga"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,OAAO,KAAKC,kBAAZ,MAAoC,wBAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;;AAEA,UAAUC,gBAAV,GAA6B;AAC3B,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMH,KAAK,CAACI,GAAN,CAAUH,IAAI,CAACI,0BAAf,CAAvB;AACA,UAAMR,GAAG,CAACE,kBAAkB,CAACO,oBAAnB,CAAwCH,IAAxC,CAAD,CAAT;AACD,GAHD,CAGE,OAAOI,KAAP,EAAc;AACd,UAAMV,GAAG,CAACW,eAAe,CAACC,iBAAhB,CAAkCF,KAAK,CAACG,QAAN,CAAeP,IAAf,CAAoBQ,OAAtD,CAAD,CAAT;AACD;AACF;;AAED,UAAUC,kBAAV,GAA+B;AAC7B,QAAMjB,UAAU,CAACI,kBAAkB,CAACc,qBAApB,EAA2CX,gBAA3C,CAAhB;AACD;;AAED,eAAe,UAAUY,YAAV,GAAyB;AACtC,QAAMlB,GAAG,CAAC,CAACE,IAAI,CAACc,kBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, all, put, call } from \"redux-saga/effects\";\nimport * as productTypeActions from \"./product-type.actions\";\nimport axios from \"axios\";\nimport urls from \"../../utils/urls\";\n\nfunction* fetchProductType() {\n  try {\n    const { data } = yield axios.get(urls.GET_LIST_PRODUCT_TYPE_LIST);\n    yield put(productTypeActions.fetchCategorySuccess(data));\n  } catch (error) {\n    yield put(categoryActions.fetchCategoryFail(error.response.data.message));\n  }\n}\n\nfunction* onFetchProductType() {\n  yield takeLatest(productTypeActions.fetchProductTypeStart, fetchProductType);\n}\n\nexport default function* categorySaga() {\n  yield all([call(onFetchProductType)]);\n}\n"]},"metadata":{},"sourceType":"module"}