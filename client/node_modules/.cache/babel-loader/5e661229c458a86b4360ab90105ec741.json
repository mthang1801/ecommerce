{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/pages/product-group/product-group.component.jsx\";\nimport React, { useEffect } from \"react\";\nimport { ProductTypeWrapper } from \"./product-type.styles\";\nimport { default as ProductTypeOverview } from \"../../components/ProductType/product-type-overview/product-type-overview.container\";\nimport MasterHeader from \"../../components/Layout/master-header/master-header.component\";\nimport Background from \"../../components/Layout/background/background.component\";\nimport { fetchProductType, fetchProductList } from \"../../redux/product-type/product-type.actions\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectProductFetched, selec } from \"../../redux/product-group/product-group.selectors\";\nimport PageNotFound from \"../page-not-found/page-not-found.component\";\nimport Loader from \"../../components/UI/loader/loader.component\";\n\nconst ProductTypePage = ({\n  match,\n  location,\n  fetchProductType,\n  fetchProductList,\n  loading,\n  error,\n  fetched,\n  name\n}) => {\n  useEffect(() => {\n    let page = +location.search.split(\"=\")[1] || 1;\n    let {\n      categoryUrl,\n      productTypeUrl\n    } = match.params;\n\n    if (location.search && fetched) {\n      fetchProductList(categoryUrl, productTypeUrl, page);\n      return;\n    }\n\n    fetchProductType(categoryUrl, productTypeUrl, page);\n  }, [fetchProductType, fetchProductList, location.search, match.params.categoryUrl, match.params.productTypeUrl]);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (error && error.status == 404) {\n    return /*#__PURE__*/React.createElement(PageNotFound, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(ProductTypeWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  });\n};\n\nconst mapStateToProps = createStructuredSelector({\n  error: selectProductTypeError,\n  loading: selectProductTypeLoading,\n  productTypeList: selectProductTypeList,\n  fetched: selectProductFetched,\n  name: selectName\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchProductType: (categoryUrl, productTypeUrl, page) => dispatch(fetchProductType(categoryUrl, productTypeUrl, page)),\n  fetchProductList: (categoryUrl, productTypeUrl, page) => dispatch(fetchProductList(categoryUrl, productTypeUrl, page))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductTypePage);","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/pages/product-group/product-group.component.jsx"],"names":["React","useEffect","ProductTypeWrapper","default","ProductTypeOverview","MasterHeader","Background","fetchProductType","fetchProductList","connect","createStructuredSelector","selectProductFetched","selec","PageNotFound","Loader","ProductTypePage","match","location","loading","error","fetched","name","page","search","split","categoryUrl","productTypeUrl","params","status","mapStateToProps","selectProductTypeError","selectProductTypeLoading","productTypeList","selectProductTypeList","selectName","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,kBAAT,QAAmC,uBAAnC;AACA,SAASC,OAAO,IAAIC,mBAApB,QAA+C,oFAA/C;AACA,OAAOC,YAAP,MAAyB,+DAAzB;AACA,OAAOC,UAAP,MAAuB,yDAAvB;AACA,SACEC,gBADF,EAEEC,gBAFF,QAGO,+CAHP;AAIA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SACEC,oBADF,EAEEC,KAFF,QAGO,mDAHP;AAIA,OAAOC,YAAP,MAAyB,4CAAzB;AACA,OAAOC,MAAP,MAAmB,6CAAnB;;AACA,MAAMC,eAAe,GAAG,CAAC;AACvBC,EAAAA,KADuB;AAEvBC,EAAAA,QAFuB;AAGvBV,EAAAA,gBAHuB;AAIvBC,EAAAA,gBAJuB;AAKvBU,EAAAA,OALuB;AAMvBC,EAAAA,KANuB;AAOvBC,EAAAA,OAPuB;AAQvBC,EAAAA;AARuB,CAAD,KASlB;AACJpB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIqB,IAAI,GAAG,CAACL,QAAQ,CAACM,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAD,IAAkC,CAA7C;AACA,QAAI;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAkCV,KAAK,CAACW,MAA5C;;AACA,QAAIV,QAAQ,CAACM,MAAT,IAAmBH,OAAvB,EAAgC;AAC9BZ,MAAAA,gBAAgB,CAACiB,WAAD,EAAcC,cAAd,EAA8BJ,IAA9B,CAAhB;AACA;AACD;;AACDf,IAAAA,gBAAgB,CAACkB,WAAD,EAAcC,cAAd,EAA8BJ,IAA9B,CAAhB;AACD,GARQ,EAQN,CACDf,gBADC,EAEDC,gBAFC,EAGDS,QAAQ,CAACM,MAHR,EAIDP,KAAK,CAACW,MAAN,CAAaF,WAJZ,EAKDT,KAAK,CAACW,MAAN,CAAaD,cALZ,CARM,CAAT;;AAeA,MAAIR,OAAJ,EAAa;AACX,wBAAO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACD,MAAIC,KAAK,IAAIA,KAAK,CAACS,MAAN,IAAgB,GAA7B,EAAkC;AAChC,wBAAO,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACD,sBACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAOD,CAtCD;;AAwCA,MAAMC,eAAe,GAAGnB,wBAAwB,CAAC;AAC/CS,EAAAA,KAAK,EAAEW,sBADwC;AAE/CZ,EAAAA,OAAO,EAAEa,wBAFsC;AAG/CC,EAAAA,eAAe,EAAEC,qBAH8B;AAI/Cb,EAAAA,OAAO,EAAET,oBAJsC;AAK/CU,EAAAA,IAAI,EAAEa;AALyC,CAAD,CAAhD;;AAOA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxC7B,EAAAA,gBAAgB,EAAE,CAACkB,WAAD,EAAcC,cAAd,EAA8BJ,IAA9B,KAAuCc,QAAQ,CAAC7B,gBAAgB,CAACkB,WAAD,EAAcC,cAAd,EAA8BJ,IAA9B,CAAjB,CADzB;AAExCd,EAAAA,gBAAgB,EAAE,CAACiB,WAAD,EAAcC,cAAd,EAA8BJ,IAA9B,KAAuCc,QAAQ,CAAC5B,gBAAgB,CAACiB,WAAD,EAAcC,cAAd,EAA8BJ,IAA9B,CAAjB;AAFzB,CAAf,CAA3B;;AAIA,eAAeb,OAAO,CAACoB,eAAD,EAAkBM,kBAAlB,CAAP,CAA6CpB,eAA7C,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { ProductTypeWrapper } from \"./product-type.styles\";\nimport { default as ProductTypeOverview } from \"../../components/ProductType/product-type-overview/product-type-overview.container\";\nimport MasterHeader from \"../../components/Layout/master-header/master-header.component\";\nimport Background from \"../../components/Layout/background/background.component\";\nimport {\n  fetchProductType,\n  fetchProductList,\n} from \"../../redux/product-type/product-type.actions\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport {  \n  selectProductFetched,\n  selec,\n} from \"../../redux/product-group/product-group.selectors\";\nimport PageNotFound from \"../page-not-found/page-not-found.component\";\nimport Loader from \"../../components/UI/loader/loader.component\";\nconst ProductTypePage = ({\n  match,\n  location,\n  fetchProductType,\n  fetchProductList,\n  loading,\n  error,\n  fetched,\n  name,\n}) => {\n  useEffect(() => {\n    let page = +location.search.split(\"=\")[1] || 1;    \n    let { categoryUrl, productTypeUrl } = match.params;\n    if (location.search && fetched) {\n      fetchProductList(categoryUrl, productTypeUrl, page);\n      return;\n    }\n    fetchProductType(categoryUrl, productTypeUrl, page);\n  }, [\n    fetchProductType,\n    fetchProductList,\n    location.search,\n    match.params.categoryUrl,\n    match.params.productTypeUrl,\n  ]);\n  if (loading) {\n    return <Loader />;\n  }\n  if (error && error.status == 404) {\n    return <PageNotFound />;\n  }\n  return (\n    <ProductTypeWrapper>\n      {/* <MasterHeader />\n      <Background label={name} />\n      <ProductTypeOverview /> */}\n    </ProductTypeWrapper>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  error: selectProductTypeError,\n  loading: selectProductTypeLoading,\n  productTypeList: selectProductTypeList,\n  fetched: selectProductFetched,\n  name: selectName,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  fetchProductType: (categoryUrl, productTypeUrl, page) => dispatch(fetchProductType(categoryUrl, productTypeUrl, page)),\n  fetchProductList: (categoryUrl, productTypeUrl, page) => dispatch(fetchProductList(categoryUrl, productTypeUrl, page)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductTypePage);\n"]},"metadata":{},"sourceType":"module"}