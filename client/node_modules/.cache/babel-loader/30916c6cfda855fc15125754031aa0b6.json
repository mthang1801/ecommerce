{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/UI/custom-input/custom-input.component.js\";\nimport React, { useRef } from \"react\";\nimport { InputGroup, Input, Label, TextError, TextSuccess } from \"./custom-input.style\";\n\nconst CustomInput = ({\n  onChange,\n  label,\n  value,\n  touched,\n  valid,\n  validationErrors,\n  ...otherProps\n}) => {\n  const transformedErrors = validationErrors && validationErrors.length ? validationErrors.map((error, idx) => {\n    return idx === validationErrors.length - 1 ? error : error + \", \";\n  }) : \"\";\n  const border = touched ? transformedErrors ? \"error\" : \"success\" : null;\n  const inputRef = useRef(null);\n\n  const handleClick = e => {\n    inputRef.current.focus();\n  };\n\n  return /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, Object.assign({\n    onChange: onChange,\n    value: value\n  }, otherProps, {\n    border: border,\n    ref: inputRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Label, {\n    shrinkLabel: !!value,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, label), touched ? transformedErrors ? /*#__PURE__*/React.createElement(TextError, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, transformedErrors) : /*#__PURE__*/React.createElement(TextSuccess, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, \"Valid Field\") : null);\n};\n\nexport default CustomInput;","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/UI/custom-input/custom-input.component.js"],"names":["React","useRef","InputGroup","Input","Label","TextError","TextSuccess","CustomInput","onChange","label","value","touched","valid","validationErrors","otherProps","transformedErrors","length","map","error","idx","border","inputRef","handleClick","e","current","focus"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SACEC,UADF,EAEEC,KAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,WALF,QAMO,sBANP;;AAOA,MAAMC,WAAW,GAAG,CAAC;AACnBC,EAAAA,QADmB;AAEnBC,EAAAA,KAFmB;AAGnBC,EAAAA,KAHmB;AAInBC,EAAAA,OAJmB;AAKnBC,EAAAA,KALmB;AAMnBC,EAAAA,gBANmB;AAOnB,KAAGC;AAPgB,CAAD,KAQd;AACJ,QAAMC,iBAAiB,GACrBF,gBAAgB,IAAIA,gBAAgB,CAACG,MAArC,GACIH,gBAAgB,CAACI,GAAjB,CAAqB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACnC,WAAOA,GAAG,KAAKN,gBAAgB,CAACG,MAAjB,GAA0B,CAAlC,GAAsCE,KAAtC,GAA8CA,KAAK,GAAG,IAA7D;AACD,GAFD,CADJ,GAII,EALN;AAMA,QAAME,MAAM,GAAGT,OAAO,GAAII,iBAAiB,GAAG,OAAH,GAAa,SAAlC,GAA+C,IAArE;AACA,QAAMM,QAAQ,GAAGpB,MAAM,CAAC,IAAD,CAAvB;;AACA,QAAMqB,WAAW,GAAIC,CAAD,IAAO;AACzBF,IAAAA,QAAQ,CAACG,OAAT,CAAiBC,KAAjB;AACD,GAFD;;AAGA,sBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,QAAQ,EAAEjB,QADZ;AAEE,IAAA,KAAK,EAAEE;AAFT,KAGMI,UAHN;AAIE,IAAA,MAAM,EAAEM,MAJV;AAKE,IAAA,GAAG,EAAEC,QALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,eAQE,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAE,CAAC,CAACX,KAAtB;AAA6B,IAAA,OAAO,EAAEY,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,KADH,CARF,EAWGE,OAAO,GACNI,iBAAiB,gBACf,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYA,iBAAZ,CADe,gBAGf,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJI,GAMJ,IAjBN,CADF;AAqBD,CAzCD;;AA2CA,eAAeR,WAAf","sourcesContent":["import React, { useRef } from \"react\";\nimport {\n  InputGroup,\n  Input,\n  Label,\n  TextError,\n  TextSuccess,\n} from \"./custom-input.style\";\nconst CustomInput = ({\n  onChange,\n  label,\n  value,\n  touched,\n  valid,\n  validationErrors,\n  ...otherProps\n}) => {\n  const transformedErrors =\n    validationErrors && validationErrors.length\n      ? validationErrors.map((error, idx) => {\n          return idx === validationErrors.length - 1 ? error : error + \", \";\n        })\n      : \"\";\n  const border = touched ? (transformedErrors ? \"error\" : \"success\") : null;\n  const inputRef = useRef(null);\n  const handleClick = (e) => {\n    inputRef.current.focus();\n  };\n  return (\n    <InputGroup>\n      <Input\n        onChange={onChange}\n        value={value}\n        {...otherProps}\n        border={border}\n        ref={inputRef}\n      />\n      <Label shrinkLabel={!!value} onClick={handleClick}>\n        {label}\n      </Label>\n      {touched ? (\n        transformedErrors ? (\n          <TextError>{transformedErrors}</TextError>\n        ) : (\n          <TextSuccess>Valid Field</TextSuccess>\n        )\n      ) : null}\n    </InputGroup>\n  );\n};\n\nexport default CustomInput;\n"]},"metadata":{},"sourceType":"module"}