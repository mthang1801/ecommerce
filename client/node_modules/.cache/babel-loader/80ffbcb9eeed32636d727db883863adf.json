{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Seller/form-create-product/form-create-product.component.jsx\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Form, FormInline, FormGroup, Label, Input, Required, Select, Option, Editable, CustomFormContainer } from \"../../UI/custom-form/custom-form.styles\";\nimport AppContext from \"../../../context/app-viewport.context\";\nimport { getCategoryList } from \"../../../utils/algorithms\";\n\nconst FormCreateProduct = () => {\n  const [category, setCategory] = useState({\n    _id: \"\",\n    name: \"\",\n    linkUrl: \"\"\n  });\n  const [productTypeUrl, setProductTypeUrl] = useState(null);\n  const [listProducts, setListProducts] = useState([]);\n  const [mobileView, setMobileView] = useState(window.innerWidth < 600);\n  const [tabletView, setTabletView] = useState(window.innerWidth < 992 && window.innerWidth >= 660);\n  const width = useContext(AppContext);\n  useEffect(() => {\n    if (width < 660) {\n      setMobileView(true);\n    } else {\n      setMobileView(false);\n    }\n\n    if (width < 992 && width >= 660) {\n      setTabletView(true);\n    } else {\n      setTabletView(false);\n    }\n  }, [width]);\n  useEffect(() => {\n    if (productTypeUrl) {\n      setListProducts(getProductsByProductType(productTypeUrl));\n    }\n  }, [productTypeUrl]);\n\n  const handleCategoryChange = e => {\n    const category = categoryList.find(item => item._id === e.target.value);\n    setCategory(category);\n  };\n\n  const handleChangeProductTypes = e => {\n    setProductTypeUrl(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(CustomFormContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default FormCreateProduct;","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Seller/form-create-product/form-create-product.component.jsx"],"names":["React","useState","useEffect","useContext","Form","FormInline","FormGroup","Label","Input","Required","Select","Option","Editable","CustomFormContainer","AppContext","getCategoryList","FormCreateProduct","category","setCategory","_id","name","linkUrl","productTypeUrl","setProductTypeUrl","listProducts","setListProducts","mobileView","setMobileView","window","innerWidth","tabletView","setTabletView","width","getProductsByProductType","handleCategoryChange","e","categoryList","find","item","target","value","handleChangeProductTypes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SACEC,IADF,EAEEC,UAFF,EAGEC,SAHF,EAIEC,KAJF,EAKEC,KALF,EAMEC,QANF,EAOEC,MAPF,EAQEC,MARF,EASEC,QATF,EAUEC,mBAVF,QAWO,yCAXP;AAYA,OAAOC,UAAP,MAAuB,uCAAvB;AACA,SACEC,eADF,QAEO,2BAFP;;AAIA,MAAMC,iBAAiB,GAAG,MAAM;AAC9B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC;AACvCkB,IAAAA,GAAG,EAAE,EADkC;AAEvCC,IAAAA,IAAI,EAAE,EAFiC;AAGvCC,IAAAA,OAAO,EAAE;AAH8B,GAAD,CAAxC;AAKA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCtB,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAACuB,YAAD,EAAeC,eAAf,IAAkCxB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACyB,UAAD,EAAaC,aAAb,IAA8B1B,QAAQ,CAAC2B,MAAM,CAACC,UAAP,GAAoB,GAArB,CAA5C;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8B9B,QAAQ,CAC1C2B,MAAM,CAACC,UAAP,GAAoB,GAApB,IAA2BD,MAAM,CAACC,UAAP,IAAqB,GADN,CAA5C;AAGA,QAAMG,KAAK,GAAG7B,UAAU,CAACW,UAAD,CAAxB;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI8B,KAAK,GAAG,GAAZ,EAAiB;AACfL,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD,KAFD,MAEO;AACLA,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD;;AACD,QAAIK,KAAK,GAAG,GAAR,IAAeA,KAAK,IAAI,GAA5B,EAAiC;AAC/BD,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD,KAFD,MAEO;AACLA,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD;AACF,GAXQ,EAWN,CAACC,KAAD,CAXM,CAAT;AAaA9B,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAGoB,cAAH,EAAkB;AAChBG,MAAAA,eAAe,CAACQ,wBAAwB,CAACX,cAAD,CAAzB,CAAf;AACD;AACF,GAJQ,EAIP,CAACA,cAAD,CAJO,CAAT;;AAKA,QAAMY,oBAAoB,GAAIC,CAAD,IAAO;AAClC,UAAMlB,QAAQ,GAAGmB,YAAY,CAACC,IAAb,CAAmBC,IAAD,IAAUA,IAAI,CAACnB,GAAL,KAAagB,CAAC,CAACI,MAAF,CAASC,KAAlD,CAAjB;AACAtB,IAAAA,WAAW,CAACD,QAAD,CAAX;AACD,GAHD;;AAKA,QAAMwB,wBAAwB,GAAIN,CAAD,IAAO;AACtCZ,IAAAA,iBAAiB,CAACY,CAAC,CAACI,MAAF,CAASC,KAAV,CAAjB;AACD,GAFD;;AAIA,sBACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAOD,CA/CD;;AAiDA,eAAexB,iBAAf","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport {\n  Form,\n  FormInline,\n  FormGroup,\n  Label,\n  Input,\n  Required,\n  Select,\n  Option,\n  Editable,\n  CustomFormContainer\n} from \"../../UI/custom-form/custom-form.styles\";\nimport AppContext from \"../../../context/app-viewport.context\";\nimport {\n  getCategoryList\n} from \"../../../utils/algorithms\";\n\nconst FormCreateProduct = () => {\n  const [category, setCategory] = useState({\n    _id: \"\",\n    name: \"\",\n    linkUrl: \"\",    \n  });\n  const [productTypeUrl, setProductTypeUrl] = useState(null);\n  const [listProducts, setListProducts] = useState([]);\n  const [mobileView, setMobileView] = useState(window.innerWidth < 600);\n  const [tabletView, setTabletView] = useState(\n    window.innerWidth < 992 && window.innerWidth >= 660\n  );\n  const width = useContext(AppContext);\n  useEffect(() => {\n    if (width < 660) {\n      setMobileView(true);\n    } else {\n      setMobileView(false);\n    }\n    if (width < 992 && width >= 660) {\n      setTabletView(true);\n    } else {\n      setTabletView(false);\n    }\n  }, [width]);\n\n  useEffect(()=>{\n    if(productTypeUrl){\n      setListProducts(getProductsByProductType(productTypeUrl))\n    }\n  },[productTypeUrl])  \n  const handleCategoryChange = (e) => {\n    const category = categoryList.find((item) => item._id === e.target.value);\n    setCategory(category);\n  };\n\n  const handleChangeProductTypes = (e) => {\n    setProductTypeUrl(e.target.value);\n  };\n\n  return (\n    <CustomFormContainer>\n     \n    \n    </CustomFormContainer>\n    \n  );\n};\n\nexport default FormCreateProduct;\n"]},"metadata":{},"sourceType":"module"}