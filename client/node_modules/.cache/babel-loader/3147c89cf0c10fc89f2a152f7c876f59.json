{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/pages/product-reviews/product-reviews.component.jsx\";\nimport React, { useEffect } from 'react';\nimport { ProductReviewsWrapper } from \"./product-reviews.styles\";\nimport { fetchProductReviews } from \"../../redux/product-reviews/product-reviews.actions\";\nimport { selectCurrentUser, selectUserLoading, selectUserFetched } from \"../../redux/user/user.selectors\";\nimport { createStructuredSelector } from \"reselect\";\nimport { connect } from \"react-redux\";\nimport MasterHeader from \"../../components/Layout/master-header/master-header.component\";\nimport PageNotFound from \"../page-not-found/page-not-found.component\";\nimport Background from \"../../components/Layout/background/background.component\";\n\nconst ProductReviews = ({\n  fetchProductReviews,\n  match,\n  currentUser,\n  userLoading,\n  userFetched\n}) => {\n  useEffect(() => {\n    if (match.params.productId && userFetched) {\n      fetchProductReviews(match.params.productId);\n    }\n  }, [fetchProductReviews, match.params, userFetched]);\n  return /*#__PURE__*/React.createElement(ProductReviewsWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  });\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  userLoading: selectUserLoading,\n  userFetched: selectUserFetched\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchProductReviews: productId => dispatch(fetchProductReviews(productId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductReviews);","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/pages/product-reviews/product-reviews.component.jsx"],"names":["React","useEffect","ProductReviewsWrapper","fetchProductReviews","selectCurrentUser","selectUserLoading","selectUserFetched","createStructuredSelector","connect","MasterHeader","PageNotFound","Background","ProductReviews","match","currentUser","userLoading","userFetched","params","productId","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,qBAAR,QAAoC,0BAApC;AACA,SAAQC,mBAAR,QAAkC,qDAAlC;AACA,SAAQC,iBAAR,EAA2BC,iBAA3B,EAA8CC,iBAA9C,QAAsE,iCAAtE;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,+DAAzB;AACA,OAAOC,YAAP,MAAyB,4CAAzB;AACA,OAAOC,UAAP,MAAuB,yDAAvB;;AACA,MAAMC,cAAc,GAAG,CAAC;AAACT,EAAAA,mBAAD;AAAsBU,EAAAA,KAAtB;AAA6BC,EAAAA,WAA7B;AAA0CC,EAAAA,WAA1C;AAAuDC,EAAAA;AAAvD,CAAD,KAAyE;AAC9Ff,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGY,KAAK,CAACI,MAAN,CAAaC,SAAb,IAA0BF,WAA7B,EAAyC;AACvCb,MAAAA,mBAAmB,CAACU,KAAK,CAACI,MAAN,CAAaC,SAAd,CAAnB;AACD;AAEF,GALQ,EAKN,CAACf,mBAAD,EAAsBU,KAAK,CAACI,MAA5B,EAAoCD,WAApC,CALM,CAAT;AAMA,sBACE,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAKD,CAZD;;AAcA,MAAMG,eAAe,GAAGZ,wBAAwB,CAAC;AAC/CO,EAAAA,WAAW,EAAGV,iBADiC;AAE/CW,EAAAA,WAAW,EAAGV,iBAFiC;AAG/CW,EAAAA,WAAW,EAAGV;AAHiC,CAAD,CAAhD;;AAMA,MAAMc,kBAAkB,GAAGC,QAAQ,KAAK;AACtClB,EAAAA,mBAAmB,EAAIe,SAAD,IAAeG,QAAQ,CAAClB,mBAAmB,CAACe,SAAD,CAApB;AADP,CAAL,CAAnC;;AAIA,eAAeV,OAAO,CAACW,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CR,cAA7C,CAAf","sourcesContent":["import React, {useEffect} from 'react'\nimport {ProductReviewsWrapper} from \"./product-reviews.styles\";\nimport {fetchProductReviews} from \"../../redux/product-reviews/product-reviews.actions\";\nimport {selectCurrentUser, selectUserLoading, selectUserFetched} from \"../../redux/user/user.selectors\"\nimport {createStructuredSelector} from \"reselect\";\nimport {connect} from \"react-redux\";\nimport MasterHeader from \"../../components/Layout/master-header/master-header.component\"\nimport PageNotFound from \"../page-not-found/page-not-found.component\"\nimport Background from \"../../components/Layout/background/background.component\"\nconst ProductReviews = ({fetchProductReviews, match, currentUser, userLoading, userFetched}) => {\n  useEffect(() => {       \n    if(match.params.productId && userFetched){\n      fetchProductReviews(match.params.productId);   \n    }\n    \n  } ,[fetchProductReviews, match.params, userFetched])\n  return (\n    <ProductReviewsWrapper>\n      \n    </ProductReviewsWrapper>\n  )\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser : selectCurrentUser , \n  userLoading : selectUserLoading,\n  userFetched : selectUserFetched\n})\n\nconst mapDispatchToProps = dispatch => ({\n  fetchProductReviews : (productId) => dispatch(fetchProductReviews(productId))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductReviews)\n"]},"metadata":{},"sourceType":"module"}