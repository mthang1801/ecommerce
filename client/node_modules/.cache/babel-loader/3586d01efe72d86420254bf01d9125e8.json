{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Layout/products-popup/products-popup.component.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { ProductsPopupContainer } from \"./products-popup.styles\";\nimport { selectMenuList } from \"../../../redux/menu/menu.selectors\";\nimport ProductsPopupItem from \"../products-popup-item/products-popup-item.component\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\n\nconst ProductsPopup = ({\n  offsetWidth,\n  categoryId,\n  menuList\n}) => {\n  const [productTypesByCategoryId, setProductTypesByCategoryId] = useState(null);\n  useEffect(() => {\n    setProductTypesByCategoryId(productTypeList.filter(productType => productType.category.toString() === categoryId.toString()));\n  }, [categoryId]);\n  console.log(productTypesByCategoryId);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, categoryId && productTypesByCategoryId ? /*#__PURE__*/React.createElement(ProductsPopupContainer, {\n    offsetWidth: offsetWidth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 49\n    }\n  }, productTypesByCategoryId && productTypesByCategoryId.map(productType => /*#__PURE__*/React.createElement(ProductsPopupItem, {\n    key: productType._id,\n    productLabel: productType.name,\n    productTypeId: productType._id,\n    productList: productList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }))) : null);\n};\n\nconst mapStateToProps = createStructuredSelector({\n  menuList: selectMenuList\n});\nexport default connect(mapStateToProps)(ProductsPopup);","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Layout/products-popup/products-popup.component.jsx"],"names":["React","useEffect","useState","ProductsPopupContainer","selectMenuList","ProductsPopupItem","connect","createStructuredSelector","ProductsPopup","offsetWidth","categoryId","menuList","productTypesByCategoryId","setProductTypesByCategoryId","productTypeList","filter","productType","category","toString","console","log","map","_id","name","productList","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,sBAAT,QAAuC,yBAAvC;AACA,SAASC,cAAT,QAA+B,oCAA/B;AACA,OAAOC,iBAAP,MAA8B,sDAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;;AACA,MAAMC,aAAa,GAAG,CAAC;AACrBC,EAAAA,WADqB;AAErBC,EAAAA,UAFqB;AAGtBC,EAAAA;AAHsB,CAAD,KAIhB;AACJ,QAAM,CAACC,wBAAD,EAA2BC,2BAA3B,IAA0DX,QAAQ,CACtE,IADsE,CAAxE;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,2BAA2B,CACzBC,eAAe,CAACC,MAAhB,CACGC,WAAD,IACEA,WAAW,CAACC,QAAZ,CAAqBC,QAArB,OAAoCR,UAAU,CAACQ,QAAX,EAFxC,CADyB,CAA3B;AAMD,GAPQ,EAON,CAACR,UAAD,CAPM,CAAT;AAQAS,EAAAA,OAAO,CAACC,GAAR,CAAYR,wBAAZ;AACA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,UAAU,IAAIE,wBAAd,gBAAyC,oBAAC,sBAAD;AAAwB,IAAA,WAAW,EAAEH,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACxCG,wBAAwB,IAAIA,wBAAwB,CAACS,GAAzB,CAA8BL,WAAD,iBACvD,oBAAC,iBAAD;AACE,IAAA,GAAG,EAAEA,WAAW,CAACM,GADnB;AAEE,IAAA,YAAY,EAAEN,WAAW,CAACO,IAF5B;AAGE,IAAA,aAAa,EAAEP,WAAW,CAACM,GAH7B;AAIE,IAAA,WAAW,EAAEE,WAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD0B,CADY,CAAzC,GASyB,IAV5B,CADF;AAeD,CAhCD;;AAiCA,MAAMC,eAAe,GAAGlB,wBAAwB,CAAC;AAChDI,EAAAA,QAAQ,EAAGP;AADqC,CAAD,CAAhD;AAGA,eAAeE,OAAO,CAACmB,eAAD,CAAP,CAAyBjB,aAAzB,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { ProductsPopupContainer } from \"./products-popup.styles\";\nimport { selectMenuList } from \"../../../redux/menu/menu.selectors\"\nimport ProductsPopupItem from \"../products-popup-item/products-popup-item.component\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nconst ProductsPopup = ({\n  offsetWidth,\n  categoryId,\n menuList\n}) => {\n  const [productTypesByCategoryId, setProductTypesByCategoryId] = useState(\n    null\n  );\n  useEffect(() => {\n    setProductTypesByCategoryId(\n      productTypeList.filter(\n        (productType) =>\n          productType.category.toString() === categoryId.toString()\n      )\n    );\n  }, [categoryId]);\n  console.log(productTypesByCategoryId);\n  return (\n    <React.Fragment>\n      {categoryId && productTypesByCategoryId ? <ProductsPopupContainer offsetWidth={offsetWidth}>\n       {productTypesByCategoryId && productTypesByCategoryId.map((productType) => (\n          <ProductsPopupItem\n            key={productType._id}\n            productLabel={productType.name}\n            productTypeId={productType._id}\n            productList={productList}\n          />\n        ))} \n    </ProductsPopupContainer> : null}\n    </React.Fragment>\n    \n  );\n};\nconst mapStateToProps = createStructuredSelector({\n menuList : selectMenuList\n});\nexport default connect(mapStateToProps)(ProductsPopup);\n"]},"metadata":{},"sourceType":"module"}