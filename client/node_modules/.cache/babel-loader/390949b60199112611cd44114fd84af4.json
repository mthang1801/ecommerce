{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/pages/ordered/ordered.component.jsx\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchOrderedList } from \"../../redux/ordered/ordered.actions\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectCurrentUser, selectUserLoading } from \"../../redux/user/user.selectors\";\nimport { OrderedListContainer } from \"./ordered.styles\";\nimport { default as OrderedListOverview } from \"../../components/Ordered/ordered-list-overview/ordered-list-overview.container\";\nimport { Redirect } from \"react-router-dom\";\n\nconst Ordered = ({\n  fetchOrderedList,\n  currentUser,\n  match,\n  userLoading\n}) => {\n  useEffect(() => {\n    if (!userLoading) {\n      fetchOrderedList();\n    }\n  }, [fetchOrderedList, userLoading, currentUser]);\n  if (!currentUser) return /*#__PURE__*/React.createElement(Redirect, {\n    to: {\n      pathname: \"/auth\",\n      state: {\n        from: match.path\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  });\n  return /*#__PURE__*/React.createElement(OrderedListContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(OrderedListOverview, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  userLoading: selectUserLoading\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchOrderedList: () => dispatch(fetchOrderedList())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Ordered);","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/pages/ordered/ordered.component.jsx"],"names":["React","useEffect","connect","fetchOrderedList","createStructuredSelector","selectCurrentUser","selectUserLoading","OrderedListContainer","default","OrderedListOverview","Redirect","Ordered","currentUser","match","userLoading","pathname","state","from","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,qCAAjC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,QAAqD,iCAArD;AACA,SAASC,oBAAT,QAAqC,kBAArC;AACA,SAASC,OAAO,IAAIC,mBAApB,QAA+C,gFAA/C;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AACA,MAAMC,OAAO,GAAG,CAAC;AAAER,EAAAA,gBAAF;AAAoBS,EAAAA,WAApB;AAAiCC,EAAAA,KAAjC;AAAuCC,EAAAA;AAAvC,CAAD,KAA0D;AACxEb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAG,CAACa,WAAJ,EAAgB;AACdX,MAAAA,gBAAgB;AACjB;AACF,GAJQ,EAIN,CAACA,gBAAD,EAAkBW,WAAlB,EAA+BF,WAA/B,CAJM,CAAT;AAKA,MAAI,CAACA,WAAL,EACE,oBACE,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE;AAAEG,MAAAA,QAAQ,EAAE,OAAZ;AAAqBC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAEJ,KAAK,CAACK;AAAd;AAA5B,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAGF,sBACE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAfD;;AAiBA,MAAMC,eAAe,GAAGf,wBAAwB,CAAC;AAC/CQ,EAAAA,WAAW,EAAEP,iBADkC;AAE/CS,EAAAA,WAAW,EAAGR;AAFiC,CAAD,CAAhD;;AAIA,MAAMc,kBAAkB,GAAIC,QAAD,KAAe;AACxClB,EAAAA,gBAAgB,EAAE,MAAMkB,QAAQ,CAAClB,gBAAgB,EAAjB;AADQ,CAAf,CAA3B;;AAGA,eAAeD,OAAO,CAACiB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CT,OAA7C,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchOrderedList } from \"../../redux/ordered/ordered.actions\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectCurrentUser, selectUserLoading } from \"../../redux/user/user.selectors\";\nimport { OrderedListContainer } from \"./ordered.styles\";\nimport { default as OrderedListOverview } from \"../../components/Ordered/ordered-list-overview/ordered-list-overview.container\";\nimport { Redirect } from \"react-router-dom\";\nconst Ordered = ({ fetchOrderedList, currentUser, match,userLoading }) => {\n  useEffect(() => {\n    if(!userLoading){\n      fetchOrderedList();\n    }    \n  }, [fetchOrderedList,userLoading, currentUser]);\n  if (!currentUser)\n    return (\n      <Redirect to={{ pathname: \"/auth\", state: { from: match.path } }} />\n    );\n  return (\n    <OrderedListContainer>\n      <OrderedListOverview />\n    </OrderedListContainer>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  userLoading : selectUserLoading\n});\nconst mapDispatchToProps = (dispatch) => ({\n  fetchOrderedList: () => dispatch(fetchOrderedList()),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Ordered);\n"]},"metadata":{},"sourceType":"module"}