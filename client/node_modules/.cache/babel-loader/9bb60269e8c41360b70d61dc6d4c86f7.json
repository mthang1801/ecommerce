{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Layout/category-menu/category-menu.component.jsx\";\nimport React, { useState, useEffect, useRef, useContext } from \"react\";\nimport { CategoryMenuContainer, DropdownContent, CategoryList, CustomLink } from \"./category-menu.styles\";\nimport CATEGORY_DATA from \"../../../data/category\";\nimport ProductsPopup from \"../products-popup/products-popup.component\";\nimport AppContext from \"../../../context/app-viewport.context\";\nimport { selectCategoryList } from \"../../../redux/category/category.selectors\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\n\nconst CategoryMenu = ({\n  setShowBackdrop\n}) => {\n  const [ctgId, setCtfId] = useState(null);\n  const [offsetWidth, setOffsetWidth] = useState(0);\n  const [touched, setIsTouched] = useState(false);\n  const [activeLink, setActiveLink] = useState(null);\n  const categoryRef = useRef(null);\n  const popUpRef = React.createRef(null);\n  const listRef = useRef(null);\n  const categoriesList = Object.keys(CATEGORY_DATA).map(key => CATEGORY_DATA[key]);\n  const [smallView, setSmallView] = useState(window.innerWidth < 992);\n  const width = useContext(AppContext);\n  useEffect(() => {\n    if (width < 992) {\n      setSmallView(true);\n    } else {\n      setSmallView(false);\n    }\n  }, [width]);\n  useEffect(() => {\n    setOffsetWidth(categoryRef.current.offsetWidth);\n  }, [setOffsetWidth]);\n  useEffect(() => {\n    function removePopupWhenMouseOutListCategory(e) {\n      if (listRef && !listRef.current.contains(e.target)) {\n        setCtfId(null);\n        setIsTouched(false);\n        setActiveLink(null);\n      }\n    }\n\n    document.addEventListener(\"mouseover\", removePopupWhenMouseOutListCategory);\n    return () => document.removeEventListener(\"mouseover\", removePopupWhenMouseOutListCategory);\n  });\n\n  const handleMouseEnter = (e, categoryId) => {\n    setCtfId(categoryId);\n    setIsTouched(true);\n    setActiveLink(categoryId);\n  };\n\n  const handleMouseLeave = e => {};\n\n  return /*#__PURE__*/React.createElement(CategoryMenuContainer, {\n    ref: categoryRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CategoryList, {\n    ref: listRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, categoriesList.map(item => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: item._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CustomLink, {\n    onMouseEnter: e => handleMouseEnter(e, item._id),\n    onMouseLeave: e => handleMouseLeave(e),\n    to: item.linkUrl,\n    style: {\n      fontWeight: \"400\",\n      textTransform: \"capitalize\"\n    },\n    active: item._id === activeLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, item.name), /*#__PURE__*/React.createElement(DropdownContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, ctgId && !smallView && /*#__PURE__*/React.createElement(ProductsPopup, {\n    ref: popUpRef,\n    offsetWidth: offsetWidth,\n    categoryId: ctgId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }))))));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  categoryList: selectCategoryList\n});\nexport default connect(mapStateToProps)(CategoryMenu);","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Layout/category-menu/category-menu.component.jsx"],"names":["React","useState","useEffect","useRef","useContext","CategoryMenuContainer","DropdownContent","CategoryList","CustomLink","CATEGORY_DATA","ProductsPopup","AppContext","selectCategoryList","connect","createStructuredSelector","CategoryMenu","setShowBackdrop","ctgId","setCtfId","offsetWidth","setOffsetWidth","touched","setIsTouched","activeLink","setActiveLink","categoryRef","popUpRef","createRef","listRef","categoriesList","Object","keys","map","key","smallView","setSmallView","window","innerWidth","width","current","removePopupWhenMouseOutListCategory","e","contains","target","document","addEventListener","removeEventListener","handleMouseEnter","categoryId","handleMouseLeave","item","_id","linkUrl","fontWeight","textTransform","name","mapStateToProps","categoryList"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,EAA6CC,UAA7C,QAA+D,OAA/D;AACA,SACEC,qBADF,EAEEC,eAFF,EAGEC,YAHF,EAIEC,UAJF,QAKO,wBALP;AAMA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,aAAP,MAA0B,4CAA1B;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AACA,SAAQC,kBAAR,QAAiC,4CAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;;AACA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAyB;AAC5C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACkB,WAAD,EAAcC,cAAd,IAAgCnB,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACoB,OAAD,EAAUC,YAAV,IAA0BrB,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACsB,UAAD,EAAaC,aAAb,IAA8BvB,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAMwB,WAAW,GAAGtB,MAAM,CAAC,IAAD,CAA1B;AACA,QAAMuB,QAAQ,GAAG1B,KAAK,CAAC2B,SAAN,CAAgB,IAAhB,CAAjB;AACA,QAAMC,OAAO,GAAGzB,MAAM,CAAC,IAAD,CAAtB;AACA,QAAM0B,cAAc,GAAGC,MAAM,CAACC,IAAP,CAAYtB,aAAZ,EAA2BuB,GAA3B,CACpBC,GAAD,IAASxB,aAAa,CAACwB,GAAD,CADD,CAAvB;AAGA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BlC,QAAQ,CAACmC,MAAM,CAACC,UAAP,GAAoB,GAArB,CAA1C;AACA,QAAMC,KAAK,GAAGlC,UAAU,CAACO,UAAD,CAAxB;AACAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIoC,KAAK,GAAG,GAAZ,EAAiB;AACfH,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,KAFD,MAEO;AACLA,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,GANQ,EAMN,CAACG,KAAD,CANM,CAAT;AAOApC,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,cAAc,CAACK,WAAW,CAACc,OAAZ,CAAoBpB,WAArB,CAAd;AACD,GAFQ,EAEN,CAACC,cAAD,CAFM,CAAT;AAIAlB,EAAAA,SAAS,CAAC,MAAM;AACd,aAASsC,mCAAT,CAA6CC,CAA7C,EAAgD;AAC9C,UAAIb,OAAO,IAAI,CAACA,OAAO,CAACW,OAAR,CAAgBG,QAAhB,CAAyBD,CAAC,CAACE,MAA3B,CAAhB,EAAoD;AAClDzB,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACAI,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,aAAa,CAAC,IAAD,CAAb;AACD;AACF;;AACDoB,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCL,mCAAvC;AACA,WAAO,MACLI,QAAQ,CAACE,mBAAT,CACE,WADF,EAEEN,mCAFF,CADF;AAKD,GAdQ,CAAT;;AAgBA,QAAMO,gBAAgB,GAAG,CAACN,CAAD,EAAIO,UAAJ,KAAmB;AAC1C9B,IAAAA,QAAQ,CAAC8B,UAAD,CAAR;AACA1B,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,aAAa,CAACwB,UAAD,CAAb;AACD,GAJD;;AAKA,QAAMC,gBAAgB,GAAIR,CAAD,IAAO,CAC/B,CADD;;AAEA,sBACE,oBAAC,qBAAD;AAAuB,IAAA,GAAG,EAAEhB,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,GAAG,EAAEG,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,cAAc,CAACG,GAAf,CAAoBkB,IAAD,iBAClB,oBAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,GAAG,EAAEA,IAAI,CAACC,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,YAAY,EAAGV,CAAD,IAAOM,gBAAgB,CAACN,CAAD,EAAIS,IAAI,CAACC,GAAT,CADvC;AAEE,IAAA,YAAY,EAAGV,CAAD,IAAOQ,gBAAgB,CAACR,CAAD,CAFvC;AAGE,IAAA,EAAE,EAAES,IAAI,CAACE,OAHX;AAIE,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE,KAAd;AAAqBC,MAAAA,aAAa,EAAE;AAApC,KAJT;AAKE,IAAA,MAAM,EAAEJ,IAAI,CAACC,GAAL,KAAa5B,UALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOG2B,IAAI,CAACK,IAPR,CADF,eAUE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGtC,KAAK,IAAI,CAACiB,SAAV,iBACC,oBAAC,aAAD;AACE,IAAA,GAAG,EAAER,QADP;AAEE,IAAA,WAAW,EAAEP,WAFf;AAGE,IAAA,UAAU,EAAEF,KAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAVF,CADD,CADH,CADF,CADF;AA4BD,CA3ED;;AA4EA,MAAMuC,eAAe,GAAG1C,wBAAwB,CAAC;AAC/C2C,EAAAA,YAAY,EAAG7C;AADgC,CAAD,CAAhD;AAGA,eAAeC,OAAO,CAAC2C,eAAD,CAAP,CAAyBzC,YAAzB,CAAf","sourcesContent":["import React, { useState, useEffect, useRef, useContext } from \"react\";\nimport {\n  CategoryMenuContainer,\n  DropdownContent,\n  CategoryList,\n  CustomLink\n} from \"./category-menu.styles\";\nimport CATEGORY_DATA from \"../../../data/category\";\nimport ProductsPopup from \"../products-popup/products-popup.component\";\nimport AppContext from \"../../../context/app-viewport.context\";\nimport {selectCategoryList} from \"../../../redux/category/category.selectors\";\nimport {connect} from \"react-redux\";\nimport {createStructuredSelector} from \"reselect\"\nconst CategoryMenu = ({ setShowBackdrop }) => {\n  const [ctgId, setCtfId] = useState(null);\n  const [offsetWidth, setOffsetWidth] = useState(0);\n  const [touched, setIsTouched] = useState(false);\n  const [activeLink, setActiveLink] = useState(null);\n  const categoryRef = useRef(null);\n  const popUpRef = React.createRef(null);\n  const listRef = useRef(null);\n  const categoriesList = Object.keys(CATEGORY_DATA).map(\n    (key) => CATEGORY_DATA[key]\n  );\n  const [smallView, setSmallView] = useState(window.innerWidth < 992);\n  const width = useContext(AppContext);\n  useEffect(() => {\n    if (width < 992) {\n      setSmallView(true);\n    } else {\n      setSmallView(false);\n    }\n  }, [width]);\n  useEffect(() => {\n    setOffsetWidth(categoryRef.current.offsetWidth);\n  }, [setOffsetWidth]);\n\n  useEffect(() => {\n    function removePopupWhenMouseOutListCategory(e) {\n      if (listRef && !listRef.current.contains(e.target)) {\n        setCtfId(null);\n        setIsTouched(false);\n        setActiveLink(null);\n      }\n    }\n    document.addEventListener(\"mouseover\", removePopupWhenMouseOutListCategory);\n    return () =>\n      document.removeEventListener(\n        \"mouseover\",\n        removePopupWhenMouseOutListCategory\n      );\n  });\n\n  const handleMouseEnter = (e, categoryId) => {\n    setCtfId(categoryId);\n    setIsTouched(true);\n    setActiveLink(categoryId);    \n  };    \n  const handleMouseLeave = (e) => {      \n  };\n  return (\n    <CategoryMenuContainer ref={categoryRef}>      \n      <CategoryList ref={listRef}>\n        {categoriesList.map((item) => (\n          <React.Fragment key={item._id}>\n            <CustomLink\n              onMouseEnter={(e) => handleMouseEnter(e, item._id)}\n              onMouseLeave={(e) => handleMouseLeave(e)}\n              to={item.linkUrl}\n              style={{ fontWeight: \"400\", textTransform: \"capitalize\" }}\n              active={item._id === activeLink}\n            >\n              {item.name}\n            </CustomLink>            \n            <DropdownContent>\n              {ctgId && !smallView && (\n                <ProductsPopup\n                  ref={popUpRef}\n                  offsetWidth={offsetWidth}\n                  categoryId={ctgId}\n                />\n              )}\n            </DropdownContent>\n          </React.Fragment>\n        ))}\n      </CategoryList>\n    </CategoryMenuContainer>\n  );\n};\nconst mapStateToProps = createStructuredSelector({\n  categoryList : selectCategoryList\n})\nexport default connect(mapStateToProps)(CategoryMenu);\n"]},"metadata":{},"sourceType":"module"}