{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/RegisterSeller/create-product/create-product.component.jsx\";\n// import React, { useState, useEffect, useContext, useRef } from \"react\";\n// import {\n//   Form,\n//   FormInline,\n//   FormGroup,\n//   Label,\n//   Input,\n//   Required,\n//   Select,\n//   Option,\n//   Editable,\n//   FormGroupAnimation,\n//   PlainText,\n//   Title,\n// } from \"../../UI/custom-form-second/custom-form-second.component\";\n// import {\n//   FormCreateProductWrapper,\n//   CustomNumberFormat,\n//   List,\n//   DisplayImage,\n//   Image,\n// } from \"./form-create-product.styles\";\n// import AppContext from \"../../../context/app-viewport.context\";\n// import { getListCategory, getListProductType } from \"../../../utils/connectDB\";\n// import ChipInput from \"material-ui-chip-input\";\n// import FormControlLabel from \"@material-ui/core/FormControlLabel\";\n// import Checkbox from \"@material-ui/core/Checkbox\";\n// import CKEditor from \"@ckeditor/ckeditor5-react\";\n// import ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\n// import { generateBase64Image } from \"../../../utils/image\";\n// import \"./form-create.styles.css\";\n// import { connect } from \"react-redux\";\n// import { saveProductForm } from \"../../../redux/seller/seller.actions\";\n// import { selectCreateProductForm } from \"../../../redux/seller/seller.selectors\";\n// import { createStructuredSelector } from \"reselect\";\n// const FormCreateProduct = ({ setDisabledNext, save, product, scroll }) => {\n//   const [listCatogory, setListCategory] = useState([]);\n//   const [listProductType, setListProductType] = useState([]);\n//   const {\n//     selectedCategory,\n//     selectedProductType,\n//     name,\n//     manufactor,\n//     image,\n//     tags,\n//     price,\n//     isDiscount,\n//     discount,\n//     discountExpDate,\n//     description,\n//     information,\n//   } = product;\n//   const [listBase64Image, setListBase64Image] = useState([]);\n//   const [error, setError] = useState(false);\n//   useEffect(() => {\n//     window.scrollTo({\n//       top: scroll,\n//       behavior: \"smooth\",\n//     });\n//   }, [scroll]);\n//   useEffect(() => {\n//     let _mounted = true;\n//     getListCategory()\n//       .then((data) => {\n//         if (_mounted) {\n//           setListCategory([\n//             { _id: \"\", name: \"Lựa chọn Nhóm Sản Phẩm\", linkUrl: \"\" },\n//             ...data,\n//           ]);\n//         }\n//       })\n//       .catch((err) => {\n//         if (_mounted) {\n//           setError(err);\n//         }\n//       });\n//     return () => (_mounted = false);\n//   }, [getListCategory]);\n//   const handleChangeCategory = (e) => {\n//     const index = e.target.selectedIndex;\n//     const _id = e.target.value;\n//     const linkUrl = e.target.childNodes[index].dataset.url;\n//     const name = e.target[index].text;\n//     save({ selectedCategory: { _id, name, linkUrl } });\n//     getListProductType(_id)\n//       .then((data) => {\n//         setListProductType([...data]);\n//       })\n//       .catch((err) => setError(err));\n//   };\n//   const handleChangeProductType = (e) => {\n//     const index = e.target.selectedIndex;\n//     const _id = e.target.value;\n//     const linkUrl = e.target.childNodes[index].dataset.url;\n//     const name = e.target[index].text;\n//     save({ selectedProductType: { _id, name, linkUrl } });\n//   };\n//   const handleChangeImage = async (e) => {\n//     const length = e.target.files.length;\n//     let listImage = [];\n//     for (let i = 0; i < length; i++) {\n//       listImage.push(e.target.files[i]);\n//     }\n//     save({ image: [...listImage] });\n//     const imageBase64Promise = listImage.map(async (file) => {\n//       return await generateBase64Image(file);\n//     });\n//     const listImageBase64 = await Promise.all(imageBase64Promise);\n//     setListBase64Image(listImageBase64);\n//   };\n//   const handleChangeChip = (chip) => {\n//     save({ tags: chip });\n//   };\n//   useEffect(() => {\n//     if (\n//       !selectedCategory.name ||\n//       !selectedCategory._id ||\n//       !selectedCategory.linkUrl ||\n//       !selectedProductType.name ||\n//       !selectedProductType._id ||\n//       !selectedProductType.linkUrl ||\n//       name.trim().length < 3 ||\n//       !image.length ||\n//       !price ||\n//       price === 0 ||\n//       !tags.length ||\n//       (isDiscount &&\n//         (!discount ||\n//           typeof discount !== \"number\" ||\n//           discount < 0 ||\n//           discount > 100 ||\n//           !discountExpDate)) ||\n//       !description ||\n//       !information ||\n//       !manufactor\n//     ) {\n//       return setDisabledNext(true);\n//     }\n//     setDisabledNext(false);\n//   }, [\n//     selectedCategory,\n//     selectedProductType,\n//     name,\n//     tags,\n//     isDiscount,\n//     discount,\n//     discountExpDate,\n//     description,\n//     information,\n//     manufactor,\n//   ]);\n//   return (\n//     <FormCreateProductWrapper>\n//       <Form>\n//         <Title>THÔNG TIN SẢN PHẨM</Title>\n//         {error && <h4>{error}</h4>}\n//         <FormGroup>\n//           <Label>Loại Sản Phẩm</Label>\n//           <Select\n//             value={selectedCategory._id}\n//             onChange={handleChangeCategory}\n//             style={{\n//               borderBottomColor: selectedCategory._id === \"\" ? \"red\" : \"green\",\n//             }}\n//           >\n//             {listCatogory.map((category) => (\n//               <Option\n//                 key={category._id}\n//                 value={category._id}\n//                 data-url={category.linkUrl}\n//                 disabled={!category._id}\n//               >\n//                 {category.name}\n//               </Option>\n//             ))}\n//           </Select>\n//         </FormGroup>\n//         <FormGroup>\n//           <Label>Nhóm Sản phẩm</Label>\n//           <Select\n//             defaultValue={selectedProductType._id}\n//             onChange={handleChangeProductType}\n//             style={{\n//               borderBottomColor:\n//                 selectedProductType._id === \"\" ? \"red\" : \"green\",\n//             }}\n//           >\n//             <Option value=\"\" disabled>\n//               Lựa chọn Loại SP\n//             </Option>\n//             {listProductType.map((productType) => (\n//               <Option\n//                 key={productType._id}\n//                 value={productType._id}\n//                 data-url={productType.linkUrl}\n//                 disabled={!productType._id}\n//               >\n//                 {productType.name}\n//               </Option>\n//             ))}\n//           </Select>\n//         </FormGroup>\n//         <FormGroup>\n//           <Label htmlFor=\"name\">Tên Sản phẩm</Label>\n//           <Input\n//             id=\"name\"\n//             type=\"text\"\n//             value={name}\n//             onChange={(e) => {\n//               save({ name: e.target.value });\n//             }}\n//             style={{\n//               borderBottomColor: name.trim().length < 3 ? \"red\" : \"green\",\n//             }}\n//           />\n//           <PlainText>Tên SP phải có ít nhất 3 ký tự(*)</PlainText>\n//         </FormGroup>\n//         <FormGroup>\n//           <Label htmlFor=\"manufactor\">Nhà sản xuất</Label>\n//           <Input\n//             id=\"manufactor\"\n//             type=\"text\"\n//             value={manufactor}\n//             onChange={(e) => {\n//               save({ manufactor: e.target.value });\n//             }}\n//             style={{\n//               borderBottomColor: !manufactor ? \"red\" : \"green\",\n//             }}\n//           />\n//           <PlainText>Bạn phải điền tên NSX(*)</PlainText>\n//         </FormGroup>\n//         <FormGroup>\n//           <Label htmlFor=\"image\">Tải hình ảnh</Label>\n//           <Input\n//             id=\"image\"\n//             type=\"file\"\n//             onChange={handleChangeImage}\n//             multiple\n//             inputFile\n//             style={{ borderBottomColor: !image.length ? \"red\" : \"green\" }}\n//           />\n//           <PlainText>Bạn cần tải lên ít nhất 1 hình(*)</PlainText>\n//         </FormGroup>\n//         <FormGroup>\n//           <Label>Tạo tags</Label>\n//           <ChipInput\n//             fullWidth\n//             defaultValue={tags}\n//             newChipKeyCodes={[32, 13]}\n//             onChange={(chip) => handleChangeChip(chip)}\n//             blurBehavior=\"add\"\n//             style={{ marginTop: \"0.75rem\" }}\n//           />\n//           <PlainText>\n//             Bạn phải tạo tags, nhấn phím cách để thêm tags mới (*)\n//           </PlainText>\n//         </FormGroup>\n//         <FormGroup>\n//           <Label>Giá sản phẩm</Label>\n//           <CustomNumberFormat\n//             value={price}\n//             allowLeadingZeros={false}\n//             thousandSeparator={true}\n//             suffix={\" VNĐ\"}\n//             allowNegative={false}\n//             allowEmptyFormatting={true}\n//             onValueChange={({ floatValue }) => {\n//               save({ price: floatValue });\n//             }}\n//             style={{ borderBottomColor: !price ? \"red\" : \"green\" }}\n//           />\n//           <PlainText>Giá SP là bắt buộc (*)</PlainText>\n//         </FormGroup>\n//         <FormInline>\n//           <FormGroup style={{ width: \"auto\" }}>\n//             <FormControlLabel\n//               control={\n//                 <Checkbox\n//                   checked={isDiscount}\n//                   onChange={(e) => {\n//                     save({ isDiscount: e.target.checked });\n//                   }}\n//                   name=\"checkedB\"\n//                   color=\"primary\"\n//                 />\n//               }\n//               label=\"SP giảm giá\"\n//             />\n//           </FormGroup>\n//           <FormGroup style={{ flex: 1 }}>\n//             <FormGroupAnimation isDiscount={isDiscount}>\n//               <Label>\n//                 <Required>Khuyến mãi</Required>\n//               </Label>\n//               <CustomNumberFormat\n//                 value={discount}\n//                 style={{\n//                   borderBottomColor:\n//                     discount == 0 || !discount ? \"red\" : \"green\",\n//                 }}\n//                 allowLeadingZeros={false}\n//                 thousandSeparator={true}\n//                 allowNegative={false}\n//                 allowEmptyFormatting={true}\n//                 onValueChange={({ floatValue }) => {\n//                   save({ discount: floatValue });\n//                 }}\n//                 suffix={\" %\"}\n//                 isAllowed={({ floatValue }) =>\n//                   floatValue >= 0 && floatValue <= 100\n//                 }\n//               />\n//             </FormGroupAnimation>\n//           </FormGroup>\n//           <FormGroup style={{ flex: 1 }}>\n//             <FormGroupAnimation isDiscount={isDiscount}>\n//               <Label>\n//                 <Required>Thời hạn</Required>\n//               </Label>\n//               <Input\n//                 type=\"date\"\n//                 onChange={(e) => {\n//                   save({ discountExpDate: e.target.value });\n//                 }}\n//                 style={{\n//                   borderBottomColor: !discountExpDate ? \"red\" : \"green\",\n//                 }}\n//               />\n//               <PlainText style={{ top: \"52%\" }}>Bắt buộc (*)</PlainText>\n//             </FormGroupAnimation>\n//           </FormGroup>\n//         </FormInline>\n//         <FormGroup>\n//           <FormGroupAnimation isDiscount={isDiscount}>\n//             <Label>\n//               <Required>Giá SP Được giảm giá</Required>\n//             </Label>\n//             <CustomNumberFormat\n//               thousandSeparator={true}\n//               thousandsGroupStyle=\"VND\"\n//               suffix={\" Đ\"}\n//               value={(price * (100 - discount)) / 100}\n//               disabled\n//             />\n//           </FormGroupAnimation>\n//         </FormGroup>\n//         <List isDiscount={isDiscount}>\n//           <h4>Mô tả sản phẩm</h4>\n//           <CKEditor\n//             config={{\n//               toolbar: [\n//                 \"heading\",\n//                 \"|\",\n//                 \"bold\",\n//                 \"italic\",\n//                 \"link\",\n//                 \"bulletedList\",\n//                 \"numberedList\",\n//               ],\n//             }}\n//             editor={ClassicEditor}\n//             data={description}\n//             onChange={(event, editor) => {\n//               const data = editor.getData();\n//               save({ description: data });\n//             }}\n//           />\n//           <PlainText>Bắt buộc (*)</PlainText>\n//         </List>\n//         <List isDiscount={isDiscount}>\n//           <h4>Thông tin sản phẩm</h4>\n//           <CKEditor\n//             config={{\n//               toolbar: [\n//                 \"heading\",\n//                 \"|\",\n//                 \"bold\",\n//                 \"italic\",\n//                 \"link\",\n//                 \"bulletedList\",\n//                 \"numberedList\",\n//               ],\n//             }}\n//             editor={ClassicEditor}\n//             data={information}\n//             onChange={(event, editor) => {\n//               const data = editor.getData();\n//               save({ information: data });\n//             }}\n//           />\n//           <PlainText>Bắt buộc(*)</PlainText>\n//         </List>\n//       </Form>\n//       <DisplayImage>\n//         {listBase64Image.map((image, idx) => (\n//           <Image key={idx} src={image} />\n//         ))}\n//       </DisplayImage>\n//     </FormCreateProductWrapper>\n//   );\n// };\n// const mapStateToProps = createStructuredSelector({\n//   product: selectCreateProductForm,\n// });\n// const mapDispatchToProps = (dispatch) => ({\n//   save: (obj) => dispatch(saveProductForm(obj)),\n// });\n// export default connect(mapStateToProps, mapDispatchToProps)(FormCreateProduct);\nimport React from 'react';\nimport FormCreateProduct from \"../../Product/form-create-product/form-create-product.component\";\nimport { CreateProductWrapper } from \"./create-product.styles\";\n\nconst CreateProduct = ({\n  setDisabledNext\n}) => {\n  return /*#__PURE__*/React.createElement(CreateProductWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormCreateProduct, {\n    setDisabledNext: setDisabledNext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default CreateProduct;","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/RegisterSeller/create-product/create-product.component.jsx"],"names":["React","FormCreateProduct","CreateProductWrapper","CreateProduct","setDisabledNext"],"mappingskB,OAAlB;AACA,OAAOC,iBAAP,MAA8B,iEAA9B;AACA,SAAQC,oBAAR,QAAmC,yBAAnC;;AACA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAuB;AAC3C,sBACE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AAAmB,IAAA,eAAe,EAAEA,eAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAND;;AAQA,eAAeD,aAAf","sourcesContent":["// import React, { useState, useEffect, useContext, useRef } from \"react\";\n// import {\n//   Form,\n//   FormInline,\n//   FormGroup,\n//   Label,\n//   Input,\n//   Required,\n//   Select,\n//   Option,\n//   Editable,\n//   FormGroupAnimation,\n//   PlainText,\n//   Title,\n// } from \"../../UI/custom-form-second/custom-form-second.component\";\n// import {\n//   FormCreateProductWrapper,\n//   CustomNumberFormat,\n//   List,\n//   DisplayImage,\n//   Image,\n// } from \"./form-create-product.styles\";\n// import AppContext from \"../../../context/app-viewport.context\";\n// import { getListCategory, getListProductType } from \"../../../utils/connectDB\";\n// import ChipInput from \"material-ui-chip-input\";\n// import FormControlLabel from \"@material-ui/core/FormControlLabel\";\n// import Checkbox from \"@material-ui/core/Checkbox\";\n// import CKEditor from \"@ckeditor/ckeditor5-react\";\n// import ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\n// import { generateBase64Image } from \"../../../utils/image\";\n// import \"./form-create.styles.css\";\n// import { connect } from \"react-redux\";\n// import { saveProductForm } from \"../../../redux/seller/seller.actions\";\n// import { selectCreateProductForm } from \"../../../redux/seller/seller.selectors\";\n// import { createStructuredSelector } from \"reselect\";\n// const FormCreateProduct = ({ setDisabledNext, save, product, scroll }) => {\n//   const [listCatogory, setListCategory] = useState([]);\n//   const [listProductType, setListProductType] = useState([]);\n//   const {\n//     selectedCategory,\n//     selectedProductType,\n//     name,\n//     manufactor,\n//     image,\n//     tags,\n//     price,\n//     isDiscount,\n//     discount,\n//     discountExpDate,\n//     description,\n//     information,\n//   } = product;\n\n//   const [listBase64Image, setListBase64Image] = useState([]);\n\n//   const [error, setError] = useState(false);\n \n\n//   useEffect(() => {\n//     window.scrollTo({\n//       top: scroll,\n//       behavior: \"smooth\",\n//     });\n//   }, [scroll]);\n\n//   useEffect(() => {\n//     let _mounted = true;\n//     getListCategory()\n//       .then((data) => {\n//         if (_mounted) {\n//           setListCategory([\n//             { _id: \"\", name: \"Lựa chọn Nhóm Sản Phẩm\", linkUrl: \"\" },\n//             ...data,\n//           ]);\n//         }\n//       })\n//       .catch((err) => {\n//         if (_mounted) {\n//           setError(err);\n//         }\n//       });\n//     return () => (_mounted = false);\n//   }, [getListCategory]);\n//   const handleChangeCategory = (e) => {\n//     const index = e.target.selectedIndex;\n//     const _id = e.target.value;\n//     const linkUrl = e.target.childNodes[index].dataset.url;\n//     const name = e.target[index].text;\n//     save({ selectedCategory: { _id, name, linkUrl } });\n//     getListProductType(_id)\n//       .then((data) => {\n//         setListProductType([...data]);\n//       })\n//       .catch((err) => setError(err));\n//   };\n//   const handleChangeProductType = (e) => {\n//     const index = e.target.selectedIndex;\n//     const _id = e.target.value;\n//     const linkUrl = e.target.childNodes[index].dataset.url;\n//     const name = e.target[index].text;\n//     save({ selectedProductType: { _id, name, linkUrl } });\n//   };\n//   const handleChangeImage = async (e) => {\n//     const length = e.target.files.length;\n//     let listImage = [];\n//     for (let i = 0; i < length; i++) {\n//       listImage.push(e.target.files[i]);\n//     }\n//     save({ image: [...listImage] });\n//     const imageBase64Promise = listImage.map(async (file) => {\n//       return await generateBase64Image(file);\n//     });\n//     const listImageBase64 = await Promise.all(imageBase64Promise);\n//     setListBase64Image(listImageBase64);\n//   };\n//   const handleChangeChip = (chip) => {\n//     save({ tags: chip });\n//   };\n//   useEffect(() => {\n//     if (\n//       !selectedCategory.name ||\n//       !selectedCategory._id ||\n//       !selectedCategory.linkUrl ||\n//       !selectedProductType.name ||\n//       !selectedProductType._id ||\n//       !selectedProductType.linkUrl ||\n//       name.trim().length < 3 ||\n//       !image.length ||\n//       !price ||\n//       price === 0 ||\n//       !tags.length ||\n//       (isDiscount &&\n//         (!discount ||\n//           typeof discount !== \"number\" ||\n//           discount < 0 ||\n//           discount > 100 ||\n//           !discountExpDate)) ||\n//       !description ||\n//       !information ||\n//       !manufactor\n//     ) {\n//       return setDisabledNext(true);\n//     }\n//     setDisabledNext(false);\n//   }, [\n//     selectedCategory,\n//     selectedProductType,\n//     name,\n//     tags,\n//     isDiscount,\n//     discount,\n//     discountExpDate,\n//     description,\n//     information,\n//     manufactor,\n//   ]);\n\n//   return (\n//     <FormCreateProductWrapper>\n//       <Form>\n//         <Title>THÔNG TIN SẢN PHẨM</Title>\n//         {error && <h4>{error}</h4>}\n//         <FormGroup>\n//           <Label>Loại Sản Phẩm</Label>\n//           <Select\n//             value={selectedCategory._id}\n//             onChange={handleChangeCategory}\n//             style={{\n//               borderBottomColor: selectedCategory._id === \"\" ? \"red\" : \"green\",\n//             }}\n//           >\n//             {listCatogory.map((category) => (\n//               <Option\n//                 key={category._id}\n//                 value={category._id}\n//                 data-url={category.linkUrl}\n//                 disabled={!category._id}\n//               >\n//                 {category.name}\n//               </Option>\n//             ))}\n//           </Select>\n//         </FormGroup>\n//         <FormGroup>\n//           <Label>Nhóm Sản phẩm</Label>\n//           <Select\n//             defaultValue={selectedProductType._id}\n//             onChange={handleChangeProductType}\n//             style={{\n//               borderBottomColor:\n//                 selectedProductType._id === \"\" ? \"red\" : \"green\",\n//             }}\n//           >\n//             <Option value=\"\" disabled>\n//               Lựa chọn Loại SP\n//             </Option>\n//             {listProductType.map((productType) => (\n//               <Option\n//                 key={productType._id}\n//                 value={productType._id}\n//                 data-url={productType.linkUrl}\n//                 disabled={!productType._id}\n//               >\n//                 {productType.name}\n//               </Option>\n//             ))}\n//           </Select>\n//         </FormGroup>\n//         <FormGroup>\n//           <Label htmlFor=\"name\">Tên Sản phẩm</Label>\n//           <Input\n//             id=\"name\"\n//             type=\"text\"\n//             value={name}\n//             onChange={(e) => {\n//               save({ name: e.target.value });\n//             }}\n//             style={{\n//               borderBottomColor: name.trim().length < 3 ? \"red\" : \"green\",\n//             }}\n//           />\n//           <PlainText>Tên SP phải có ít nhất 3 ký tự(*)</PlainText>\n//         </FormGroup>\n//         <FormGroup>\n//           <Label htmlFor=\"manufactor\">Nhà sản xuất</Label>\n//           <Input\n//             id=\"manufactor\"\n//             type=\"text\"\n//             value={manufactor}\n//             onChange={(e) => {\n//               save({ manufactor: e.target.value });\n//             }}\n//             style={{\n//               borderBottomColor: !manufactor ? \"red\" : \"green\",\n//             }}\n//           />\n//           <PlainText>Bạn phải điền tên NSX(*)</PlainText>\n//         </FormGroup>\n//         <FormGroup>\n//           <Label htmlFor=\"image\">Tải hình ảnh</Label>\n//           <Input\n//             id=\"image\"\n//             type=\"file\"\n//             onChange={handleChangeImage}\n//             multiple\n//             inputFile\n//             style={{ borderBottomColor: !image.length ? \"red\" : \"green\" }}\n//           />\n//           <PlainText>Bạn cần tải lên ít nhất 1 hình(*)</PlainText>\n//         </FormGroup>\n//         <FormGroup>\n//           <Label>Tạo tags</Label>\n//           <ChipInput\n//             fullWidth\n//             defaultValue={tags}\n//             newChipKeyCodes={[32, 13]}\n//             onChange={(chip) => handleChangeChip(chip)}\n//             blurBehavior=\"add\"\n//             style={{ marginTop: \"0.75rem\" }}\n//           />\n//           <PlainText>\n//             Bạn phải tạo tags, nhấn phím cách để thêm tags mới (*)\n//           </PlainText>\n//         </FormGroup>\n//         <FormGroup>\n//           <Label>Giá sản phẩm</Label>\n//           <CustomNumberFormat\n//             value={price}\n//             allowLeadingZeros={false}\n//             thousandSeparator={true}\n//             suffix={\" VNĐ\"}\n//             allowNegative={false}\n//             allowEmptyFormatting={true}\n//             onValueChange={({ floatValue }) => {\n//               save({ price: floatValue });\n//             }}\n//             style={{ borderBottomColor: !price ? \"red\" : \"green\" }}\n//           />\n//           <PlainText>Giá SP là bắt buộc (*)</PlainText>\n//         </FormGroup>\n//         <FormInline>\n//           <FormGroup style={{ width: \"auto\" }}>\n//             <FormControlLabel\n//               control={\n//                 <Checkbox\n//                   checked={isDiscount}\n//                   onChange={(e) => {\n//                     save({ isDiscount: e.target.checked });\n//                   }}\n//                   name=\"checkedB\"\n//                   color=\"primary\"\n//                 />\n//               }\n//               label=\"SP giảm giá\"\n//             />\n//           </FormGroup>\n//           <FormGroup style={{ flex: 1 }}>\n//             <FormGroupAnimation isDiscount={isDiscount}>\n//               <Label>\n//                 <Required>Khuyến mãi</Required>\n//               </Label>\n//               <CustomNumberFormat\n//                 value={discount}\n//                 style={{\n//                   borderBottomColor:\n//                     discount == 0 || !discount ? \"red\" : \"green\",\n//                 }}\n//                 allowLeadingZeros={false}\n//                 thousandSeparator={true}\n//                 allowNegative={false}\n//                 allowEmptyFormatting={true}\n//                 onValueChange={({ floatValue }) => {\n//                   save({ discount: floatValue });\n//                 }}\n//                 suffix={\" %\"}\n//                 isAllowed={({ floatValue }) =>\n//                   floatValue >= 0 && floatValue <= 100\n//                 }\n//               />\n//             </FormGroupAnimation>\n//           </FormGroup>\n//           <FormGroup style={{ flex: 1 }}>\n//             <FormGroupAnimation isDiscount={isDiscount}>\n//               <Label>\n//                 <Required>Thời hạn</Required>\n//               </Label>\n//               <Input\n//                 type=\"date\"\n//                 onChange={(e) => {\n//                   save({ discountExpDate: e.target.value });\n//                 }}\n//                 style={{\n//                   borderBottomColor: !discountExpDate ? \"red\" : \"green\",\n//                 }}\n//               />\n\n//               <PlainText style={{ top: \"52%\" }}>Bắt buộc (*)</PlainText>\n//             </FormGroupAnimation>\n//           </FormGroup>\n//         </FormInline>\n//         <FormGroup>\n//           <FormGroupAnimation isDiscount={isDiscount}>\n//             <Label>\n//               <Required>Giá SP Được giảm giá</Required>\n//             </Label>\n//             <CustomNumberFormat\n//               thousandSeparator={true}\n//               thousandsGroupStyle=\"VND\"\n//               suffix={\" Đ\"}\n//               value={(price * (100 - discount)) / 100}\n//               disabled\n//             />\n//           </FormGroupAnimation>\n//         </FormGroup>\n//         <List isDiscount={isDiscount}>\n//           <h4>Mô tả sản phẩm</h4>\n//           <CKEditor\n//             config={{\n//               toolbar: [\n//                 \"heading\",\n//                 \"|\",\n//                 \"bold\",\n//                 \"italic\",\n//                 \"link\",\n//                 \"bulletedList\",\n//                 \"numberedList\",\n//               ],\n//             }}\n//             editor={ClassicEditor}\n//             data={description}\n//             onChange={(event, editor) => {\n//               const data = editor.getData();\n//               save({ description: data });\n//             }}\n//           />\n//           <PlainText>Bắt buộc (*)</PlainText>\n//         </List>\n//         <List isDiscount={isDiscount}>\n//           <h4>Thông tin sản phẩm</h4>\n//           <CKEditor\n//             config={{\n//               toolbar: [\n//                 \"heading\",\n//                 \"|\",\n//                 \"bold\",\n//                 \"italic\",\n//                 \"link\",\n//                 \"bulletedList\",\n//                 \"numberedList\",\n//               ],\n//             }}\n//             editor={ClassicEditor}\n//             data={information}\n//             onChange={(event, editor) => {\n//               const data = editor.getData();\n//               save({ information: data });\n//             }}\n//           />\n//           <PlainText>Bắt buộc(*)</PlainText>\n//         </List>\n//       </Form>\n//       <DisplayImage>\n//         {listBase64Image.map((image, idx) => (\n//           <Image key={idx} src={image} />\n//         ))}\n//       </DisplayImage>\n//     </FormCreateProductWrapper>\n//   );\n// };\n// const mapStateToProps = createStructuredSelector({\n//   product: selectCreateProductForm,\n// });\n// const mapDispatchToProps = (dispatch) => ({\n//   save: (obj) => dispatch(saveProductForm(obj)),\n// });\n// export default connect(mapStateToProps, mapDispatchToProps)(FormCreateProduct);\nimport React from 'react'\nimport FormCreateProduct from \"../../Product/form-create-product/form-create-product.component\"\nimport {CreateProductWrapper} from \"./create-product.styles\";\nconst CreateProduct = ({setDisabledNext}) => {\n  return (\n    <CreateProductWrapper>\n      <FormCreateProduct setDisabledNext={setDisabledNext} />\n    </CreateProductWrapper>\n  )\n}\n\nexport default CreateProduct\n"]},"metadata":{},"sourceType":"module"}