{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/src/components/category-menu/category-menu.component.jsx\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { CategoryMenuContainer } from \"./category-menu.styles\";\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport CATEGORY_DATA from \"../../data/category\";\nimport { CustomLink } from \"../custom-link/custom-link.component\";\nimport ProductsPopup from \"../products-popup/products-popup.component\";\n\nconst CategoryMenu = ({\n  show\n}) => {\n  const [ctgId, setCtfId] = useState(null);\n  const [offsetWidth, setOffsetWidth] = useState(0);\n  const [isHoverPopup, setIsHoverPopup] = useState(false);\n  const [touched, setIsTouched] = useState(false);\n  const [exitPopup, setExitPopup] = useState(true);\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const categoryRef = useRef(null);\n  const popUpRef = React.createRef(null);\n  const categoriesList = Object.keys(CATEGORY_DATA).map(key => CATEGORY_DATA[key]);\n  useEffect(() => {\n    setOffsetWidth(categoryRef.current.offsetWidth);\n  });\n\n  const onMouseEnter = () => {};\n\n  const onMouseLeave = () => {};\n\n  const toggle = () => {\n    setDropdownOpen(prevState => !prevState.dropdownOpen);\n  };\n\n  return /*#__PURE__*/React.createElement(CategoryMenuContainer, {\n    show: show,\n    ref: categoryRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, categoriesList.map(item => /*#__PURE__*/React.createElement(Dropdown, {\n    className: \"d-inline-block\",\n    onMouseOver: onMouseEnter,\n    onMouseLeave: onMouseLeave,\n    isOpen: dropdownOpen,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(DropdownToggle, {\n    caret: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 10\n    }\n  }, \"Dropdown\"), /*#__PURE__*/React.createElement(DropdownMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(DropdownItem, {\n    header: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }\n  }, \"Header\"), /*#__PURE__*/React.createElement(DropdownItem, {\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }\n  }, \"Action\"), /*#__PURE__*/React.createElement(DropdownItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }\n  }, \"Another Action\"), /*#__PURE__*/React.createElement(DropdownItem, {\n    divider: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(DropdownItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }\n  }, \"Another Action\"))) // <CustomLink\n  //   onMouseOver={(e) => handleMouseOver(e, item._id)}\n  //   key={item.name}\n  //   to={item.linkUrl}\n  //   style={{ fontWeight: \"400\", textTransform: \"capitalize\" }}\n  // >\n  //   {item.name}\n  //   <DropdownContent>\n  //     {ctgId && (\n  //       <ProductsPopup\n  //         ref={popUpRef}\n  //         offsetWidth={offsetWidth}\n  //         categoryId={ctgId}\n  //       />\n  //     )}\n  //   </DropdownContent>\n  // </CustomLink>\n  ));\n};\n\nexport default CategoryMenu;","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/src/components/category-menu/category-menu.component.jsx"],"names":["React","useState","useEffect","useRef","CategoryMenuContainer","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","CATEGORY_DATA","CustomLink","ProductsPopup","CategoryMenu","show","ctgId","setCtfId","offsetWidth","setOffsetWidth","isHoverPopup","setIsHoverPopup","touched","setIsTouched","exitPopup","setExitPopup","dropdownOpen","setDropdownOpen","categoryRef","popUpRef","createRef","categoriesList","Object","keys","map","key","current","onMouseEnter","onMouseLeave","toggle","prevState","item"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  CategoryMenuContainer,\n} from \"./category-menu.styles\";\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport CATEGORY_DATA from \"../../data/category\";\nimport { CustomLink } from \"../custom-link/custom-link.component\";\nimport ProductsPopup from \"../products-popup/products-popup.component\";\nconst CategoryMenu = ({ show }) => {\n  const [ctgId, setCtfId] = useState(null);\n  const [offsetWidth, setOffsetWidth] = useState(0);\n  const [isHoverPopup, setIsHoverPopup] = useState(false);\n  const [touched, setIsTouched] = useState(false);\n  const [exitPopup, setExitPopup] = useState(true);\n  const [dropdownOpen, setDropdownOpen] = useState(false)\n  const categoryRef = useRef(null);\n  const popUpRef = React.createRef(null);\n  const categoriesList = Object.keys(CATEGORY_DATA).map(\n    (key) => CATEGORY_DATA[key]\n  );\n\n  useEffect(() => {\n    setOffsetWidth(categoryRef.current.offsetWidth);\n  });\n\n  const onMouseEnter = () => {\n\n  }\n  const onMouseLeave = () => {\n\n  }\n  const toggle = () => {\n    setDropdownOpen(prevState => !prevState.dropdownOpen)\n  }\n  \n  return (\n    <CategoryMenuContainer show={show} ref={categoryRef}>\n      {categoriesList.map((item) => (\n         <Dropdown className=\"d-inline-block\" onMouseOver={onMouseEnter} onMouseLeave={onMouseLeave} isOpen={dropdownOpen} toggle={toggle}>\n         <DropdownToggle caret>\n           Dropdown\n         </DropdownToggle>\n         <DropdownMenu>\n           <DropdownItem header>Header</DropdownItem>\n           <DropdownItem disabled>Action</DropdownItem>\n           <DropdownItem>Another Action</DropdownItem>\n           <DropdownItem divider />\n           <DropdownItem>Another Action</DropdownItem>\n         </DropdownMenu>\n       </Dropdown>\n        // <CustomLink\n        //   onMouseOver={(e) => handleMouseOver(e, item._id)}\n        //   key={item.name}\n        //   to={item.linkUrl}\n        //   style={{ fontWeight: \"400\", textTransform: \"capitalize\" }}\n        // >\n        //   {item.name}\n        //   <DropdownContent>\n        //     {ctgId && (\n        //       <ProductsPopup\n        //         ref={popUpRef}\n        //         offsetWidth={offsetWidth}\n        //         categoryId={ctgId}\n        //       />\n        //     )}\n        //   </DropdownContent>\n        // </CustomLink>\n      ))}\n    </CategoryMenuContainer>\n  );\n};\n\nexport default CategoryMenu;\n"]},"metadata":{},"sourceType":"module"}