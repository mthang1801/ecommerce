{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/pages/product-reviews/product-reviews.component.jsx\";\nimport React, { useEffect } from 'react';\nimport { ProductReviewsWrapper } from \"./product-reviews.styles\";\nimport { fetchProductReviews } from \"../../redux/product-reviews/product-reviews.actions\";\nimport { selectCurrentUser, selectUserLoading } from \"../../redux/user/user.selectors\";\nimport { createStructuredSelector } from \"reselect\";\nimport { connect } from \"react-redux\";\n\nconst ProductReviews = ({\n  fetchProductReviews,\n  match,\n  currentUser,\n  userLoading\n}) => {\n  useEffect(() => {\n    if (match.params.productId && !userLoading) {\n      fetchProductReviews(match.params.productId);\n    }\n  }, [fetchProductReviews, match.params, currentUser, userLoading]);\n  return /*#__PURE__*/React.createElement(ProductReviewsWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, \"ok\");\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  userLoading: selectUserLoading\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchProductReviews: productId => dispatch(fetchProductReviews(productId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductReviews);","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/pages/product-reviews/product-reviews.component.jsx"],"names":["React","useEffect","ProductReviewsWrapper","fetchProductReviews","selectCurrentUser","selectUserLoading","createStructuredSelector","connect","ProductReviews","match","currentUser","userLoading","params","productId","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,qBAAR,QAAoC,0BAApC;AACA,SAAQC,mBAAR,QAAkC,qDAAlC;AACA,SAAQC,iBAAR,EAA2BC,iBAA3B,QAAmD,iCAAnD;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AACA,MAAMC,cAAc,GAAG,CAAC;AAACL,EAAAA,mBAAD;AAAsBM,EAAAA,KAAtB;AAA6BC,EAAAA,WAA7B;AAA0CC,EAAAA;AAA1C,CAAD,KAA4D;AACjFV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGQ,KAAK,CAACG,MAAN,CAAaC,SAAb,IAA0B,CAACF,WAA9B,EAA0C;AACxCR,MAAAA,mBAAmB,CAACM,KAAK,CAACG,MAAN,CAAaC,SAAd,CAAnB;AACD;AAEF,GALQ,EAKN,CAACV,mBAAD,EAAsBM,KAAK,CAACG,MAA5B,EAAoCF,WAApC,EAAiDC,WAAjD,CALM,CAAT;AAMA,sBACE,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAZD;;AAcA,MAAMG,eAAe,GAAGR,wBAAwB,CAAC;AAC/CI,EAAAA,WAAW,EAAGN,iBADiC;AAE/CO,EAAAA,WAAW,EAAGN;AAFiC,CAAD,CAAhD;;AAKA,MAAMU,kBAAkB,GAAGC,QAAQ,KAAK;AACtCb,EAAAA,mBAAmB,EAAIU,SAAD,IAAeG,QAAQ,CAACb,mBAAmB,CAACU,SAAD,CAApB;AADP,CAAL,CAAnC;;AAIA,eAAeN,OAAO,CAACO,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CP,cAA7C,CAAf","sourcesContent":["import React, {useEffect} from 'react'\nimport {ProductReviewsWrapper} from \"./product-reviews.styles\";\nimport {fetchProductReviews} from \"../../redux/product-reviews/product-reviews.actions\";\nimport {selectCurrentUser, selectUserLoading} from \"../../redux/user/user.selectors\"\nimport {createStructuredSelector} from \"reselect\";\nimport {connect} from \"react-redux\";\nconst ProductReviews = ({fetchProductReviews, match, currentUser, userLoading}) => {\n  useEffect(() => {       \n    if(match.params.productId && !userLoading){\n      fetchProductReviews(match.params.productId);   \n    }\n    \n  } ,[fetchProductReviews, match.params, currentUser, userLoading])\n  return (\n    <ProductReviewsWrapper>\n     ok\n    </ProductReviewsWrapper>\n  )\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser : selectCurrentUser , \n  userLoading : selectUserLoading\n})\n\nconst mapDispatchToProps = dispatch => ({\n  fetchProductReviews : (productId) => dispatch(fetchProductReviews(productId))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductReviews)\n"]},"metadata":{},"sourceType":"module"}