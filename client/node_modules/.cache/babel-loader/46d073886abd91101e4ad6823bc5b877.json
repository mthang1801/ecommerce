{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Layout/header/toolbar/toolbar.component.jsx\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { ToolbarContainer, ToolbarLeft, ToolbarItem, ToolbarRight, Logout, Avatar } from \"./toolbar.styles\";\nimport { TiUser } from \"react-icons/ti\";\nimport { FiLogOut } from \"react-icons/fi\";\nimport ToggleLanguage from \"../../toggle-languages/toggle-languages.component\";\nimport Icon from \"../../../UI/custom-icon/custom-icon.component\";\nimport { CustomLink } from \"../../../UI/custom-link/custom-link.component\";\nimport AppContext from \"../../../../context/app-viewport.context\";\nimport { selectCurrentUser } from \"../../../../redux/user/user.selectors\";\nimport { createStructuredSelector } from \"reselect\";\nimport { connect } from \"react-redux\";\nimport { logoutStart } from \"../../../../redux/user/user.actions\";\n\nconst Toolbar = ({\n  user,\n  logout\n}) => {\n  const [smallView, setSmallView] = useState(window.innerWidth < 992);\n  const width = useContext(AppContext);\n  useEffect(() => {\n    if (width < 992) {\n      setSmallView(true);\n    } else {\n      setSmallView(false);\n    }\n  }, [width]);\n  if (!smallView) return /*#__PURE__*/React.createElement(ToolbarContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ToolbarLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, !smallView && /*#__PURE__*/React.createElement(ToolbarItem, {\n    mediumView: width < 1200,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"Mi\\u1EC5n ph\\xED v\\u1EADn chuy\\u1EC3n cho \\u0111\\u01A1n h\\xE0ng t\\u1EEB 500.000\")), /*#__PURE__*/React.createElement(ToolbarRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ToolbarItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ToggleLanguage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(ToolbarItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, user && (user.role !== \"seller\" ? /*#__PURE__*/React.createElement(CustomLink, {\n    to: \"/register-seller\",\n    style: {\n      textTransform: \"capitalize\",\n      fontWeight: 400\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 14\n    }\n  }, \"Tr\\u1EDF th\\xE0nh Nh\\xE0 B\\xE1n H\\xE0ng\") : /*#__PURE__*/React.createElement(CustomLink, {\n    to: \"/create-new-product\",\n    style: {\n      textTransform: \"capitalize\",\n      fontWeight: 400\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 14\n    }\n  }, \"B\\xE1n S\\u1EA3n ph\\u1EA9m\"))), /*#__PURE__*/React.createElement(ToolbarItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, user && /*#__PURE__*/React.createElement(ToolbarItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    src: `http://localhost:5000/images/${user.avatar}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, user.name))), /*#__PURE__*/React.createElement(ToolbarItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, user ? /*#__PURE__*/React.createElement(Logout, {\n    onClick: () => logout(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: /*#__PURE__*/React.createElement(FiLogOut, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 29\n      }\n    }),\n    style: {\n      transform: \"scale(1.5)\",\n      marginRight: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }), \"\\u0110\\u0103ng xu\\u1EA5t\") : /*#__PURE__*/React.createElement(CustomLink, {\n    to: \"/auth\",\n    style: {\n      textTransform: \"capitialize\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: /*#__PURE__*/React.createElement(TiUser, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 24\n      }\n    }),\n    style: {\n      transform: \"scale(1.5)\",\n      marginRight: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 16\n    }\n  }), \"Login\"))));\n  return null;\n};\n\nconst mapStateToProps = createStructuredSelector({\n  user: selectCurrentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n  logout: () => dispatch(logoutStart())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Toolbar);","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Layout/header/toolbar/toolbar.component.jsx"],"names":["React","useContext","useEffect","useState","ToolbarContainer","ToolbarLeft","ToolbarItem","ToolbarRight","Logout","Avatar","TiUser","FiLogOut","ToggleLanguage","Icon","CustomLink","AppContext","selectCurrentUser","createStructuredSelector","connect","logoutStart","Toolbar","user","logout","smallView","setSmallView","window","innerWidth","width","role","textTransform","fontWeight","avatar","name","transform","marginRight","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport {\n  ToolbarContainer,\n  ToolbarLeft,\n  ToolbarItem,\n  ToolbarRight,\n  Logout,\n  Avatar\n} from \"./toolbar.styles\";\nimport {\n  TiUser,\n} from \"react-icons/ti\";\nimport {FiLogOut} from \"react-icons/fi\"\nimport ToggleLanguage from \"../../toggle-languages/toggle-languages.component\";\nimport Icon from \"../../../UI/custom-icon/custom-icon.component\";\nimport { CustomLink } from \"../../../UI/custom-link/custom-link.component\";\nimport AppContext from \"../../../../context/app-viewport.context\";\nimport {selectCurrentUser} from \"../../../../redux/user/user.selectors\"\nimport {createStructuredSelector} from \"reselect\";\nimport {connect} from \"react-redux\";\nimport {logoutStart} from \"../../../../redux/user/user.actions\";\nconst Toolbar = ({user,logout}) => {   \n  const [smallView, setSmallView] = useState(window.innerWidth < 992);\n  const width = useContext(AppContext);\n  useEffect(() => {\n    if (width < 992) {\n      setSmallView(true);\n    } else {\n      setSmallView(false);\n    }\n  }, [width]); \n  if (!smallView)\n    return (\n      <ToolbarContainer>\n        <ToolbarLeft>          \n          {!smallView && (\n            <ToolbarItem mediumView={width<1200}>Miễn phí vận chuyển cho đơn hàng từ 500.000</ToolbarItem>\n          )}\n        </ToolbarLeft>\n        <ToolbarRight>        \n          <ToolbarItem>\n            <ToggleLanguage />\n          </ToolbarItem>\n          <ToolbarItem>\n            {user && (user.role !== \"seller\" ? \n             <CustomLink to=\"/register-seller\" style={{textTransform:\"capitalize\", fontWeight : 400}}>Trở thành Nhà Bán Hàng</CustomLink> \n             :\n             <CustomLink to=\"/create-new-product\" style={{textTransform:\"capitalize\", fontWeight : 400}}>Bán Sản phẩm</CustomLink> )\n          }\n           \n          </ToolbarItem>\n          <ToolbarItem>\n            {user && <ToolbarItem >\n                <Avatar src={`http://localhost:5000/images/${user.avatar}`}/>\n                <span>{user.name}</span>\n              </ToolbarItem>}\n          </ToolbarItem>\n          <ToolbarItem>\n            {user ? <Logout onClick={() => logout()}>\n                <Icon icon={<FiLogOut/>}\n                style={{ transform: \"scale(1.5)\", marginRight: \"1rem\" }}/>\n                Đăng xuất\n              </Logout>: (\n               <CustomLink\n               to=\"/auth\"\n               style={{ textTransform: \"capitialize\" }}\n             >\n               <Icon\n                 icon={<TiUser />}\n                 style={{ transform: \"scale(1.5)\", marginRight: \"1rem\" }}\n               />\n               Login\n             </CustomLink> \n            )}\n           \n          </ToolbarItem>\n        </ToolbarRight>\n      </ToolbarContainer>\n    );\n  return null;\n};\nconst mapStateToProps = createStructuredSelector({\n  user : selectCurrentUser\n})\nconst mapDispatchToProps = dispatch => ({\n  logout : () => dispatch(logoutStart())\n})\nexport default connect(mapStateToProps,mapDispatchToProps)(Toolbar);\n"]},"metadata":{},"sourceType":"module"}