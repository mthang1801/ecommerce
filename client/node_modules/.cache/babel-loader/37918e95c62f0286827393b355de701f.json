{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Category/right-side-pagination/right-side-pagination.component.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { PaginationContainer, PageLink } from \"./right-side-pagination.styles\";\nimport { withRouter } from \"react-router-dom\";\nimport { setCurrentPage } from \"../../../redux/category/category.actions\";\nimport { connect } from \"react-redux\";\nimport { generatePagination } from \"../../../utils/algorithms\";\n\nconst Pagination = ({\n  currentPage,\n  numPages,\n  match,\n  history,\n  location,\n  setCurrentPage\n}) => {\n  const [listPages, setListPages] = useState([]);\n  let trackMaxListPage = 0;\n  let trackMinListPage = 0;\n  useEffect(() => {\n    let listPages = generatePagination(currentPage, numPages);\n    setListPages([...listPages]);\n  }, [currentPage, numPages]);\n\n  const movePage = page => {\n    const pathName = location.pathname.split(\"/\")[1];\n    history.push(`/${pathName}/products?page=${page}`);\n    setCurrentPage(page);\n  };\n\n  const handlePageLink = page => {\n    let list = [...listPages];\n\n    if (page === \"nextExtends\") {\n      if (list.length > 8) {\n        list = list.filter((_, idx) => list[idx].to === currentPage || idx > 3);\n      }\n\n      let maxListPage = list[list.length - 3].to;\n      console.log(maxListPage + 3);\n\n      if (maxListPage + 3 < numPages) {\n        for (let i = maxListPage + 1; i <= maxListPage + 3; i++) {\n          list.splice(list.length - 2, 0, {\n            to: i,\n            text: i\n          });\n        }\n      } else {\n        for (let i = maxListPage + 1; i < numPages; i++) {\n          list.splice(list.length - 2, 0, {\n            to: i,\n            text: i\n          });\n        }\n\n        list.splice(list.length - 1, 1);\n      }\n\n      setListPages([...list]);\n      return;\n    }\n\n    movePage(page);\n  };\n\n  const handleNextPage = e => {\n    movePage(currentPage + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(PaginationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PageLink, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"V\\u1EC1 tr\\u01B0\\u1EDBc\"), listPages.length && listPages.map(page => /*#__PURE__*/React.createElement(PageLink, {\n    onClick: () => handlePageLink(page.to),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, page.text)), /*#__PURE__*/React.createElement(PageLink, {\n    onClick: handleNextPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"Ti\\u1EBFp\"));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentPage: page => dispatch(setCurrentPage(page))\n});\n\nexport default connect(null, mapDispatchToProps)(withRouter(Pagination));","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Category/right-side-pagination/right-side-pagination.component.jsx"],"names":["React","useState","useEffect","PaginationContainer","PageLink","withRouter","setCurrentPage","connect","generatePagination","Pagination","currentPage","numPages","match","history","location","listPages","setListPages","trackMaxListPage","trackMinListPage","movePage","page","pathName","pathname","split","push","handlePageLink","list","length","filter","_","idx","to","maxListPage","console","log","i","splice","text","handleNextPage","e","map","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { PaginationContainer, PageLink } from \"./right-side-pagination.styles\";\nimport { withRouter } from \"react-router-dom\";\nimport { setCurrentPage } from \"../../../redux/category/category.actions\";\nimport { connect } from \"react-redux\";\nimport { generatePagination } from \"../../../utils/algorithms\"\nconst Pagination = ({\n  currentPage,\n  numPages,\n  match,\n  history,\n  location,\n  setCurrentPage,\n}) => {\n  const [listPages, setListPages] = useState([]);\n  let trackMaxListPage = 0;\n  let trackMinListPage = 0 ;\n  useEffect(() => {\n    let listPages = generatePagination(currentPage, numPages);\n    setListPages([...listPages]);\n  }, [currentPage, numPages])\n\n  const movePage = page => {\n    const pathName = location.pathname.split(\"/\")[1];\n    history.push(`/${pathName}/products?page=${page}`);\n    setCurrentPage(page);\n  }\n  const handlePageLink = (page) => {\n    let list = [...listPages];\n    if(page === \"nextExtends\"){\n      if(list.length > 8){\n        list = list.filter((_,idx) => list[idx].to === currentPage || idx > 3)\n        \n      }\n      let maxListPage = list[list.length-3].to;\n      console.log(maxListPage + 3);\n      if(maxListPage + 3 < numPages){\n        for(let i = maxListPage +1 ; i <= maxListPage + 3 ; i++){\n          list.splice(list.length-2,0,{to : i, text : i});\n        }\n      }else{\n        for (let i = maxListPage + 1 ; i < numPages ; i++){\n          list.splice(list.length-2,0,{to : i, text : i});          \n        }\n        list.splice(list.length-1,1);\n      }\n      setListPages([...list])\n      return ; \n    }\n    movePage(page);\n  };\n  const handleNextPage = e => {\n    movePage(currentPage + 1 );\n  }\n  return (\n    <PaginationContainer>\n      <PageLink>Về trước</PageLink>\n      {listPages.length &&\n        listPages.map((page) => (\n          <PageLink  onClick={() => handlePageLink(page.to)}>{page.text}</PageLink>\n        ))}\n      <PageLink onClick={handleNextPage}>Tiếp</PageLink>\n    </PaginationContainer>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentPage : page => dispatch(setCurrentPage(page))\n})\nexport default connect(null, mapDispatchToProps)(withRouter(Pagination));\n"]},"metadata":{},"sourceType":"module"}