{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Seller/register-form/register-form.component.jsx\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Form, FormInline, FormGroup, Label, Input, Required, Select, Option } from \"./register-form.styles\";\nimport AppContext from \"../../../context/app-viewport.context\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectCurrentUser } from \"../../../redux/user/user.selectors\";\nimport { PaymentInputsWrapper, usePaymentInputs } from \"react-payment-inputs\";\nimport images from \"react-payment-inputs/images\";\nimport { getListCities, getListDistricts, getListWards } from \"../../../utils/algorithms\";\nimport Loader from \"../../UI/loader/loader.component\";\n\nconst RegisterForm = ({\n  user\n}) => {\n  const {\n    wrapperProps,\n    getCardImageProps,\n    getCardNumberProps,\n    getExpiryDateProps,\n    getCVCProps\n  } = usePaymentInputs();\n  const [cardNumber, setCardNumber] = useState(\"\");\n  const [expiryDate, setExpiryDate] = useState(\"\");\n  const [cvc, setCvc] = useState(\"\");\n  const [payMethod, setPayMethod] = useState(null);\n  const [mobileView, setMobileView] = useState(window.innerWidth < 600);\n  const [listCities, setListCites] = useState([]);\n  const [listDistricts, setListDistricts] = useState([]);\n  const [listWards, setListWards] = useState([]);\n  const [selectedCity, setSelectedCity] = useState({\n    ID: \"\",\n    SolrID: \"\",\n    Title: \"\"\n  });\n  const [selectedDist, setSelectedDist] = useState({\n    ID: \"\",\n    SolrID: \"\",\n    Title: \"\"\n  });\n  const [selectedWard, setSelectedWard] = useState({\n    ID: \"\",\n    SolrID: \"\",\n    Title: \"\"\n  });\n  const [error, setError] = useState(null);\n  const [tabletView, setTabletView] = useState(window.innerWidth < 992 && window.innerWidth >= 660);\n  const width = useContext(AppContext);\n  useEffect(() => {\n    if (width < 660) {\n      setMobileView(true);\n    } else {\n      setMobileView(false);\n    }\n\n    if (width < 992 && width >= 660) {\n      setTabletView(true);\n    } else {\n      setTabletView(false);\n    }\n  }, [width]);\n  useEffect(() => {\n    getListCities().then(listCities => {\n      setListCites(listCities);\n    }).catch(err => {\n      setError(err);\n    });\n  }, [getListCities]);\n\n  const handleChangeCity = e => {\n    const index = e.nativeEvent.target.selectedIndex;\n    setSelectedCity({\n      ID: e.target.value,\n      SolrID: e.target.childNodes[index].dataset.url,\n      Title: e.nativeEvent.target[index].text\n    });\n    getListDistricts(e.target.value).then(data => {\n      setListDistricts(data);\n    }).catch(err => {\n      setError(err);\n    });\n  };\n\n  const handleChangeDistrict = e => {\n    const index = e.nativeEvent.target.selectedIndex;\n    setSelectedDist({\n      ID: e.target.value,\n      SolrID: e.target.childNodes[index].dataset.url,\n      Title: e.nativeEvent.target[index].text\n    });\n    getListWards(e.target.value).then(data => setListWards(data)).catch(err => setError(err));\n  };\n\n  const handleChangeWard = e => {\n    const index = e.nativeEvent.target.selectedIndex;\n    setSelectedWard({\n      ID: e.target.value,\n      SolrID: e.target.childNodes[index].dataset.url,\n      Title: e.nativeEvent.target[index].text\n    });\n  };\n\n  const handleChangeCardNumber = e => {\n    setCardNumber(e.target.value);\n  };\n\n  const handleChangeExpiryDate = e => {\n    setExpiryDate(e.target.value);\n  };\n\n  const handleChangeCVC = e => {\n    setCvc(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    mobileView: mobileView,\n    tabletView: tabletView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, error && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 19\n    }\n  }, error), /*#__PURE__*/React.createElement(FormInline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"first_name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, \"H\\u1ECD\", /*#__PURE__*/React.createElement(Required, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(Input, {\n    name: \"first_name\",\n    id: \"first_name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"last_name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, \"T\\xEAn\", /*#__PURE__*/React.createElement(Required, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 18\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(Input, {\n    name: \"last_name\",\n    id: \"last_name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    defaultValue: selectedCity.ID,\n    onChange: handleChangeCity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    value: selectedCity.ID,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, \"--Ch\\u1ECDn th\\xE0nh ph\\u1ED1--\"), listCities.map(city => /*#__PURE__*/React.createElement(Option, {\n    key: city.ID,\n    value: city.ID,\n    \"data-url\": city.SolrID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }, city.Title)))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    defaultValue: selectedDist.ID,\n    onChange: handleChangeDistrict,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    value: selectedDist.ID,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, \"--Ch\\u1ECDn Qu\\u1EADn/Huy\\u1EC7n--\"), listDistricts.map(district => /*#__PURE__*/React.createElement(Option, {\n    key: district.ID,\n    value: district.ID,\n    \"data-url\": district.SolrID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 15\n    }\n  }, district.Title)))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    defaultValue: selectedWard.ID,\n    onChange: handleChangeWard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    value: selectedWard.ID,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }, \"--Ch\\u1ECDn Ph\\u01B0\\u1EDDng/X\\xE3--\"), listWards.map(ward => /*#__PURE__*/React.createElement(Option, {\n    key: ward.ID,\n    value: ward.ID,\n    \"data-url\": ward.SolrID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 15\n    }\n  }, ward.Title)))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"apartment\",\n    placeholder: \"\\u0110\\u01B0\\u1EDDng, Ph\\u01B0\\u1EDDng X\\xE3, S\\u1ED1 nh\\xE0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(FormInline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"phone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, \"S\\u1ED1 \\u0111i\\u1EC7n tho\\u1EA1i\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"phone1\",\n    id: \"phone1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    value: user.email,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(PaymentInputsWrapper, Object.assign({}, wrapperProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"svg\", Object.assign({}, getCardImageProps({\n    images\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getCardNumberProps({\n    onChange: handleChangeCardNumber\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getExpiryDateProps({\n    onChange: handleChangeExpiryDate\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getCVCProps({\n    onChange: handleChangeCVC\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 11\n    }\n  })))));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  user: selectCurrentUser\n});\nexport default connect(mapStateToProps)(RegisterForm);","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Seller/register-form/register-form.component.jsx"],"names":["React","useState","useEffect","useContext","Form","FormInline","FormGroup","Label","Input","Required","Select","Option","AppContext","connect","createStructuredSelector","selectCurrentUser","PaymentInputsWrapper","usePaymentInputs","images","getListCities","getListDistricts","getListWards","Loader","RegisterForm","user","wrapperProps","getCardImageProps","getCardNumberProps","getExpiryDateProps","getCVCProps","cardNumber","setCardNumber","expiryDate","setExpiryDate","cvc","setCvc","payMethod","setPayMethod","mobileView","setMobileView","window","innerWidth","listCities","setListCites","listDistricts","setListDistricts","listWards","setListWards","selectedCity","setSelectedCity","ID","SolrID","Title","selectedDist","setSelectedDist","selectedWard","setSelectedWard","error","setError","tabletView","setTabletView","width","then","catch","err","handleChangeCity","e","index","nativeEvent","target","selectedIndex","value","childNodes","dataset","url","text","data","handleChangeDistrict","handleChangeWard","handleChangeCardNumber","handleChangeExpiryDate","handleChangeCVC","color","map","city","district","ward","email","onChange","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport {\n  Form,\n  FormInline,\n  FormGroup,\n  Label,\n  Input,\n  Required,\n  Select,\n  Option,\n} from \"./register-form.styles\";\nimport AppContext from \"../../../context/app-viewport.context\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectCurrentUser } from \"../../../redux/user/user.selectors\";\nimport { PaymentInputsWrapper, usePaymentInputs } from \"react-payment-inputs\";\nimport images from \"react-payment-inputs/images\";\nimport {\n  getListCities,\n  getListDistricts,\n  getListWards,\n} from \"../../../utils/algorithms\";\nimport Loader from \"../../UI/loader/loader.component\";\nconst RegisterForm = ({ user }) => {\n  const {\n    wrapperProps,\n    getCardImageProps,\n    getCardNumberProps,\n    getExpiryDateProps,\n    getCVCProps,\n  } = usePaymentInputs();\n  const [cardNumber, setCardNumber] = useState(\"\");\n  const [expiryDate, setExpiryDate] = useState(\"\");\n  const [cvc, setCvc] = useState(\"\");\n  const [payMethod, setPayMethod] = useState(null);\n  const [mobileView, setMobileView] = useState(window.innerWidth < 600);\n  const [listCities, setListCites] = useState([]);\n  const [listDistricts, setListDistricts] = useState([]);\n  const [listWards, setListWards] = useState([]);\n  const [selectedCity, setSelectedCity] = useState({\n    ID: \"\",\n    SolrID: \"\",\n    Title: \"\",\n  });\n  const [selectedDist, setSelectedDist] = useState({\n    ID: \"\",\n    SolrID: \"\",\n    Title: \"\",\n  });\n  const [selectedWard, setSelectedWard] = useState({\n    ID: \"\",\n    SolrID: \"\",\n    Title: \"\",\n  });\n  const [error, setError] = useState(null);\n  const [tabletView, setTabletView] = useState(\n    window.innerWidth < 992 && window.innerWidth >= 660\n  );\n  const width = useContext(AppContext);\n  useEffect(() => {\n    if (width < 660) {\n      setMobileView(true);\n    } else {\n      setMobileView(false);\n    }\n    if (width < 992 && width >= 660) {\n      setTabletView(true);\n    } else {\n      setTabletView(false);\n    }\n  }, [width]);\n\n  useEffect(() => {\n    getListCities()\n      .then((listCities) => {\n        setListCites(listCities);\n      })\n      .catch((err) => {\n        setError(err);\n      });\n  }, [getListCities]);\n\n  const handleChangeCity = (e) => {\n    const index = e.nativeEvent.target.selectedIndex;\n    setSelectedCity({\n      ID: e.target.value,\n      SolrID: e.target.childNodes[index].dataset.url,\n      Title: e.nativeEvent.target[index].text,\n    });\n    getListDistricts(e.target.value)\n      .then((data) => {\n        setListDistricts(data);\n      })\n      .catch((err) => {\n        setError(err);\n      });\n  };\n\n  const handleChangeDistrict = (e) => {\n    const index = e.nativeEvent.target.selectedIndex;\n    setSelectedDist({\n      ID: e.target.value,\n      SolrID: e.target.childNodes[index].dataset.url,\n      Title: e.nativeEvent.target[index].text,\n    });\n    getListWards(e.target.value)\n      .then((data) => setListWards(data))\n      .catch((err) => setError(err));\n  };\n  const handleChangeWard = (e) => {\n    const index = e.nativeEvent.target.selectedIndex;\n    setSelectedWard({\n      ID: e.target.value,\n      SolrID: e.target.childNodes[index].dataset.url,\n      Title: e.nativeEvent.target[index].text,\n    });    \n  };\n  \n\n  const handleChangeCardNumber = (e) => {\n    setCardNumber(e.target.value);\n  };\n  const handleChangeExpiryDate = (e) => {\n    setExpiryDate(e.target.value);\n  };\n  const handleChangeCVC = (e) => {\n    setCvc(e.target.value);\n  };\n  return (\n    <React.Fragment>\n      <Form mobileView={mobileView} tabletView={tabletView}>\n        {error && <div style={{ color: \"red\" }}>{error}</div>}\n        <FormInline>\n          <FormGroup>\n            <Label htmlFor=\"first_name\">\n              Họ<Required>*</Required>\n            </Label>\n            <Input name=\"first_name\" id=\"first_name\" />\n          </FormGroup>\n          <FormGroup>\n            <Label htmlFor=\"last_name\">\n              Tên<Required>*</Required>\n            </Label>\n            <Input name=\"last_name\" id=\"last_name\" />\n          </FormGroup>\n        </FormInline>\n        <FormGroup>\n          <Select defaultValue={selectedCity.ID} onChange={handleChangeCity}>\n            <Option value={selectedCity.ID} disabled>\n              --Chọn thành phố--\n            </Option>\n            {listCities.map((city) => (\n              <Option key={city.ID} value={city.ID} data-url={city.SolrID}>\n                {city.Title}\n              </Option>\n            ))}\n          </Select>\n        </FormGroup>\n        <FormGroup>\n          <Select\n            defaultValue={selectedDist.ID}\n            onChange={handleChangeDistrict}\n          >\n            <Option value={selectedDist.ID} disabled>\n              --Chọn Quận/Huyện--\n            </Option>\n            {listDistricts.map((district) => (\n              <Option\n                key={district.ID}\n                value={district.ID}\n                data-url={district.SolrID}\n              >\n                {district.Title}\n              </Option>\n            ))}\n          </Select>\n        </FormGroup>\n        <FormGroup>\n          <Select\n            defaultValue={selectedWard.ID}\n            onChange={handleChangeWard}\n          >\n            <Option value={selectedWard.ID} disabled>\n              --Chọn Phường/Xã--\n            </Option>\n            {listWards.map((ward) => (\n              <Option\n                key={ward.ID}\n                value={ward.ID}\n                data-url={ward.SolrID}\n              >\n                {ward.Title}\n              </Option>\n            ))}\n          </Select>\n        </FormGroup>\n\n        <FormGroup>\n          <Input name=\"apartment\" placeholder=\"Đường, Phường Xã, Số nhà\" />\n        </FormGroup>\n        <FormInline>\n          <FormGroup>\n            <Label htmlFor=\"phone\">Số điện thoại</Label>\n            <Input name=\"phone1\" id=\"phone1\" />\n          </FormGroup>\n          <FormGroup>\n            <Label>Email</Label>\n            <Input name=\"email\" value={user.email} disabled />\n          </FormGroup>\n        </FormInline>\n        <PaymentInputsWrapper {...wrapperProps}>\n          <svg {...getCardImageProps({ images })} />\n          <input\n            {...getCardNumberProps({ onChange: handleChangeCardNumber })}\n          />\n          <input\n            {...getExpiryDateProps({ onChange: handleChangeExpiryDate })}\n          />\n          <input {...getCVCProps({ onChange: handleChangeCVC })} />\n        </PaymentInputsWrapper>\n      </Form>\n    </React.Fragment>\n  );\n};\nconst mapStateToProps = createStructuredSelector({\n  user : selectCurrentUser\n})\nexport default connect(mapStateToProps)(RegisterForm);\n"]},"metadata":{},"sourceType":"module"}