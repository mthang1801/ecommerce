{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Auth/restore-account/restore-account.component.jsx\";\nimport React from \"react\";\nimport { CustomFormContainer, FormHeader, FormGroups, FormActions, StyledLink, Option, ErrorMessage, Title, SubTitle } from \"../../UI/custom-form/custom-form.styles\";\nimport CustomInput from \"../../UI/custom-input/custom-input.component\";\nimport CustomButton from \"../../UI/custom-button/custom-button.component\";\nimport { withRouter } from \"react-router-dom\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { restoreAccount } from \"../../../redux/user/user.actions\";\nimport { connect } from \"react-redux\";\nimport Loader from \"../../UI/loader/loader.component\";\nconst TEST_SITE_KEY = \"6LcvD8AZAAAAACzN8Rm8GyuqDckBjdIft40W75wJ\";\nconst DELAY = 0;\n\nclass RestoreAccount extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"\",\n      error: null,\n      loading: false,\n      disabled: true,\n      submitLoading: false\n    };\n    this._reCaptchaRef = React.createRef();\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = async e => {\n      this.setState({\n        submitLoading: true\n      });\n      const {\n        email\n      } = this.state;\n      e.preventDefault();\n\n      if (!email) {\n        return;\n      }\n\n      try {\n        await this.props.restoreAccount(email);\n        this.props.history.push(`${this.props.match.path}/done`);\n      } catch (error) {\n        this.setState({\n          error: error.message\n        });\n      }\n    };\n\n    this.reCaptchaHandleChange = value => {\n      this.setState({\n        value,\n        disabled: false\n      });\n      if (value === null) this.setState({\n        disabled: true\n      });\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({\n        loading: true\n      });\n    }, DELAY);\n  }\n\n  render() {\n    console.log(this.props);\n    const {\n      email,\n      error,\n      loading,\n      disabled,\n      submitLoading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, submitLoading && /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(CustomFormContainer, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, \"Forgot account\"), /*#__PURE__*/React.createElement(SubTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, \"Get your account via Email.\")), error && /*#__PURE__*/React.createElement(ErrorMessage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, error), /*#__PURE__*/React.createElement(FormGroups, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CustomInput, {\n      type: \"text\",\n      name: \"email\",\n      value: email,\n      label: \"Email\",\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }), loading && /*#__PURE__*/React.createElement(Option, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }, \" \", /*#__PURE__*/React.createElement(ReCAPTCHA, {\n      style: {\n        display: \"inline-block\"\n      },\n      theme: \"dark\",\n      badge: \"inline\",\n      size: \"normal\",\n      ref: this._reCaptchaRef,\n      sitekey: TEST_SITE_KEY,\n      onChange: this.reCaptchaHandleChange,\n      asyncScriptOnLoad: this.asyncScriptOnLoad,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(CustomButton, {\n      variant: \"contained\",\n      color: \"white\",\n      size: \"small\",\n      bgColor: \"#3949ab\",\n      disabled: disabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, \"Submit\")), /*#__PURE__*/React.createElement(FormActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Option, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(StyledLink, {\n      to: \"/auth/signin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    }, \"Back to Signin\")))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  restoreAccount: email => dispatch(restoreAccount(email))\n});\n\nexport default connect(null, mapDispatchToProps)(withRouter(RestoreAccount));","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Auth/restore-account/restore-account.component.jsx"],"names":["React","CustomFormContainer","FormHeader","FormGroups","FormActions","StyledLink","Option","ErrorMessage","Title","SubTitle","CustomInput","CustomButton","withRouter","ReCAPTCHA","restoreAccount","connect","Loader","TEST_SITE_KEY","DELAY","RestoreAccount","Component","state","email","error","loading","disabled","submitLoading","_reCaptchaRef","createRef","handleChange","e","name","value","target","setState","handleSubmit","preventDefault","props","history","push","match","path","message","reCaptchaHandleChange","componentDidMount","setTimeout","render","console","log","display","asyncScriptOnLoad","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  CustomFormContainer,\n  FormHeader,\n  FormGroups,\n  FormActions,\n  StyledLink,\n  Option,\n  ErrorMessage,\n  Title,\n  SubTitle,\n} from \"../../UI/custom-form/custom-form.styles\";\nimport CustomInput from \"../../UI/custom-input/custom-input.component\";\nimport CustomButton from \"../../UI/custom-button/custom-button.component\";\nimport { withRouter } from \"react-router-dom\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { restoreAccount } from \"../../../redux/user/user.actions\";\nimport { connect } from \"react-redux\";\nimport Loader from \"../../UI/loader/loader.component\";\nconst TEST_SITE_KEY = \"6LcvD8AZAAAAACzN8Rm8GyuqDckBjdIft40W75wJ\";\nconst DELAY = 0;\nclass RestoreAccount extends React.Component {\n  state = {\n    email: \"\",\n    error: null,\n    loading: false,\n    disabled: true,\n    submitLoading: false,\n  };\n\n  _reCaptchaRef = React.createRef();\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({ loading: true });\n    }, DELAY);\n  }\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = async (e) => {\n    this.setState({submitLoading : true })\n    const { email } = this.state;\n    e.preventDefault();\n    if (!email) {\n      return;\n    }\n    try {\n      await this.props.restoreAccount(email);\n      this.props.history.push(`${this.props.match.path}/done`);\n    } catch (error) {\n      this.setState({ error: error.message });\n    }\n  };\n\n  reCaptchaHandleChange = (value) => {\n    this.setState({ value, disabled: false });\n    if (value === null) this.setState({ disabled: true });\n  };\n\n  render() {\n    console.log(this.props);\n    const { email, error, loading, disabled, submitLoading } = this.state;\n    return (\n      <React.Fragment>\n        {submitLoading && <Loader />}\n        <CustomFormContainer onSubmit={this.handleSubmit}>\n          <FormHeader>\n            <Title>Forgot account</Title>\n            <SubTitle>Get your account via Email.</SubTitle>\n          </FormHeader>\n          {error && <ErrorMessage>{error}</ErrorMessage>}\n          <FormGroups>\n            <CustomInput\n              type=\"text\"\n              name=\"email\"\n              value={email}\n              label=\"Email\"\n              onChange={this.handleChange}\n              required\n            />\n            {loading && (\n              <Option>\n                {\" \"}\n                <ReCAPTCHA\n                  style={{ display: \"inline-block\" }}\n                  theme=\"dark\"\n                  badge=\"inline\"\n                  size=\"normal\"\n                  ref={this._reCaptchaRef}\n                  sitekey={TEST_SITE_KEY}\n                  onChange={this.reCaptchaHandleChange}\n                  asyncScriptOnLoad={this.asyncScriptOnLoad}\n                />\n              </Option>\n            )}\n            <CustomButton\n              variant=\"contained\"\n              color=\"white\"\n              size=\"small\"\n              bgColor=\"#3949ab\"\n              disabled={disabled}\n            >\n              Submit\n            </CustomButton>\n          </FormGroups>\n\n          <FormActions>\n            <Option>\n              <StyledLink to=\"/auth/signin\">Back to Signin</StyledLink>\n            </Option>\n          </FormActions>\n        </CustomFormContainer>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  restoreAccount: (email) => dispatch(restoreAccount(email)),\n});\n\nexport default connect(null, mapDispatchToProps)(withRouter(RestoreAccount));\n"]},"metadata":{},"sourceType":"module"}