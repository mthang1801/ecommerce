{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Seller/register-form/register-form.component.jsx\";\nimport React, { useState, useEffect, useContext, useRef } from \"react\";\nimport { Form, FormInline, FormGroup, Label, Input, Required, Select, Option, Editable } from \"./register-form.styles\";\nimport AppContext from \"../../../context/app-viewport.context\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectCurrentUser } from \"../../../redux/user/user.selectors\";\nimport { PaymentInputsWrapper, usePaymentInputs } from \"react-payment-inputs\";\nimport images from \"react-payment-inputs/images\";\nimport { getListCities, getListDistricts, getListWards } from \"../../../utils/algorithms\";\nimport { selectRegisterForm } from \"../../../redux/seller/seller.selectors\";\nimport { FiEdit } from \"react-icons/fi\";\nimport { saveRegisterForm } from \"../../../redux/seller/seller.actions\";\n\nconst RegisterForm = ({\n  user,\n  register,\n  setDisabledNext,\n  save,\n  scroll\n}) => {\n  const {\n    address,\n    cardNumber,\n    cvc,\n    disabledEmail,\n    expiryDate,\n    firstName,\n    lastName,\n    phone,\n    selectedCity,\n    selectedDist,\n    selectedWard\n  } = register;\n  const {\n    wrapperProps,\n    getCardImageProps,\n    getCardNumberProps,\n    getExpiryDateProps,\n    getCVCProps\n  } = usePaymentInputs();\n  useEffect(() => {\n    if (user) {\n      save({\n        email: user.email\n      });\n    }\n  }, [user]); // const [cardNumber, setCardNumber] = useState(register.cardNumber || \"\");\n  // const [expiryDate, setExpiryDate] = useState(register.expiryDate || \"\");\n  // const [cvc, setCvc] = useState(register.cvc || \"\");\n  // const [listCities, setListCites] = useState([]);\n  // const [listDistricts, setListDistricts] = useState([]);\n  // const [listWards, setListWards] = useState([]);\n  // const [firstName, setFirstName] = useState(register.firstName || \"\");\n  // const [lastName, setLastName] = useState(register.lastName || \"\");\n  // const [address, setAddress] = useState(register.address || \"\");\n  // const [phone, setPhone] = useState(register.phone || \"\");\n  // const [email, setEmail] = useState(user.email);\n\n  const [mobileView, setMobileView] = useState(window.innerWidth < 600); // const [disabledEmail, setDisabledEmail] = useState(\n  //   register.disabledEmail || true\n  // );\n  // const [selectedCity, setSelectedCity] = useState({\n  //   ID: register.selectedCity.ID || \"\",\n  //   SolrID: register.selectedCity.SolrID || \"\",\n  //   Title: register.selectedCity.Title || \"\",\n  // });\n  // const [selectedDist, setSelectedDist] = useState({\n  //   ID: register.selectedDist.ID || \"\",\n  //   SolrID: register.selectedDist.SolrID || \"\",\n  //   Title: register.selectedDist.Title || \"\",\n  // });\n  // const [selectedWard, setSelectedWard] = useState({\n  //   ID: register.selectedWard.ID || \"\",\n  //   SolrID: register.selectedWard.SolrID || \"\",\n  //   Title: register.selectedWard.Title || \"\",\n  // });\n\n  const [error, setError] = useState(null);\n  const [tabletView, setTabletView] = useState(window.innerWidth < 992 && window.innerWidth >= 660);\n  const formRef = useRef(null);\n  useEffect(() => {\n    window.scrollTo({\n      top: scroll,\n      behavior: \"smooth\"\n    });\n  }, [scroll]);\n  const width = useContext(AppContext);\n  useEffect(() => {\n    if (width < 660) {\n      setMobileView(true);\n    } else {\n      setMobileView(false);\n    }\n\n    if (width < 992 && width >= 660) {\n      setTabletView(true);\n    } else {\n      setTabletView(false);\n    }\n  }, [width]);\n  useEffect(() => {\n    let _mounted = true;\n    getListCities().then(listCities => {\n      if (_mounted) {\n        setListCites([{\n          ID: \"\",\n          Title: \"Chọn thành phố\",\n          status: \"disabled\"\n        }, ...listCities]);\n      }\n    }).catch(err => {\n      if (_mounted) {\n        setError(err);\n      }\n    });\n    return () => _mounted = false;\n  }, [getListCities]);\n  useEffect(() => {\n    // if (\n    //   firstName &&\n    //   lastName &&\n    //   selectedCity &&\n    //   selectedDist &&\n    //   selectedWard &&\n    //   address &&\n    //   phone &&\n    //   email &&\n    //   cardNumber &&\n    //   expiryDate &&\n    //   cvc\n    // ) {\n    //   setDisabledNext(false);\n    // } else {\n    //   setDisabledNext(true);\n    // }\n    setDisabledNext(true);\n  }, [firstName, lastName, selectedCity, selectedDist, selectedWard, address, phone, email, cardNumber, expiryDate, cvc]);\n\n  const handleChangeCity = e => {\n    const index = e.nativeEvent.target.selectedIndex;\n    setSelectedCity({\n      ID: e.target.value,\n      SolrID: e.target.childNodes[index].dataset.url,\n      Title: e.nativeEvent.target[index].text\n    });\n    save({\n      selectedCity: {\n        ID: e.target.value,\n        SolrID: e.target.childNodes[index].dataset.url,\n        Title: e.nativeEvent.target[index].text\n      }\n    });\n    setSelectedDist({\n      ID: \"\",\n      SolrID: \"\",\n      Title: \"\"\n    });\n    setSelectedWard({\n      ID: \"\",\n      SolrID: \"\",\n      Title: \"\"\n    });\n    setListWards([]);\n    getListDistricts(e.target.value).then(data => {\n      setListDistricts([{\n        ID: \"\",\n        Title: \"Chọn Quận Huyện\",\n        status: \"disabled\"\n      }, ...data]);\n    }).catch(err => {\n      setError(err);\n    });\n  };\n\n  const handleChangeDistrict = e => {\n    const index = e.nativeEvent.target.selectedIndex;\n    setSelectedDist({\n      selectedDistrict: {\n        ID: e.target.value,\n        SolrID: e.target.childNodes[index].dataset.url,\n        Title: e.nativeEvent.target[index].text\n      }\n    });\n    setSelectedWard({\n      ID: \"\",\n      SolrID: \"\",\n      Title: \"\"\n    });\n    save({\n      selectedDist: {\n        ID: e.target.value,\n        SolrID: e.target.childNodes[index].dataset.url,\n        Title: e.nativeEvent.target[index].text\n      }\n    });\n    getListWards(e.target.value).then(data => setListWards([{\n      ID: \"\",\n      Title: \"Chọn Phường, Xã\",\n      status: \"disabled\"\n    }, ...data])).catch(err => setError(err));\n  };\n\n  const handleChangeWard = e => {\n    const index = e.nativeEvent.target.selectedIndex;\n    setSelectedWard({\n      ID: e.target.value,\n      SolrID: e.target.childNodes[index].dataset.url,\n      Title: e.nativeEvent.target[index].text\n    });\n    save({\n      selectedWard: {\n        ID: e.target.value,\n        SolrID: e.target.childNodes[index].dataset.url,\n        Title: e.nativeEvent.target[index].text\n      }\n    });\n  };\n\n  const handleChangeCardNumber = e => {\n    setCardNumber(e.target.value);\n    save({\n      cardNumber: e.target.value\n    });\n  };\n\n  const handleChangeExpiryDate = e => {\n    console.log(e.target.value);\n    setExpiryDate(e.target.value);\n    save({\n      expiryDate: e.target.value\n    });\n  };\n\n  const handleChangeCVC = e => {\n    setCvc(e.target.value);\n    save({\n      cvc: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    mobileView: mobileView,\n    tabletView: tabletView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }\n  }, error && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 19\n    }\n  }, error), /*#__PURE__*/React.createElement(FormInline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"first_name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Required, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 15\n    }\n  }, \"H\\u1ECD*\")), /*#__PURE__*/React.createElement(Input, {\n    name: \"first_name\",\n    id: \"first_name\",\n    value: firstName,\n    onChange: e => {\n      save({\n        firstName: e.target.value\n      });\n      setFirstName(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"last_name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Required, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 15\n    }\n  }, \"T\\xEAn*\")), /*#__PURE__*/React.createElement(Input, {\n    name: \"last_name\",\n    id: \"last_name\",\n    value: lastName,\n    onChange: e => {\n      save({\n        lastName: e.target.value\n      });\n      setLastName(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 11\n    }\n  }, \"Th\\xE0nh ph\\u1ED1\"), /*#__PURE__*/React.createElement(Select, {\n    valie: selectedCity.ID,\n    onChange: handleChangeCity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 11\n    }\n  }, listCities.map(city => /*#__PURE__*/React.createElement(Option, {\n    key: city.ID,\n    value: city.ID,\n    \"data-url\": city.SolrID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 15\n    }\n  }, city.Title)))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 11\n    }\n  }, \"Qu\\u1EADn/Huy\\u1EC7n\"), /*#__PURE__*/React.createElement(Select, {\n    value: selectedDist.ID,\n    onChange: handleChangeDistrict,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 11\n    }\n  }, listDistricts.map(district => /*#__PURE__*/React.createElement(Option, {\n    key: district.ID,\n    value: district.ID,\n    \"data-url\": district.SolrID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 15\n    }\n  }, district.Title)))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 11\n    }\n  }, \"Ph\\u01B0\\u1EDDng/X\\xE3\"), /*#__PURE__*/React.createElement(Select, {\n    value: selectedWard.ID,\n    onChange: handleChangeWard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 11\n    }\n  }, listWards.map(ward => /*#__PURE__*/React.createElement(Option, {\n    key: ward.ID,\n    value: ward.ID,\n    \"data-url\": ward.SolrID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 15\n    }\n  }, ward.Title)))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Required, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 13\n    }\n  }, \"\\u0110\\u01B0\\u1EDDng, s\\u1ED1 nh\\xE0\")), /*#__PURE__*/React.createElement(Input, {\n    id: \"address\",\n    name: \"apartment\",\n    value: address,\n    onChange: e => {\n      save({\n        address: e.target.value\n      });\n      setAddress(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(FormInline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"phone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Required, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 15\n    }\n  }, \"S\\u1ED1 \\u0111i\\u1EC7n tho\\u1EA1i*\")), /*#__PURE__*/React.createElement(Input, {\n    name: \"phone\",\n    id: \"phone\",\n    value: phone,\n    onChange: e => {\n      save({\n        phone: e.target.value\n      });\n      setPhone(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Required, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 15\n    }\n  }, \"Email*\")), /*#__PURE__*/React.createElement(Input, {\n    id: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: e => {\n      save({\n        email: e.target.value || email\n      });\n      setEmail(e.target.value);\n    },\n    disabled: disabledEmail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Editable, {\n    onClick: () => setDisabledEmail(!disabledEmail),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FiEdit, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(PaymentInputsWrapper, Object.assign({}, wrapperProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"svg\", Object.assign({}, getCardImageProps({\n    images\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getCardNumberProps({\n    onChange: handleChangeCardNumber\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getExpiryDateProps({\n    onChange: handleChangeExpiryDate\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getCVCProps({\n    onChange: handleChangeCVC\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 11\n    }\n  })))));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  user: selectCurrentUser,\n  register: selectRegisterForm\n});\n\nconst mapDispatchToProps = dispatch => ({\n  save: obj => dispatch(saveRegisterForm(obj))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterForm);","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Seller/register-form/register-form.component.jsx"],"names":["React","useState","useEffect","useContext","useRef","Form","FormInline","FormGroup","Label","Input","Required","Select","Option","Editable","AppContext","connect","createStructuredSelector","selectCurrentUser","PaymentInputsWrapper","usePaymentInputs","images","getListCities","getListDistricts","getListWards","selectRegisterForm","FiEdit","saveRegisterForm","RegisterForm","user","register","setDisabledNext","save","scroll","address","cardNumber","cvc","disabledEmail","expiryDate","firstName","lastName","phone","selectedCity","selectedDist","selectedWard","wrapperProps","getCardImageProps","getCardNumberProps","getExpiryDateProps","getCVCProps","email","mobileView","setMobileView","window","innerWidth","error","setError","tabletView","setTabletView","formRef","scrollTo","top","behavior","width","_mounted","then","listCities","setListCites","ID","Title","status","catch","err","handleChangeCity","e","index","nativeEvent","target","selectedIndex","setSelectedCity","value","SolrID","childNodes","dataset","url","text","setSelectedDist","setSelectedWard","setListWards","data","setListDistricts","handleChangeDistrict","selectedDistrict","handleChangeWard","handleChangeCardNumber","setCardNumber","handleChangeExpiryDate","console","log","setExpiryDate","handleChangeCVC","setCvc","color","setFirstName","setLastName","map","city","listDistricts","district","listWards","ward","setAddress","setPhone","setEmail","setDisabledEmail","onChange","mapStateToProps","mapDispatchToProps","dispatch","obj"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,SACEC,IADF,EAEEC,UAFF,EAGEC,SAHF,EAIEC,KAJF,EAKEC,KALF,EAMEC,QANF,EAOEC,MAPF,EAQEC,MARF,EASEC,QATF,QAUO,wBAVP;AAWA,OAAOC,UAAP,MAAuB,uCAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,iBAAT,QAAkC,oCAAlC;AACA,SAASC,oBAAT,EAA+BC,gBAA/B,QAAuD,sBAAvD;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,SACEC,aADF,EAEEC,gBAFF,EAGEC,YAHF,QAIO,2BAJP;AAKA,SAASC,kBAAT,QAAmC,wCAAnC;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,gBAAT,QAAiC,sCAAjC;;AACA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA,eAAlB;AAAmCC,EAAAA,IAAnC;AAAyCC,EAAAA;AAAzC,CAAD,KAAuD;AAC1E,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,UAAV;AAAsBC,IAAAA,GAAtB;AAA2BC,IAAAA,aAA3B;AAA0CC,IAAAA,UAA1C;AAAsDC,IAAAA,SAAtD;AAAiEC,IAAAA,QAAjE;AAA2EC,IAAAA,KAA3E;AAAkFC,IAAAA,YAAlF;AAA+FC,IAAAA,YAA/F;AAA6GC,IAAAA;AAA7G,MAA6Hd,QAAnI;AACA,QAAM;AACJe,IAAAA,YADI;AAEJC,IAAAA,iBAFI;AAGJC,IAAAA,kBAHI;AAIJC,IAAAA,kBAJI;AAKJC,IAAAA;AALI,MAMF7B,gBAAgB,EANpB;AAOAjB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAG0B,IAAH,EAAQ;AACNG,MAAAA,IAAI,CAAC;AAACkB,QAAAA,KAAK,EAAGrB,IAAI,CAACqB;AAAd,OAAD,CAAJ;AACD;AACF,GAJQ,EAIN,CAACrB,IAAD,CAJM,CAAT,CAT0E,CAc1E;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAM,CAACsB,UAAD,EAAaC,aAAb,IAA8BlD,QAAQ,CAACmD,MAAM,CAACC,UAAP,GAAoB,GAArB,CAA5C,CA1B0E,CA2B1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBtD,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACuD,UAAD,EAAaC,aAAb,IAA8BxD,QAAQ,CAC1CmD,MAAM,CAACC,UAAP,GAAoB,GAApB,IAA2BD,MAAM,CAACC,UAAP,IAAqB,GADN,CAA5C;AAGA,QAAMK,OAAO,GAAGtD,MAAM,CAAC,IAAD,CAAtB;AACAF,EAAAA,SAAS,CAAC,MAAM;AACdkD,IAAAA,MAAM,CAACO,QAAP,CAAgB;AACdC,MAAAA,GAAG,EAAG5B,MADQ;AAEd6B,MAAAA,QAAQ,EAAG;AAFG,KAAhB;AAID,GALQ,EAKN,CAAC7B,MAAD,CALM,CAAT;AAMA,QAAM8B,KAAK,GAAG3D,UAAU,CAACW,UAAD,CAAxB;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI4D,KAAK,GAAG,GAAZ,EAAiB;AACfX,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD,KAFD,MAEO;AACLA,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD;;AACD,QAAIW,KAAK,GAAG,GAAR,IAAeA,KAAK,IAAI,GAA5B,EAAiC;AAC/BL,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD,KAFD,MAEO;AACLA,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD;AACF,GAXQ,EAWN,CAACK,KAAD,CAXM,CAAT;AAaA5D,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI6D,QAAQ,GAAG,IAAf;AACA1C,IAAAA,aAAa,GACV2C,IADH,CACSC,UAAD,IAAgB;AACpB,UAAIF,QAAJ,EAAc;AACZG,QAAAA,YAAY,CAAC,CACX;AAAEC,UAAAA,EAAE,EAAE,EAAN;AAAUC,UAAAA,KAAK,EAAE,gBAAjB;AAAmCC,UAAAA,MAAM,EAAE;AAA3C,SADW,EAEX,GAAGJ,UAFQ,CAAD,CAAZ;AAID;AACF,KARH,EASGK,KATH,CASUC,GAAD,IAAS;AACd,UAAIR,QAAJ,EAAc;AACZR,QAAAA,QAAQ,CAACgB,GAAD,CAAR;AACD;AACF,KAbH;AAcA,WAAO,MAAOR,QAAQ,GAAG,KAAzB;AACD,GAjBQ,EAiBN,CAAC1C,aAAD,CAjBM,CAAT;AAmBAnB,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA4B,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GAnBQ,EAmBN,CACDQ,SADC,EAEDC,QAFC,EAGDE,YAHC,EAIDC,YAJC,EAKDC,YALC,EAMDV,OANC,EAODO,KAPC,EAQDS,KARC,EASDf,UATC,EAUDG,UAVC,EAWDF,GAXC,CAnBM,CAAT;;AAiCA,QAAMqC,gBAAgB,GAAIC,CAAD,IAAO;AAC9B,UAAMC,KAAK,GAAGD,CAAC,CAACE,WAAF,CAAcC,MAAd,CAAqBC,aAAnC;AACAC,IAAAA,eAAe,CAAC;AACdX,MAAAA,EAAE,EAAEM,CAAC,CAACG,MAAF,CAASG,KADC;AAEdC,MAAAA,MAAM,EAAEP,CAAC,CAACG,MAAF,CAASK,UAAT,CAAoBP,KAApB,EAA2BQ,OAA3B,CAAmCC,GAF7B;AAGdf,MAAAA,KAAK,EAAEK,CAAC,CAACE,WAAF,CAAcC,MAAd,CAAqBF,KAArB,EAA4BU;AAHrB,KAAD,CAAf;AAKArD,IAAAA,IAAI,CAAC;AACHU,MAAAA,YAAY,EAAE;AACZ0B,QAAAA,EAAE,EAAEM,CAAC,CAACG,MAAF,CAASG,KADD;AAEZC,QAAAA,MAAM,EAAEP,CAAC,CAACG,MAAF,CAASK,UAAT,CAAoBP,KAApB,EAA2BQ,OAA3B,CAAmCC,GAF/B;AAGZf,QAAAA,KAAK,EAAEK,CAAC,CAACE,WAAF,CAAcC,MAAd,CAAqBF,KAArB,EAA4BU;AAHvB;AADX,KAAD,CAAJ;AAOAC,IAAAA,eAAe,CAAC;AACdlB,MAAAA,EAAE,EAAE,EADU;AAEda,MAAAA,MAAM,EAAC,EAFO;AAGdZ,MAAAA,KAAK,EAAE;AAHO,KAAD,CAAf;AAKAkB,IAAAA,eAAe,CAAC;AACdnB,MAAAA,EAAE,EAAE,EADU;AAEda,MAAAA,MAAM,EAAC,EAFO;AAGdZ,MAAAA,KAAK,EAAE;AAHO,KAAD,CAAf;AAKAmB,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAjE,IAAAA,gBAAgB,CAACmD,CAAC,CAACG,MAAF,CAASG,KAAV,CAAhB,CACGf,IADH,CACSwB,IAAD,IAAU;AACdC,MAAAA,gBAAgB,CAAC,CAAC;AAAEtB,QAAAA,EAAE,EAAE,EAAN;AAAUC,QAAAA,KAAK,EAAE,iBAAjB;AAAoCC,QAAAA,MAAM,EAAE;AAA5C,OAAD,EAA2D,GAAGmB,IAA9D,CAAD,CAAhB;AACD,KAHH,EAIGlB,KAJH,CAIUC,GAAD,IAAS;AACdhB,MAAAA,QAAQ,CAACgB,GAAD,CAAR;AACD,KANH;AAOD,GAhCD;;AAkCA,QAAMmB,oBAAoB,GAAIjB,CAAD,IAAO;AAClC,UAAMC,KAAK,GAAGD,CAAC,CAACE,WAAF,CAAcC,MAAd,CAAqBC,aAAnC;AACAQ,IAAAA,eAAe,CAAC;AACdM,MAAAA,gBAAgB,EAAE;AAChBxB,QAAAA,EAAE,EAAEM,CAAC,CAACG,MAAF,CAASG,KADG;AAEhBC,QAAAA,MAAM,EAAEP,CAAC,CAACG,MAAF,CAASK,UAAT,CAAoBP,KAApB,EAA2BQ,OAA3B,CAAmCC,GAF3B;AAGhBf,QAAAA,KAAK,EAAEK,CAAC,CAACE,WAAF,CAAcC,MAAd,CAAqBF,KAArB,EAA4BU;AAHnB;AADJ,KAAD,CAAf;AAOAE,IAAAA,eAAe,CAAC;AACdnB,MAAAA,EAAE,EAAE,EADU;AAEda,MAAAA,MAAM,EAAC,EAFO;AAGdZ,MAAAA,KAAK,EAAE;AAHO,KAAD,CAAf;AAKArC,IAAAA,IAAI,CAAC;AACHW,MAAAA,YAAY,EAAE;AACZyB,QAAAA,EAAE,EAAEM,CAAC,CAACG,MAAF,CAASG,KADD;AAEZC,QAAAA,MAAM,EAAEP,CAAC,CAACG,MAAF,CAASK,UAAT,CAAoBP,KAApB,EAA2BQ,OAA3B,CAAmCC,GAF/B;AAGZf,QAAAA,KAAK,EAAEK,CAAC,CAACE,WAAF,CAAcC,MAAd,CAAqBF,KAArB,EAA4BU;AAHvB;AADX,KAAD,CAAJ;AAOA7D,IAAAA,YAAY,CAACkD,CAAC,CAACG,MAAF,CAASG,KAAV,CAAZ,CACGf,IADH,CACSwB,IAAD,IAAUD,YAAY,CAAC,CAAC;AAAEpB,MAAAA,EAAE,EAAE,EAAN;AAAUC,MAAAA,KAAK,EAAE,iBAAjB;AAAoCC,MAAAA,MAAM,EAAE;AAA5C,KAAD,EAA2D,GAAGmB,IAA9D,CAAD,CAD9B,EAEGlB,KAFH,CAEUC,GAAD,IAAShB,QAAQ,CAACgB,GAAD,CAF1B;AAGD,GAxBD;;AAyBA,QAAMqB,gBAAgB,GAAInB,CAAD,IAAO;AAC9B,UAAMC,KAAK,GAAGD,CAAC,CAACE,WAAF,CAAcC,MAAd,CAAqBC,aAAnC;AACAS,IAAAA,eAAe,CAAC;AACdnB,MAAAA,EAAE,EAAEM,CAAC,CAACG,MAAF,CAASG,KADC;AAEdC,MAAAA,MAAM,EAAEP,CAAC,CAACG,MAAF,CAASK,UAAT,CAAoBP,KAApB,EAA2BQ,OAA3B,CAAmCC,GAF7B;AAGdf,MAAAA,KAAK,EAAEK,CAAC,CAACE,WAAF,CAAcC,MAAd,CAAqBF,KAArB,EAA4BU;AAHrB,KAAD,CAAf;AAKArD,IAAAA,IAAI,CAAC;AACHY,MAAAA,YAAY,EAAE;AACZwB,QAAAA,EAAE,EAAEM,CAAC,CAACG,MAAF,CAASG,KADD;AAEZC,QAAAA,MAAM,EAAEP,CAAC,CAACG,MAAF,CAASK,UAAT,CAAoBP,KAApB,EAA2BQ,OAA3B,CAAmCC,GAF/B;AAGZf,QAAAA,KAAK,EAAEK,CAAC,CAACE,WAAF,CAAcC,MAAd,CAAqBF,KAArB,EAA4BU;AAHvB;AADX,KAAD,CAAJ;AAOD,GAdD;;AAgBA,QAAMS,sBAAsB,GAAIpB,CAAD,IAAO;AACpCqB,IAAAA,aAAa,CAACrB,CAAC,CAACG,MAAF,CAASG,KAAV,CAAb;AACAhD,IAAAA,IAAI,CAAC;AAACG,MAAAA,UAAU,EAAGuC,CAAC,CAACG,MAAF,CAASG;AAAvB,KAAD,CAAJ;AACD,GAHD;;AAIA,QAAMgB,sBAAsB,GAAItB,CAAD,IAAO;AACpCuB,IAAAA,OAAO,CAACC,GAAR,CAAYxB,CAAC,CAACG,MAAF,CAASG,KAArB;AACAmB,IAAAA,aAAa,CAACzB,CAAC,CAACG,MAAF,CAASG,KAAV,CAAb;AACAhD,IAAAA,IAAI,CAAC;AAACM,MAAAA,UAAU,EAAGoC,CAAC,CAACG,MAAF,CAASG;AAAvB,KAAD,CAAJ;AACD,GAJD;;AAKA,QAAMoB,eAAe,GAAI1B,CAAD,IAAO;AAC7B2B,IAAAA,MAAM,CAAC3B,CAAC,CAACG,MAAF,CAASG,KAAV,CAAN;AACAhD,IAAAA,IAAI,CAAC;AAACI,MAAAA,GAAG,EAAGsC,CAAC,CAACG,MAAF,CAASG;AAAhB,KAAD,CAAJ;AACD,GAHD;;AAIA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,UAAU,EAAE7B,UAAlB;AAA8B,IAAA,UAAU,EAAEM,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,iBAAI;AAAK,IAAA,KAAK,EAAE;AAAE+C,MAAAA,KAAK,EAAE;AAAT,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+B/C,KAA/B,CADZ,eAEE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADF,eAIE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,YADP;AAEE,IAAA,EAAE,EAAC,YAFL;AAGE,IAAA,KAAK,EAAEhB,SAHT;AAIE,IAAA,QAAQ,EAAGmC,CAAD,IAAO;AACf1C,MAAAA,IAAI,CAAC;AAACO,QAAAA,SAAS,EAAGmC,CAAC,CAACG,MAAF,CAASG;AAAtB,OAAD,CAAJ;AACAuB,MAAAA,YAAY,CAAC7B,CAAC,CAACG,MAAF,CAASG,KAAV,CAAZ;AACD,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,eAeE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,eAIE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,EAAE,EAAC,WAFL;AAGE,IAAA,KAAK,EAAExC,QAHT;AAIE,IAAA,QAAQ,EAAGkC,CAAD,IAAO;AACf1C,MAAAA,IAAI,CAAC;AAAEQ,QAAAA,QAAQ,EAAGkC,CAAC,CAACG,MAAF,CAASG;AAAtB,OAAD,CAAJ;AACAwB,MAAAA,WAAW,CAAC9B,CAAC,CAACG,MAAF,CAASG,KAAV,CAAX;AACD,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAfF,CAFF,eAgCE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEtC,YAAY,CAAC0B,EAA5B;AAAgC,IAAA,QAAQ,EAAEK,gBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,UAAU,CAACuC,GAAX,CAAgBC,IAAD,iBACd,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAEA,IAAI,CAACtC,EAAlB;AAAsB,IAAA,KAAK,EAAEsC,IAAI,CAACtC,EAAlC;AAAsC,gBAAUsC,IAAI,CAACzB,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGyB,IAAI,CAACrC,KADR,CADD,CADH,CAFF,CAhCF,eA0CE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE1B,YAAY,CAACyB,EAA5B;AAAgC,IAAA,QAAQ,EAAEuB,oBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGgB,aAAa,CAACF,GAAd,CAAmBG,QAAD,iBACjB,oBAAC,MAAD;AACE,IAAA,GAAG,EAAEA,QAAQ,CAACxC,EADhB;AAEE,IAAA,KAAK,EAAEwC,QAAQ,CAACxC,EAFlB;AAGE,gBAAUwC,QAAQ,CAAC3B,MAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKG2B,QAAQ,CAACvC,KALZ,CADD,CADH,CAFF,CA1CF,eAwDE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,eAEE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEzB,YAAY,CAACwB,EAA5B;AAAgC,IAAA,QAAQ,EAAEyB,gBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGgB,SAAS,CAACJ,GAAV,CAAeK,IAAD,iBACb,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAEA,IAAI,CAAC1C,EAAlB;AAAsB,IAAA,KAAK,EAAE0C,IAAI,CAAC1C,EAAlC;AAAsC,gBAAU0C,IAAI,CAAC7B,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG6B,IAAI,CAACzC,KADR,CADD,CADH,CAFF,CAxDF,eAmEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADF,CADF,eAIE,oBAAC,KAAD;AACE,IAAA,EAAE,EAAC,SADL;AAEE,IAAA,IAAI,EAAC,WAFP;AAGE,IAAA,KAAK,EAAEnC,OAHT;AAIE,IAAA,QAAQ,EAAGwC,CAAD,IAAO;AACf1C,MAAAA,IAAI,CAAC;AAAEE,QAAAA,OAAO,EAAEwC,CAAC,CAACG,MAAF,CAASG;AAApB,OAAD,CAAJ;AACA+B,MAAAA,UAAU,CAACrC,CAAC,CAACG,MAAF,CAASG,KAAV,CAAV;AACD,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAnEF,eAiFE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADF,CADF,eAIE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,EAAE,EAAC,OAFL;AAGE,IAAA,KAAK,EAAEvC,KAHT;AAIE,IAAA,QAAQ,EAAGiC,CAAD,IAAO;AACf1C,MAAAA,IAAI,CAAC;AAAES,QAAAA,KAAK,EAAEiC,CAAC,CAACG,MAAF,CAASG;AAAlB,OAAD,CAAJ;AACAgC,MAAAA,QAAQ,CAACtC,CAAC,CAACG,MAAF,CAASG,KAAV,CAAR;AACD,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,eAeE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADF,eAIE,oBAAC,KAAD;AACE,IAAA,EAAE,EAAC,OADL;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,KAAK,EAAE9B,KAHT;AAIE,IAAA,QAAQ,EAAGwB,CAAD,IAAO;AACf1C,MAAAA,IAAI,CAAC;AAAEkB,QAAAA,KAAK,EAAEwB,CAAC,CAACG,MAAF,CAASG,KAAT,IAAkB9B;AAA3B,OAAD,CAAJ;AACA+D,MAAAA,QAAQ,CAACvC,CAAC,CAACG,MAAF,CAASG,KAAV,CAAR;AACD,KAPH;AAQE,IAAA,QAAQ,EAAE3C,aARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAcE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAE,MAAM6E,gBAAgB,CAAC,CAAC7E,aAAF,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAdF,CAfF,CAjFF,eAmHE,oBAAC,oBAAD,oBAA0BQ,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE,6CAASC,iBAAiB,CAAC;AAAEzB,IAAAA;AAAF,GAAD,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,eAEE,+CACM0B,kBAAkB,CAAC;AAAEoE,IAAAA,QAAQ,EAAErB;AAAZ,GAAD,CADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,eAKE,+CACM9C,kBAAkB,CAAC;AAAEmE,IAAAA,QAAQ,EAAEnB;AAAZ,GAAD,CADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KALF,eAQE,+CAAW/C,WAAW,CAAC;AAAEkE,IAAAA,QAAQ,EAAEf;AAAZ,GAAD,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KARF,CAnHF,CADF,CADF;AAkID,CApVD;;AAqVA,MAAMgB,eAAe,GAAGnG,wBAAwB,CAAC;AAC/CY,EAAAA,IAAI,EAAEX,iBADyC;AAE/CY,EAAAA,QAAQ,EAAEL;AAFqC,CAAD,CAAhD;;AAIA,MAAM4F,kBAAkB,GAAIC,QAAD,KAAe;AACxCtF,EAAAA,IAAI,EAAGuF,GAAD,IAASD,QAAQ,CAAC3F,gBAAgB,CAAC4F,GAAD,CAAjB;AADiB,CAAf,CAA3B;;AAGA,eAAevG,OAAO,CAACoG,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CzF,YAA7C,CAAf","sourcesContent":["import React, { useState, useEffect, useContext, useRef } from \"react\";\nimport {\n  Form,\n  FormInline,\n  FormGroup,\n  Label,\n  Input,\n  Required,\n  Select,\n  Option,\n  Editable,\n} from \"./register-form.styles\";\nimport AppContext from \"../../../context/app-viewport.context\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectCurrentUser } from \"../../../redux/user/user.selectors\";\nimport { PaymentInputsWrapper, usePaymentInputs } from \"react-payment-inputs\";\nimport images from \"react-payment-inputs/images\";\nimport {\n  getListCities,\n  getListDistricts,\n  getListWards,\n} from \"../../../utils/algorithms\";\nimport { selectRegisterForm } from \"../../../redux/seller/seller.selectors\";\nimport { FiEdit } from \"react-icons/fi\";\nimport { saveRegisterForm } from \"../../../redux/seller/seller.actions\";\nconst RegisterForm = ({ user, register, setDisabledNext, save, scroll }) => {\n  const {address, cardNumber, cvc, disabledEmail, expiryDate, firstName, lastName, phone ,selectedCity,selectedDist, selectedWard} = register ;\n  const {\n    wrapperProps,\n    getCardImageProps,\n    getCardNumberProps,\n    getExpiryDateProps,\n    getCVCProps,\n  } = usePaymentInputs();\n  useEffect(() => {\n    if(user){\n      save({email : user.email});\n    }\n  }, [user])\n  // const [cardNumber, setCardNumber] = useState(register.cardNumber || \"\");\n  // const [expiryDate, setExpiryDate] = useState(register.expiryDate || \"\");\n  // const [cvc, setCvc] = useState(register.cvc || \"\");\n  \n  // const [listCities, setListCites] = useState([]);\n  // const [listDistricts, setListDistricts] = useState([]);\n  // const [listWards, setListWards] = useState([]);\n  // const [firstName, setFirstName] = useState(register.firstName || \"\");\n  // const [lastName, setLastName] = useState(register.lastName || \"\");\n  // const [address, setAddress] = useState(register.address || \"\");\n  // const [phone, setPhone] = useState(register.phone || \"\");\n  // const [email, setEmail] = useState(user.email);\n  const [mobileView, setMobileView] = useState(window.innerWidth < 600);\n  // const [disabledEmail, setDisabledEmail] = useState(\n  //   register.disabledEmail || true\n  // );\n  // const [selectedCity, setSelectedCity] = useState({\n  //   ID: register.selectedCity.ID || \"\",\n  //   SolrID: register.selectedCity.SolrID || \"\",\n  //   Title: register.selectedCity.Title || \"\",\n  // });\n  // const [selectedDist, setSelectedDist] = useState({\n  //   ID: register.selectedDist.ID || \"\",\n  //   SolrID: register.selectedDist.SolrID || \"\",\n  //   Title: register.selectedDist.Title || \"\",\n  // });\n  // const [selectedWard, setSelectedWard] = useState({\n  //   ID: register.selectedWard.ID || \"\",\n  //   SolrID: register.selectedWard.SolrID || \"\",\n  //   Title: register.selectedWard.Title || \"\",\n  // });\n  const [error, setError] = useState(null);\n  const [tabletView, setTabletView] = useState(\n    window.innerWidth < 992 && window.innerWidth >= 660\n  );\n  const formRef = useRef(null);\n  useEffect(() => {\n    window.scrollTo({\n      top : scroll, \n      behavior : \"smooth\"\n    })\n  }, [scroll])\n  const width = useContext(AppContext);\n  useEffect(() => {\n    if (width < 660) {\n      setMobileView(true);\n    } else {\n      setMobileView(false);\n    }\n    if (width < 992 && width >= 660) {\n      setTabletView(true);\n    } else {\n      setTabletView(false);\n    }\n  }, [width]);\n\n  useEffect(() => {\n    let _mounted = true;\n    getListCities()\n      .then((listCities) => {\n        if (_mounted) {\n          setListCites([\n            { ID: \"\", Title: \"Chọn thành phố\", status: \"disabled\" },\n            ...listCities,\n          ]);\n        }\n      })\n      .catch((err) => {\n        if (_mounted) {\n          setError(err);\n        }\n      });\n    return () => (_mounted = false);\n  }, [getListCities]);\n\n  useEffect(() => {\n    // if (\n    //   firstName &&\n    //   lastName &&\n    //   selectedCity &&\n    //   selectedDist &&\n    //   selectedWard &&\n    //   address &&\n    //   phone &&\n    //   email &&\n    //   cardNumber &&\n    //   expiryDate &&\n    //   cvc\n    // ) {\n    //   setDisabledNext(false);\n    // } else {\n    //   setDisabledNext(true);\n    // }\n    setDisabledNext(true);\n  }, [\n    firstName,\n    lastName,\n    selectedCity,\n    selectedDist,\n    selectedWard,\n    address,\n    phone,\n    email,\n    cardNumber,\n    expiryDate,\n    cvc,\n  ]);\n\n  const handleChangeCity = (e) => {\n    const index = e.nativeEvent.target.selectedIndex;\n    setSelectedCity({\n      ID: e.target.value,\n      SolrID: e.target.childNodes[index].dataset.url,\n      Title: e.nativeEvent.target[index].text,\n    });\n    save({\n      selectedCity: {\n        ID: e.target.value,\n        SolrID: e.target.childNodes[index].dataset.url,\n        Title: e.nativeEvent.target[index].text,\n      },\n    });\n    setSelectedDist({\n      ID: \"\",\n      SolrID:\"\",\n      Title: \"\",\n    })\n    setSelectedWard({\n      ID: \"\",\n      SolrID:\"\",\n      Title: \"\",\n    })\n    setListWards([]);\n    getListDistricts(e.target.value)\n      .then((data) => {\n        setListDistricts([{ ID: \"\", Title: \"Chọn Quận Huyện\", status: \"disabled\" }, ...data]);\n      })\n      .catch((err) => {\n        setError(err);\n      });\n  };\n\n  const handleChangeDistrict = (e) => {\n    const index = e.nativeEvent.target.selectedIndex;\n    setSelectedDist({\n      selectedDistrict: {\n        ID: e.target.value,\n        SolrID: e.target.childNodes[index].dataset.url,\n        Title: e.nativeEvent.target[index].text,\n      },\n    });\n    setSelectedWard({\n      ID: \"\",\n      SolrID:\"\",\n      Title: \"\",\n    })\n    save({\n      selectedDist: {\n        ID: e.target.value,\n        SolrID: e.target.childNodes[index].dataset.url,\n        Title: e.nativeEvent.target[index].text,\n      },\n    });\n    getListWards(e.target.value)\n      .then((data) => setListWards([{ ID: \"\", Title: \"Chọn Phường, Xã\", status: \"disabled\" }, ...data] ))\n      .catch((err) => setError(err));\n  };\n  const handleChangeWard = (e) => {\n    const index = e.nativeEvent.target.selectedIndex;\n    setSelectedWard({\n      ID: e.target.value,\n      SolrID: e.target.childNodes[index].dataset.url,\n      Title: e.nativeEvent.target[index].text,\n    });\n    save({\n      selectedWard: {\n        ID: e.target.value,\n        SolrID: e.target.childNodes[index].dataset.url,\n        Title: e.nativeEvent.target[index].text,\n      },\n    });\n  };\n\n  const handleChangeCardNumber = (e) => {\n    setCardNumber(e.target.value);\n    save({cardNumber : e.target.value})\n  };\n  const handleChangeExpiryDate = (e) => {\n    console.log(e.target.value)\n    setExpiryDate(e.target.value);\n    save({expiryDate : e.target.value});\n  };\n  const handleChangeCVC = (e) => {\n    setCvc(e.target.value);\n    save({cvc : e.target.value})\n  };\n  return (\n    <React.Fragment>\n      <Form mobileView={mobileView} tabletView={tabletView}>\n        {error && <div style={{ color: \"red\" }}>{error}</div>}\n        <FormInline>\n          <FormGroup>\n            <Label htmlFor=\"first_name\">\n              <Required>Họ*</Required>\n            </Label>\n            <Input\n              name=\"first_name\"\n              id=\"first_name\"\n              value={firstName}\n              onChange={(e) => {\n                save({firstName : e.target.value});\n                setFirstName(e.target.value);\n              }}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label htmlFor=\"last_name\">\n              <Required>Tên*</Required>\n            </Label>\n            <Input\n              name=\"last_name\"\n              id=\"last_name\"\n              value={lastName}\n              onChange={(e) => {\n                save({ lastName : e.target.value});\n                setLastName(e.target.value);\n              }}\n            />\n          </FormGroup>\n        </FormInline>\n        <FormGroup>\n          <Label>Thành phố</Label>\n          <Select valie={selectedCity.ID} onChange={handleChangeCity}>\n            {listCities.map((city) => (\n              <Option key={city.ID} value={city.ID} data-url={city.SolrID}>\n                {city.Title}\n              </Option>\n            ))}\n          </Select>\n        </FormGroup>\n        <FormGroup>\n          <Label>Quận/Huyện</Label>\n          <Select value={selectedDist.ID} onChange={handleChangeDistrict}>\n            {listDistricts.map((district) => (\n              <Option\n                key={district.ID}\n                value={district.ID}\n                data-url={district.SolrID}\n              >\n                {district.Title}\n              </Option>\n            ))}\n          </Select>\n        </FormGroup>\n        <FormGroup>\n          <Label>Phường/Xã</Label>\n          <Select value={selectedWard.ID} onChange={handleChangeWard}>\n            {listWards.map((ward) => (\n              <Option key={ward.ID} value={ward.ID} data-url={ward.SolrID}>\n                {ward.Title}\n              </Option>\n            ))}\n          </Select>\n        </FormGroup>\n\n        <FormGroup>\n          <Label htmlFor=\"address\">\n            <Required>Đường, số nhà</Required>\n          </Label>\n          <Input\n            id=\"address\"\n            name=\"apartment\"\n            value={address}\n            onChange={(e) => {\n              save({ address: e.target.value });\n              setAddress(e.target.value);\n            }}\n          />\n        </FormGroup>\n        <FormInline>\n          <FormGroup>\n            <Label htmlFor=\"phone\">\n              <Required>Số điện thoại*</Required>\n            </Label>\n            <Input\n              name=\"phone\"\n              id=\"phone\"\n              value={phone}\n              onChange={(e) => {\n                save({ phone: e.target.value });\n                setPhone(e.target.value);\n              }}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label htmlFor=\"email\">\n              <Required>Email*</Required>\n            </Label>\n            <Input\n              id=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={(e) => {\n                save({ email: e.target.value || email});\n                setEmail(e.target.value);\n              }}\n              disabled={disabledEmail}\n            />\n            <Editable onClick={() => setDisabledEmail(!disabledEmail)}>\n              <FiEdit />\n            </Editable>\n          </FormGroup>\n        </FormInline>\n        <PaymentInputsWrapper {...wrapperProps}>\n          <svg {...getCardImageProps({ images })} />\n          <input\n            {...getCardNumberProps({ onChange: handleChangeCardNumber })}\n          />\n          <input\n            {...getExpiryDateProps({ onChange: handleChangeExpiryDate })}\n          />\n          <input {...getCVCProps({ onChange: handleChangeCVC })} />\n        </PaymentInputsWrapper>\n      </Form>\n    </React.Fragment>\n  );\n};\nconst mapStateToProps = createStructuredSelector({\n  user: selectCurrentUser,\n  register: selectRegisterForm,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  save: (obj) => dispatch(saveRegisterForm(obj)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterForm);\n"]},"metadata":{},"sourceType":"module"}