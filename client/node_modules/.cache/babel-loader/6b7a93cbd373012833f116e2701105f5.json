{"ast":null,"code":"import orderedActionTypes from \"./ordered.styles\";\nconst INITIAL_STATE = {\n  orderedList: [],\n  loading: false,\n  error: undefined\n};\n\nconst orderedReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case orderedActionTypes.FETCH_ORDERED_LIST_START:\n      return { ...state,\n        loading: true\n      };\n\n    case orderedActionTypes.FETCH_ORDERED_LIST_SUCCESS:\n      return { ...state,\n        loading: false,\n        orderedList: action.payload,\n        error: undefined\n      };\n\n    case orderedActionTypes.FETCH_ORDERED_LIST_FAIL:\n      return { ...state,\n        loading: false,\n        orderedList: [],\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default orderedReducer;","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/redux/ordered/ordered.reducer.js"],"names":["orderedActionTypes","INITIAL_STATE","orderedList","loading","error","undefined","orderedReducer","state","action","type","FETCH_ORDERED_LIST_START","FETCH_ORDERED_LIST_SUCCESS","payload","FETCH_ORDERED_LIST_FAIL"],"mappings":"AAAA,OAAOA,kBAAP,MAA+B,kBAA/B;AACA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,WAAW,EAAE,EADO;AAEpBC,EAAAA,OAAO,EAAE,KAFW;AAGpBC,EAAAA,KAAK,EAAEC;AAHa,CAAtB;;AAMA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGN,aAAT,EAAwBO,MAAxB,KAAmC;AACxD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,kBAAkB,CAACU,wBAAxB;AACE,aAAO,EACL,GAAGH,KADE;AAELJ,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKH,kBAAkB,CAACW,0BAAxB;AACE,aAAO,EACL,GAAGJ,KADE;AAELJ,QAAAA,OAAO,EAAE,KAFJ;AAGLD,QAAAA,WAAW,EAAEM,MAAM,CAACI,OAHf;AAILR,QAAAA,KAAK,EAAEC;AAJF,OAAP;;AAMF,SAAKL,kBAAkB,CAACa,uBAAxB;AACE,aAAO,EACL,GAAGN,KADE;AAELJ,QAAAA,OAAO,EAAE,KAFJ;AAGLD,QAAAA,WAAW,EAAE,EAHR;AAILE,QAAAA,KAAK,EAAEI,MAAM,CAACI;AAJT,OAAP;;AAMF;AACE,aAAOL,KAAP;AArBJ;AAuBD,CAxBD;;AA2BA,eAAeD,cAAf","sourcesContent":["import orderedActionTypes from \"./ordered.styles\";\nconst INITIAL_STATE = {\n  orderedList: [],\n  loading: false,\n  error: undefined,\n};\n\nconst orderedReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case orderedActionTypes.FETCH_ORDERED_LIST_START:\n      return {\n        ...state,\n        loading: true,\n      };\n    case orderedActionTypes.FETCH_ORDERED_LIST_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        orderedList: action.payload,\n        error: undefined,\n      };\n    case orderedActionTypes.FETCH_ORDERED_LIST_FAIL:\n      return {\n        ...state,\n        loading: false,\n        orderedList: [],\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\n\nexport default orderedReducer;"]},"metadata":{},"sourceType":"module"}