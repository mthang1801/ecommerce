{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Product-Detail/comment-reviews/comment-reviews.component.jsx\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { getCommentReviewsByProductId } from \"../../../utils/connectDB\";\nimport Spinner from \"../../UI/spinner/spinner.component\";\nimport { CommentReviewsWrapper, TextArea, CommentsGet, ReadMore, ButtonReadMore, CommentsPost } from \"./comment-reviews.styles\";\nimport CommentReviewsItem from \"../comment-reviews-item/comment-reviews-item.component\";\nimport Button from \"@material-ui/core/Button\";\nimport { connect } from \"react-redux\";\nimport { selectCommentsLoading, selectComments, selectCommentReviewsError, selectNumberOfComments } from \"../../../redux/product-comment-review/product-comment-review.selectors\";\nimport { selectProductDetailData } from \"../../../redux/product-detail/product-detail.selectors\";\nimport { createStructuredSelector } from \"reselect\";\nimport { fetchProductCommentReview } from \"../../../redux/product-comment-review/product-comment-review.actions\";\nimport PopupLoader from \"../../UI/popup-loader/popup-loader.component\";\n\nconst CommentReviews = ({\n  product,\n  show,\n  productId,\n  comments,\n  loading,\n  error,\n  fetchProductCommentReview,\n  readMore,\n  setReadMore,\n  setTaskHeight,\n  numberOfComments\n}) => {\n  const commentsRef = useRef(null);\n  const [showReadMore, setShowReadMore] = useState(false);\n  const [commentItemHeight, setCommentItemHeight] = useState(0);\n  const [readMoreComments, setReadMoreComments] = useState(false);\n  useEffect(() => {\n    console.log(numberOfComments);\n    console.log(comments.length);\n\n    if (numberOfComments > comments.length) {\n      setReadMoreComments(true);\n    } else {\n      setReadMoreComments(false);\n    }\n  }, [numberOfComments, comments]);\n  useEffect(() => {\n    let _mounted = true;\n\n    if (productId) {\n      fetchProductCommentReview(productId);\n    }\n\n    if (commentsRef.current.scrollHeight > commentsRef.current.clientHeight) {\n      setShowReadMore(true);\n      setTaskHeight(commentsRef.current.scrollHeight + commentItemHeight);\n    }\n\n    return () => {\n      _mounted = false;\n    };\n  }, [productId]);\n  return /*#__PURE__*/React.createElement(CommentReviewsWrapper, {\n    ref: commentsRef,\n    show: show,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Spinner, {\n    loadChildComponent: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CommentsPost, {\n    show: show,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    placeholder: \"\\u0110\\u1EC3 l\\u1EA1i b\\xECnh lu\\u1EADn c\\u1EE7a b\\u1EA1n t\\u1EA1i \\u0111\\xE2y\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"G\\u1EEDi\")), /*#__PURE__*/React.createElement(CommentsGet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, comments.length ? comments.map(comment => {\n    return /*#__PURE__*/React.createElement(CommentReviewsItem, {\n      key: comment._id,\n      comment: comment,\n      product: product,\n      setCommentItemHeight: value => setCommentItemHeight(value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    });\n  }) : null), readMoreComments ? /*#__PURE__*/React.createElement(ButtonReadMore, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 31\n    }\n  }, \"Xem th\\xEAm b\\xECnh lu\\u1EADn\") : null), showReadMore ? /*#__PURE__*/React.createElement(ReadMore, {\n    onClick: () => setReadMore(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, !readMore ? \"Xem thêm\" : \"Thu gọn\") : null);\n};\n\nconst mapStateToProps = createStructuredSelector({\n  comments: selectComments,\n  loading: selectCommentsLoading,\n  error: selectCommentReviewsError,\n  product: selectProductDetailData,\n  numberOfComments: selectNumberOfComments\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchProductCommentReview: productId => dispatch(fetchProductCommentReview(productId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentReviews);","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Product-Detail/comment-reviews/comment-reviews.component.jsx"],"names":["React","useEffect","useState","useRef","getCommentReviewsByProductId","Spinner","CommentReviewsWrapper","TextArea","CommentsGet","ReadMore","ButtonReadMore","CommentsPost","CommentReviewsItem","Button","connect","selectCommentsLoading","selectComments","selectCommentReviewsError","selectNumberOfComments","selectProductDetailData","createStructuredSelector","fetchProductCommentReview","PopupLoader","CommentReviews","product","show","productId","comments","loading","error","readMore","setReadMore","setTaskHeight","numberOfComments","commentsRef","showReadMore","setShowReadMore","commentItemHeight","setCommentItemHeight","readMoreComments","setReadMoreComments","console","log","length","_mounted","current","scrollHeight","clientHeight","map","comment","_id","value","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { getCommentReviewsByProductId } from \"../../../utils/connectDB\";\nimport Spinner from \"../../UI/spinner/spinner.component\";\nimport {\n  CommentReviewsWrapper,\n  TextArea,\n  CommentsGet,\n  ReadMore,\n  ButtonReadMore, \n  CommentsPost,\n} from \"./comment-reviews.styles\";\nimport CommentReviewsItem from \"../comment-reviews-item/comment-reviews-item.component\";\nimport Button from \"@material-ui/core/Button\";\nimport { connect } from \"react-redux\";\nimport {\n  selectCommentsLoading,\n  selectComments,\n  selectCommentReviewsError,\n  selectNumberOfComments,\n} from \"../../../redux/product-comment-review/product-comment-review.selectors\";\nimport { selectProductDetailData } from \"../../../redux/product-detail/product-detail.selectors\";\nimport { createStructuredSelector } from \"reselect\";\nimport { fetchProductCommentReview } from \"../../../redux/product-comment-review/product-comment-review.actions\";\nimport PopupLoader from \"../../UI/popup-loader/popup-loader.component\"\nconst CommentReviews = ({\n  product,\n  show,\n  productId,\n  comments,\n  loading,\n  error,\n  fetchProductCommentReview,\n  readMore,\n  setReadMore,\n  setTaskHeight,\n  numberOfComments,\n}) => {  \n  const commentsRef = useRef(null);\n  const [showReadMore, setShowReadMore] = useState(false);\n  const [commentItemHeight, setCommentItemHeight] = useState(0);\n  const [readMoreComments, setReadMoreComments] = useState(false);\n  useEffect(() => {\n    console.log(numberOfComments);\n    console.log(comments.length)    \n    if(numberOfComments > comments.length){\n      setReadMoreComments(true);\n    }else{\n      setReadMoreComments(false);\n    }\n  } , [numberOfComments, comments])  \n  useEffect(() => {\n    let _mounted = true;\n    if (productId) {\n      fetchProductCommentReview(productId);\n    }\n    if (commentsRef.current.scrollHeight > commentsRef.current.clientHeight) {\n      setShowReadMore(true);\n      setTaskHeight(commentsRef.current.scrollHeight + commentItemHeight);\n    }\n    return () => {\n      _mounted = false;\n    };\n  }, [productId]);\n\n  return (\n    <CommentReviewsWrapper ref={commentsRef} show={show}>\n      {loading ? (\n        <Spinner loadChildComponent />\n      ) : (\n        <React.Fragment>                 \n          <CommentsPost show={show}>\n            <TextArea placeholder=\"Để lại bình luận của bạn tại đây\" />\n            <Button color=\"primary\" variant=\"contained\" size=\"small\">\n              Gửi\n            </Button>\n          </CommentsPost>\n          <CommentsGet>\n            {comments.length\n              ? comments.map((comment) => {\n                  return (\n                    <CommentReviewsItem\n                      key={comment._id}\n                      comment={comment}\n                      product={product}\n                      setCommentItemHeight={(value) =>\n                        setCommentItemHeight(value)\n                      }\n                    />\n                  );\n                })\n              : null}\n          </CommentsGet>\n          {readMoreComments ? <ButtonReadMore>Xem thêm bình luận</ButtonReadMore> : null}\n        </React.Fragment>\n      )}\n      {showReadMore ? (\n        <ReadMore onClick={() => setReadMore(true)}>\n          {!readMore ? \"Xem thêm\" : \"Thu gọn\"}\n        </ReadMore>\n      ) : null}\n    </CommentReviewsWrapper>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  comments: selectComments,\n  loading: selectCommentsLoading,\n  error: selectCommentReviewsError,\n  product: selectProductDetailData,\n  numberOfComments: selectNumberOfComments,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  fetchProductCommentReview: (productId) =>\n    dispatch(fetchProductCommentReview(productId)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentReviews);\n"]},"metadata":{},"sourceType":"module"}