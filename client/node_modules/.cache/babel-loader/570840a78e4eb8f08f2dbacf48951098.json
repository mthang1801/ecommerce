{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/src/components/products-popup/products-popup.component.jsx\";\nimport React, { useState } from \"react\";\nimport { ProductsPopupContainer } from \"./products-popup.styles\";\nimport { getProductsListByCategoryId } from \"../../utils/algorithms\";\nimport ProductsPopupItem from \"../products-popup-item/products-popup-item.component\";\nconst ProductsPopup = React.forwardRef(({\n  setIsPopUpHover,\n  offsetWidth,\n  categoryId\n}, ref) => {\n  const [touched, setTouched] = useState(false);\n  console.log(touched);\n  let productsDict = getProductsListByCategoryId(categoryId);\n\n  const handleMouseMove = e => {\n    setTouched(true);\n    setIsPopUpHover(true);\n  };\n\n  const handleMouseOut = e => {\n    console.log(touched);\n\n    if (touched) {\n      setIsPopUpHover(false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(ProductsPopupContainer, {\n    offsetWidth: offsetWidth,\n    ref: ref,\n    onMouseOut: e => handleMouseOut(e),\n    onMouseMove: e => handleMouseMove(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, Object.keys(productsDict).map(productItem => /*#__PURE__*/React.createElement(ProductsPopupItem, {\n    key: productItem,\n    productLabel: productItem,\n    productList: productsDict[productItem],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  })));\n});\nexport default ProductsPopup;","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/src/components/products-popup/products-popup.component.jsx"],"names":["React","useState","ProductsPopupContainer","getProductsListByCategoryId","ProductsPopupItem","ProductsPopup","forwardRef","setIsPopUpHover","offsetWidth","categoryId","ref","touched","setTouched","console","log","productsDict","handleMouseMove","e","handleMouseOut","Object","keys","map","productItem"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,sBAAT,QAAuC,yBAAvC;AACA,SAASC,2BAAT,QAA4C,wBAA5C;AACA,OAAOC,iBAAP,MAA8B,sDAA9B;AACA,MAAMC,aAAa,GAAGL,KAAK,CAACM,UAAN,CACpB,CAAC;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA,WAAnB;AAAgCC,EAAAA;AAAhC,CAAD,EAA+CC,GAA/C,KAAuD;AACrD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,KAAD,CAAtC;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACA,MAAII,YAAY,GAAGZ,2BAA2B,CAACM,UAAD,CAA9C;;AACA,QAAMO,eAAe,GAAGC,CAAC,IAAI;AAC3BL,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAL,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GAHD;;AAIA,QAAMW,cAAc,GAAGD,CAAC,IAAI;AAC1BJ,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;;AACA,QAAGA,OAAH,EAAW;AACTJ,MAAAA,eAAe,CAAC,KAAD,CAAf;AACD;AACF,GALD;;AAMA,sBACE,oBAAC,sBAAD;AACE,IAAA,WAAW,EAAEC,WADf;AAEE,IAAA,GAAG,EAAEE,GAFP;AAGE,IAAA,UAAU,EAAGO,CAAD,IAAOC,cAAc,CAACD,CAAD,CAHnC;AAIE,IAAA,WAAW,EAAGA,CAAD,IAAOD,eAAe,CAACC,CAAD,CAJrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGE,MAAM,CAACC,IAAP,CAAYL,YAAZ,EAA0BM,GAA1B,CAA+BC,WAAD,iBAC7B,oBAAC,iBAAD;AACE,IAAA,GAAG,EAAEA,WADP;AAEE,IAAA,YAAY,EAAEA,WAFhB;AAGE,IAAA,WAAW,EAAEP,YAAY,CAACO,WAAD,CAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CANH,CADF;AAgBD,CA/BmB,CAAtB;AAkCA,eAAejB,aAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { ProductsPopupContainer } from \"./products-popup.styles\";\nimport { getProductsListByCategoryId } from \"../../utils/algorithms\";\nimport ProductsPopupItem from \"../products-popup-item/products-popup-item.component\";\nconst ProductsPopup = React.forwardRef(\n  ({ setIsPopUpHover, offsetWidth, categoryId }, ref) => {\n    const [touched, setTouched] = useState(false);\n    console.log(touched)\n    let productsDict = getProductsListByCategoryId(categoryId);\n    const handleMouseMove = e => {\n      setTouched(true);\n      setIsPopUpHover(true)    \n    }\n    const handleMouseOut = e => {\n      console.log(touched)\n      if(touched){\n        setIsPopUpHover(false)\n      }      \n    }\n    return (\n      <ProductsPopupContainer\n        offsetWidth={offsetWidth}\n        ref={ref}\n        onMouseOut={(e) => handleMouseOut(e)}\n        onMouseMove={(e) => handleMouseMove(e)}\n      >\n        {Object.keys(productsDict).map((productItem) => (\n          <ProductsPopupItem\n            key={productItem}\n            productLabel={productItem}\n            productList={productsDict[productItem]}\n          />\n        ))}\n      </ProductsPopupContainer>\n    );\n  }\n);\n\nexport default ProductsPopup;\n"]},"metadata":{},"sourceType":"module"}