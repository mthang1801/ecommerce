{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Product-Detail/comment-reviews/comment-reviews.component.jsx\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { getCommentReviewsByProductId } from \"../../../utils/connectDB\";\nimport Spinner from \"../../UI/spinner/spinner.component\";\nimport { CommentReviewsWrapper, TextArea, CommentsWrapper } from \"./comment-reviews.styles\";\nimport CommentReviewsItem from \"../comment-reviews-item/comment-reviews-item.component\";\nimport Button from \"@material-ui/core/Button\";\nimport { connect } from \"react-redux\";\nimport { selectCommentsLoading, selectComments, selectCommentReviewsError } from \"../../../redux/product-comment-review/product-comment-review.selectors\";\nimport { createStructuredSelector } from \"reselect\";\nimport { fetchProductCommentReview } from \"../../../redux/product-comment-review/product-comment-review.actions\";\n\nconst CommentReviews = ({\n  show,\n  productId,\n  comments,\n  loading,\n  error,\n  fetchProductCommentReview\n}) => {\n  const commentsRef = useRef(null);\n  useEffect(() => {\n    let _mounted = true;\n\n    if (productId) {\n      fetchProductCommentReview(productId);\n    }\n\n    return () => {\n      _mounted = false;\n    };\n  }, [productId]);\n  useEffect(() => {\n    if (commentsRef.current.scrollHeight > commentsRef.current.clientHeight) {\n      console.log(commentsRef.current.scrollHeight, commentsRef.current.clientHeight); // setShowReadMore(true);    \n      // setTaskHeight(contentRef.current.scrollHeight)\n    }\n  }, [comments]);\n  return /*#__PURE__*/React.createElement(CommentReviewsWrapper, {\n    ref: commentsRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Spinner, {\n    loadChildComponent: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    placeholder: \"\\u0110\\u1EC3 l\\u1EA1i b\\xECnh lu\\u1EADn c\\u1EE7a b\\u1EA1n t\\u1EA1i \\u0111\\xE2y\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, \"G\\u1EEDi\"), /*#__PURE__*/React.createElement(\"hr\", {\n    style: {\n      width: \"100%\",\n      margin: \"0.75rem 0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CommentsWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, comments.length ? comments.map(comment => {\n    return /*#__PURE__*/React.createElement(CommentReviewsItem, {\n      key: comment._id,\n      comment: comment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    });\n  }) : null)));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  comments: selectComments,\n  loading: selectCommentsLoading,\n  error: selectCommentReviewsError\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchProductCommentReview: productId => dispatch(fetchProductCommentReview(productId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentReviews);","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Product-Detail/comment-reviews/comment-reviews.component.jsx"],"names":["React","useEffect","useState","useRef","getCommentReviewsByProductId","Spinner","CommentReviewsWrapper","TextArea","CommentsWrapper","CommentReviewsItem","Button","connect","selectCommentsLoading","selectComments","selectCommentReviewsError","createStructuredSelector","fetchProductCommentReview","CommentReviews","show","productId","comments","loading","error","commentsRef","_mounted","current","scrollHeight","clientHeight","console","log","width","margin","length","map","comment","_id","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { getCommentReviewsByProductId } from \"../../../utils/connectDB\";\nimport Spinner from \"../../UI/spinner/spinner.component\";\nimport {\n  CommentReviewsWrapper,\n  TextArea,\n  CommentsWrapper,\n} from \"./comment-reviews.styles\";\nimport CommentReviewsItem from \"../comment-reviews-item/comment-reviews-item.component\";\nimport Button from \"@material-ui/core/Button\";\nimport {connect} from \"react-redux\";\nimport {selectCommentsLoading, selectComments, selectCommentReviewsError} from \"../../../redux/product-comment-review/product-comment-review.selectors\"\nimport {createStructuredSelector} from \"reselect\"\nimport {fetchProductCommentReview} from \"../../../redux/product-comment-review/product-comment-review.actions\"\nconst CommentReviews = ({ show, productId, comments, loading, error, fetchProductCommentReview }) => {    \n  const commentsRef = useRef(null);\n  useEffect(() => {\n    let _mounted = true;\n    if (productId) {\n      fetchProductCommentReview(productId)\n    }\n    return () => {\n      _mounted = false;\n    };\n  }, [productId]);\n  useEffect(() => {\n    if(commentsRef.current.scrollHeight > commentsRef.current.clientHeight ){\n      console.log(commentsRef.current.scrollHeight, commentsRef.current.clientHeight )\n      // setShowReadMore(true);    \n      // setTaskHeight(contentRef.current.scrollHeight)\n     }\n  },[comments])\n  return (\n    <CommentReviewsWrapper ref={commentsRef}>\n      {loading ? (\n        <Spinner loadChildComponent />\n      ) : (\n        <React.Fragment>\n          <TextArea placeholder=\"Để lại bình luận của bạn tại đây\" />\n          <Button color=\"primary\" variant=\"contained\" size=\"small\">\n            Gửi\n          </Button>\n          <hr style={{width:\"100%\", margin : \"0.75rem 0\"}}/>\n          <CommentsWrapper>\n            {comments.length ? comments.map((comment) => {                \n                  return (\n                    <CommentReviewsItem key={comment._id} comment={comment} />\n                  );\n                })\n               : null }\n          </CommentsWrapper>\n        </React.Fragment>\n      )}\n    </CommentReviewsWrapper>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  comments : selectComments,\n  loading : selectCommentsLoading,\n  error : selectCommentReviewsError\n})\nconst mapDispatchToProps = dispatch => ({\n  fetchProductCommentReview : (productId) => dispatch(fetchProductCommentReview(productId))\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentReviews);\n"]},"metadata":{},"sourceType":"module"}