{"ast":null,"code":"import CATEGORIES_DATA from \"../data/category\";\nimport PRODUCTS_DATA from \"../data/products\";\nimport SELLERS_DATA from \"../data/sellers\";\nexport const getLastestProducts = () => {\n  let sellers = [...SELLERS_DATA];\n  sellers.sort((a, b) => {\n    if (Date.parse(a.createdAt) > Date.parse(b.createdAt)) return -1;\n  });\n  let checkProductIsTheSame = {};\n  let j = 0;\n  let len = 6;\n  let result = [];\n\n  if (sellers.length <= 6) {\n    return sellers;\n  }\n\n  console.log(sellers.slice(0, 10));\n\n  for (let i = 0; i < len; i++) {\n    if (checkProductIsTheSame[sellers[i].productId]) {\n      sellers[i] = sellers[len + j];\n      j++;\n      i--;\n    } else {\n      checkProductIsTheSame[sellers[i].productId] = true;\n      result.push(sellers[i]);\n    }\n  }\n\n  console.log(checkProductIsTheSame);\n  return result;\n};\nexport const getProductsBestSeller = () => {\n  let sellers = [...SELLERS_DATA];\n  sellers = sellers.filter(seller => Math.ceil((Date.now() - Date.parse(seller.createdAt)) / 84600000) < 14 && seller.votes > 4).sort((a, b) => b.sold - a.sold);\n  return sellers.slice(0, 6);\n};\nexport const getProductsTopRated = () => {\n  let sellers = [...SELLERS_DATA];\n  sellers.sort((a, b) => {\n    if (a.votes > b.votes) return -1;\n  });\n  return sellers.slice(0, 9);\n};\nexport const getProductsListByCategoryId = categeryId => {\n  const categories = { ...CATEGORIES_DATA\n  };\n  const listProductsId = categories[categeryId].products;\n  const products = { ...PRODUCTS_DATA\n  };\n  let productsList = {};\n  listProductsId.length && listProductsId.forEach(productId => {\n    productsList[productId] = products[productId];\n  });\n  return productsList;\n};\nexport const getCategoryData = () => {\n  const categoryList = { ...CATEGORIES_DATA\n  };\n  return Object.keys(categoryList).map(key => categoryList[key]);\n};\nexport const getMaxPrice = () => {\n  const sellers = [...SELLERS_DATA];\n  let max = sellers[0].price;\n  sellers.forEach(seller => {\n    if (seller.price > max) {\n      max = seller.price;\n    }\n  });\n  return max;\n};\nexport const getSaleOffProducts = () => {\n  let sellers = [...SELLERS_DATA];\n  sellers = sellers.filter(seller => seller.discount > 0);\n  sellers.sort((a, b) => {\n    if (a.discount > b.discount) {\n      return -1;\n    }\n\n    return 1;\n  });\n  return sellers;\n};\nexport const getNumberOfProducts = () => {\n  let sellers = [...SELLERS_DATA];\n  return sellers.length;\n};","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/src/utils/algorithms.js"],"names":["CATEGORIES_DATA","PRODUCTS_DATA","SELLERS_DATA","getLastestProducts","sellers","sort","a","b","Date","parse","createdAt","checkProductIsTheSame","j","len","result","length","console","log","slice","i","productId","push","getProductsBestSeller","filter","seller","Math","ceil","now","votes","sold","getProductsTopRated","getProductsListByCategoryId","categeryId","categories","listProductsId","products","productsList","forEach","getCategoryData","categoryList","Object","keys","map","key","getMaxPrice","max","price","getSaleOffProducts","discount","getNumberOfProducts"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,kBAA5B;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AAEA,OAAO,MAAMC,kBAAkB,GAAG,MAAM;AACtC,MAAIC,OAAO,GAAG,CAAC,GAAGF,YAAJ,CAAd;AACAE,EAAAA,OAAO,CAACC,IAAR,CAAa,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACrB,QAAIC,IAAI,CAACC,KAAL,CAAWH,CAAC,CAACI,SAAb,IAA0BF,IAAI,CAACC,KAAL,CAAWF,CAAC,CAACG,SAAb,CAA9B,EAAuD,OAAO,CAAC,CAAR;AACxD,GAFD;AAGA,MAAIC,qBAAqB,GAAG,EAA5B;AACA,MAAIC,CAAC,GAAG,CAAR;AACA,MAAIC,GAAG,GAAG,CAAV;AACA,MAAIC,MAAM,GAAG,EAAb;;AACA,MAAIV,OAAO,CAACW,MAAR,IAAkB,CAAtB,EAAyB;AACvB,WAAOX,OAAP;AACD;;AACDY,EAAAA,OAAO,CAACC,GAAR,CAAYb,OAAO,CAACc,KAAR,CAAc,CAAd,EAAiB,EAAjB,CAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,GAApB,EAAyBM,CAAC,EAA1B,EAA8B;AAC5B,QAAIR,qBAAqB,CAACP,OAAO,CAACe,CAAD,CAAP,CAAWC,SAAZ,CAAzB,EAAiD;AAC/ChB,MAAAA,OAAO,CAACe,CAAD,CAAP,GAAaf,OAAO,CAACS,GAAG,GAAGD,CAAP,CAApB;AACAA,MAAAA,CAAC;AACDO,MAAAA,CAAC;AACF,KAJD,MAIO;AACLR,MAAAA,qBAAqB,CAACP,OAAO,CAACe,CAAD,CAAP,CAAWC,SAAZ,CAArB,GAA8C,IAA9C;AACAN,MAAAA,MAAM,CAACO,IAAP,CAAYjB,OAAO,CAACe,CAAD,CAAnB;AACD;AACF;;AACDH,EAAAA,OAAO,CAACC,GAAR,CAAYN,qBAAZ;AACA,SAAOG,MAAP;AACD,CAzBM;AA2BP,OAAO,MAAMQ,qBAAqB,GAAG,MAAM;AACzC,MAAIlB,OAAO,GAAG,CAAC,GAAGF,YAAJ,CAAd;AACAE,EAAAA,OAAO,GAAGA,OAAO,CACdmB,MADO,CAELC,MAAD,IACEC,IAAI,CAACC,IAAL,CAAU,CAAClB,IAAI,CAACmB,GAAL,KAAanB,IAAI,CAACC,KAAL,CAAWe,MAAM,CAACd,SAAlB,CAAd,IAA8C,QAAxD,IACE,EADF,IACQc,MAAM,CAACI,KAAP,GAAe,CAJnB,EAMPvB,IANO,CAMF,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACsB,IAAF,GAASvB,CAAC,CAACuB,IANnB,CAAV;AAOA,SAAOzB,OAAO,CAACc,KAAR,CAAc,CAAd,EAAiB,CAAjB,CAAP;AACD,CAVM;AAYP,OAAO,MAAMY,mBAAmB,GAAG,MAAM;AACvC,MAAI1B,OAAO,GAAG,CAAC,GAAGF,YAAJ,CAAd;AACAE,EAAAA,OAAO,CAACC,IAAR,CAAa,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACrB,QAAID,CAAC,CAACsB,KAAF,GAAUrB,CAAC,CAACqB,KAAhB,EAAuB,OAAO,CAAC,CAAR;AACxB,GAFD;AAGA,SAAOxB,OAAO,CAACc,KAAR,CAAc,CAAd,EAAiB,CAAjB,CAAP;AACD,CANM;AAQP,OAAO,MAAMa,2BAA2B,GAAIC,UAAD,IAAgB;AACzD,QAAMC,UAAU,GAAG,EAAE,GAAGjC;AAAL,GAAnB;AACA,QAAMkC,cAAc,GAAGD,UAAU,CAACD,UAAD,CAAV,CAAuBG,QAA9C;AACA,QAAMA,QAAQ,GAAG,EAAE,GAAGlC;AAAL,GAAjB;AACA,MAAImC,YAAY,GAAG,EAAnB;AACAF,EAAAA,cAAc,CAACnB,MAAf,IACEmB,cAAc,CAACG,OAAf,CAAwBjB,SAAD,IAAe;AACpCgB,IAAAA,YAAY,CAAChB,SAAD,CAAZ,GAA0Be,QAAQ,CAACf,SAAD,CAAlC;AACD,GAFD,CADF;AAIA,SAAOgB,YAAP;AACD,CAVM;AAYP,OAAO,MAAME,eAAe,GAAG,MAAM;AACnC,QAAMC,YAAY,GAAG,EAAE,GAAGvC;AAAL,GAArB;AACA,SAAOwC,MAAM,CAACC,IAAP,CAAYF,YAAZ,EAA0BG,GAA1B,CAA+BC,GAAD,IAASJ,YAAY,CAACI,GAAD,CAAnD,CAAP;AACD,CAHM;AAKP,OAAO,MAAMC,WAAW,GAAG,MAAM;AAC/B,QAAMxC,OAAO,GAAG,CAAC,GAAGF,YAAJ,CAAhB;AACA,MAAI2C,GAAG,GAAGzC,OAAO,CAAC,CAAD,CAAP,CAAW0C,KAArB;AACA1C,EAAAA,OAAO,CAACiC,OAAR,CAAiBb,MAAD,IAAY;AAC1B,QAAIA,MAAM,CAACsB,KAAP,GAAeD,GAAnB,EAAwB;AACtBA,MAAAA,GAAG,GAAGrB,MAAM,CAACsB,KAAb;AACD;AACF,GAJD;AAKA,SAAOD,GAAP;AACD,CATM;AAWP,OAAO,MAAME,kBAAkB,GAAG,MAAM;AACtC,MAAI3C,OAAO,GAAG,CAAC,GAAGF,YAAJ,CAAd;AACAE,EAAAA,OAAO,GAAGA,OAAO,CAACmB,MAAR,CAAgBC,MAAD,IAAYA,MAAM,CAACwB,QAAP,GAAkB,CAA7C,CAAV;AACA5C,EAAAA,OAAO,CAACC,IAAR,CAAa,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACrB,QAAID,CAAC,CAAC0C,QAAF,GAAazC,CAAC,CAACyC,QAAnB,EAA6B;AAC3B,aAAO,CAAC,CAAR;AACD;;AACD,WAAO,CAAP;AACD,GALD;AAMA,SAAO5C,OAAP;AACD,CAVM;AAYP,OAAO,MAAM6C,mBAAmB,GAAG,MAAM;AACvC,MAAI7C,OAAO,GAAG,CAAC,GAAGF,YAAJ,CAAd;AACA,SAAOE,OAAO,CAACW,MAAf;AACD,CAHM","sourcesContent":["import CATEGORIES_DATA from \"../data/category\";\nimport PRODUCTS_DATA from \"../data/products\";\nimport SELLERS_DATA from \"../data/sellers\";\n\nexport const getLastestProducts = () => {\n  let sellers = [...SELLERS_DATA];\n  sellers.sort((a, b) => {\n    if (Date.parse(a.createdAt) > Date.parse(b.createdAt)) return -1;\n  });\n  let checkProductIsTheSame = {};\n  let j = 0;\n  let len = 6;\n  let result = [];\n  if (sellers.length <= 6) {\n    return sellers;\n  }\n  console.log(sellers.slice(0, 10));\n  for (let i = 0; i < len; i++) {\n    if (checkProductIsTheSame[sellers[i].productId]) {\n      sellers[i] = sellers[len + j];\n      j++;\n      i--;\n    } else {\n      checkProductIsTheSame[sellers[i].productId] = true;\n      result.push(sellers[i]);\n    }\n  }\n  console.log(checkProductIsTheSame);\n  return result;\n};\n\nexport const getProductsBestSeller = () => {\n  let sellers = [...SELLERS_DATA];\n  sellers = sellers\n    .filter(\n      (seller) =>\n        Math.ceil((Date.now() - Date.parse(seller.createdAt)) / 84600000) <\n          14 && seller.votes > 4\n    )\n    .sort((a, b) => b.sold - a.sold);\n  return sellers.slice(0, 6);\n};\n\nexport const getProductsTopRated = () => {\n  let sellers = [...SELLERS_DATA];\n  sellers.sort((a, b) => {\n    if (a.votes > b.votes) return -1;\n  });\n  return sellers.slice(0, 9);\n};\n\nexport const getProductsListByCategoryId = (categeryId) => {\n  const categories = { ...CATEGORIES_DATA };\n  const listProductsId = categories[categeryId].products;\n  const products = { ...PRODUCTS_DATA };\n  let productsList = {};\n  listProductsId.length &&\n    listProductsId.forEach((productId) => {\n      productsList[productId] = products[productId];\n    });\n  return productsList;\n};\n\nexport const getCategoryData = () => {\n  const categoryList = { ...CATEGORIES_DATA };\n  return Object.keys(categoryList).map((key) => categoryList[key]);\n};\n\nexport const getMaxPrice = () => {\n  const sellers = [...SELLERS_DATA];\n  let max = sellers[0].price;\n  sellers.forEach((seller) => {\n    if (seller.price > max) {\n      max = seller.price;\n    }\n  });\n  return max;\n};\n\nexport const getSaleOffProducts = () => {\n  let sellers = [...SELLERS_DATA];\n  sellers = sellers.filter((seller) => seller.discount > 0);\n  sellers.sort((a, b) => {\n    if (a.discount > b.discount) {\n      return -1;\n    }\n    return 1;\n  });\n  return sellers;\n};\n\nexport const getNumberOfProducts = () => {\n  let sellers = [...SELLERS_DATA];\n  return sellers.length;\n};\n"]},"metadata":{},"sourceType":"module"}