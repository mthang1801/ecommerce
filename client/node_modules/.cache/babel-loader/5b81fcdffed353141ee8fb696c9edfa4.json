{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/pages/product-type/product-type.component.jsx\";\nimport React, { useEffect } from \"react\";\nimport { ProductTypeWrapper } from \"./product-type.styles\";\nimport { default as ProductTypeOverview } from \"../../components/ProductType/product-type-overview/product-type-overview.container\";\nimport MasterHeader from \"../../components/Layout/master-header/master-header.component\";\nimport Background from \"../../components/Layout/background/background.component\";\nimport { fetchProductType } from \"../../redux/product-type/product-type.actions\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectProductTypeError, selectProductTypeLoading, selectProductTypeList, selectProductFetched, selectName, selectProductsIsFilter } from \"../../redux/product-type/product-type.selectors\";\nimport PageNotFound from \"../page-error/page-error.component\";\nimport Loader from \"../../components/UI/loader/loader.component\";\n\nconst ProductTypePage = ({\n  match,\n  location,\n  fetchProductType,\n  fetchProductList,\n  loading,\n  error,\n  name\n}) => {\n  useEffect(() => {\n    let {\n      productTypeId\n    } = match.params;\n    const urlParams = new URLSearchParams(window.location.search);\n    const min_price = +urlParams.get(\"min_price\");\n    const max_price = +urlParams.get(\"max_price\");\n    const page = +urlParams.get(\"page\") || 1;\n    fetchProductType(productTypeId, +min_price, +max_price, page);\n  }, [fetchProductType, fetchProductList, location.search, window.location.search, match.params.categoryPath, match.params.productTypePath]);\n\n  if (error && error.status == 404) {\n    return /*#__PURE__*/React.createElement(PageNotFound, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (!loading && name) return /*#__PURE__*/React.createElement(ProductTypeWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MasterHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Background, {\n    label: `Trang chủ / Danh mục sản phẩm / Loại sản phẩm / ${name}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ProductTypeOverview, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }));\n  return /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 10\n    }\n  });\n};\n\nconst mapStateToProps = createStructuredSelector({\n  error: selectProductTypeError,\n  loading: selectProductTypeLoading,\n  productTypeList: selectProductTypeList,\n  fetched: selectProductFetched,\n  name: selectName,\n  isFilter: selectProductsIsFilter\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchProductType: (productTypeId, min_price, max_price, page) => dispatch(fetchProductType(productTypeId, min_price, max_price, page))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductTypePage);","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/pages/product-type/product-type.component.jsx"],"names":["React","useEffect","ProductTypeWrapper","default","ProductTypeOverview","MasterHeader","Background","fetchProductType","connect","createStructuredSelector","selectProductTypeError","selectProductTypeLoading","selectProductTypeList","selectProductFetched","selectName","selectProductsIsFilter","PageNotFound","Loader","ProductTypePage","match","location","fetchProductList","loading","error","name","productTypeId","params","urlParams","URLSearchParams","window","search","min_price","get","max_price","page","categoryPath","productTypePath","status","mapStateToProps","productTypeList","fetched","isFilter","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { ProductTypeWrapper } from \"./product-type.styles\";\nimport { default as ProductTypeOverview } from \"../../components/ProductType/product-type-overview/product-type-overview.container\";\nimport MasterHeader from \"../../components/Layout/master-header/master-header.component\";\nimport Background from \"../../components/Layout/background/background.component\";\nimport { fetchProductType } from \"../../redux/product-type/product-type.actions\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport {\n  selectProductTypeError,\n  selectProductTypeLoading,\n  selectProductTypeList,\n  selectProductFetched,\n  selectName,\n  selectProductsIsFilter,\n} from \"../../redux/product-type/product-type.selectors\";\nimport PageNotFound from \"../page-error/page-error.component\";\nimport Loader from \"../../components/UI/loader/loader.component\";\nconst ProductTypePage = ({\n  match,\n  location,\n  fetchProductType,\n  fetchProductList,\n  loading,\n  error,\n  name,\n}) => {\n  useEffect(() => {\n    let { productTypeId } = match.params;\n    const urlParams = new URLSearchParams(window.location.search);\n    const min_price = +urlParams.get(\"min_price\");\n    const max_price = +urlParams.get(\"max_price\");\n    const page = +urlParams.get(\"page\") || 1;\n\n    fetchProductType(productTypeId, +min_price, +max_price, page);\n  }, [\n    fetchProductType,\n    fetchProductList,\n    location.search,\n    window.location.search,\n    match.params.categoryPath,\n    match.params.productTypePath,\n  ]);\n  if (error && error.status == 404) {\n    return <PageNotFound />;\n  }\n  if (!loading && name)\n    return (\n      <ProductTypeWrapper>\n        <MasterHeader />\n        <Background\n          label={`Trang chủ / Danh mục sản phẩm / Loại sản phẩm / ${name}`}\n        />\n        <ProductTypeOverview />\n      </ProductTypeWrapper>\n    );\n  return <Loader />;\n};\n\nconst mapStateToProps = createStructuredSelector({\n  error: selectProductTypeError,\n  loading: selectProductTypeLoading,\n  productTypeList: selectProductTypeList,\n  fetched: selectProductFetched,\n  name: selectName,\n  isFilter: selectProductsIsFilter,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  fetchProductType: (productTypeId, min_price, max_price, page) =>\n    dispatch(fetchProductType(productTypeId, min_price, max_price, page)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductTypePage);\n"]},"metadata":{},"sourceType":"module"}