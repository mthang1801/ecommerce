{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/pages/product-group/product-group.component.jsx\";\nimport React, { useEffect } from \"react\";\nimport { ProductGroupWrapper } from \"./product-group.styles\";\nimport { default as ProductGroupOverview } from \"../../components/ProductGroup/product-group-overview/product-group-overview.container\";\nimport MasterHeader from \"../../components/Layout/master-header/master-header.component\";\nimport Background from \"../../components/Layout/background/background.component\";\nimport { fetchProductGroup, fetchProductList, filterProductsByPrice } from \"../../redux/product-group/product-group.actions\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectProductFetched, selectProductGroupError, selectProductGroupLoading, selectName } from \"../../redux/product-group/product-group.selectors\";\nimport PageNotFound from \"../page-error/page-error.component\";\nimport Loader from \"../../components/UI/loader/loader.component\";\n\nconst ProductGroupPage = ({\n  match,\n  location,\n  fetchProductGroup,\n  fetchProductList,\n  loading,\n  error,\n  fetched,\n  name,\n  filterProductsByPrice\n}) => {\n  useEffect(() => {\n    let {\n      categoryPath,\n      productTypePath,\n      productGroupPath\n    } = match.params;\n    const urlParams = new URLSearchParams(window.location.search);\n    const min_price = +urlParams.get(\"min_price\");\n    const max_price = +urlParams.get(\"max_price\");\n    const page = +urlParams.get(\"page\") || 1;\n\n    if (location.search && fetched && !max_price && !min_price) {\n      fetchProductList(categoryPath, productTypePath, productGroupPath, page);\n      return;\n    }\n\n    if (max_price > 0) {\n      filterProductsByPrice(categoryPath, productTypePath, productGroupPath, min_price, max_price, page);\n    } else {\n      fetchProductGroup(categoryPath, productTypePath, productGroupPath, page);\n    }\n  }, [fetchProductGroup, fetchProductList, location.search, match.params.categoryPath, match.params.productTypePath, match.params.productGroupPath]);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (error && error.status == 404) {\n    return /*#__PURE__*/React.createElement(PageNotFound, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(ProductGroupWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MasterHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Background, {\n    label: `Trang chủ / Danh mục sản phẩm / Loại sản phẩm / Nhóm sản phẩm / ${name}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ProductGroupOverview, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  error: selectProductGroupError,\n  loading: selectProductGroupLoading,\n  fetched: selectProductFetched,\n  name: selectName\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchProductGroup: (categoryPath, productTypePath, productGroupPath, page) => dispatch(fetchProductGroup(categoryPath, productTypePath, productGroupPath, page)),\n  fetchProductList: (categoryPath, productTypePath, productGroupPath, page) => dispatch(fetchProductList(categoryPath, productTypePath, productGroupPath, page)),\n  filterProductsByPrice: (categoryPath, productTypePath, productGroupPath, minPrice, maxPrice, page) => dispatch(filterProductsByPrice(categoryPath, productTypePath, productGroupPath, minPrice, maxPrice, page))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductGroupPage);","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/pages/product-group/product-group.component.jsx"],"names":["React","useEffect","ProductGroupWrapper","default","ProductGroupOverview","MasterHeader","Background","fetchProductGroup","fetchProductList","filterProductsByPrice","connect","createStructuredSelector","selectProductFetched","selectProductGroupError","selectProductGroupLoading","selectName","PageNotFound","Loader","ProductGroupPage","match","location","loading","error","fetched","name","categoryPath","productTypePath","productGroupPath","params","urlParams","URLSearchParams","window","search","min_price","get","max_price","page","status","mapStateToProps","mapDispatchToProps","dispatch","minPrice","maxPrice"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,mBAAT,QAAoC,wBAApC;AACA,SAASC,OAAO,IAAIC,oBAApB,QAAgD,uFAAhD;AACA,OAAOC,YAAP,MAAyB,+DAAzB;AACA,OAAOC,UAAP,MAAuB,yDAAvB;AACA,SACEC,iBADF,EAEEC,gBAFF,EAGEC,qBAHF,QAIO,iDAJP;AAKA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SACEC,oBADF,EAEEC,uBAFF,EAGEC,yBAHF,EAIEC,UAJF,QAKO,mDALP;AAMA,OAAOC,YAAP,MAAyB,oCAAzB;AACA,OAAOC,MAAP,MAAmB,6CAAnB;;AACA,MAAMC,gBAAgB,GAAG,CAAC;AACxBC,EAAAA,KADwB;AAExBC,EAAAA,QAFwB;AAGxBb,EAAAA,iBAHwB;AAIxBC,EAAAA,gBAJwB;AAKxBa,EAAAA,OALwB;AAMxBC,EAAAA,KANwB;AAOxBC,EAAAA,OAPwB;AAQxBC,EAAAA,IARwB;AASxBf,EAAAA;AATwB,CAAD,KAUnB;AACJR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI;AAAEwB,MAAAA,YAAF;AAAgBC,MAAAA,eAAhB;AAAiCC,MAAAA;AAAjC,QAAsDR,KAAK,CAACS,MAAhE;AACA,UAAMC,SAAS,GAAG,IAAIC,eAAJ,CAAoBC,MAAM,CAACX,QAAP,CAAgBY,MAApC,CAAlB;AACA,UAAMC,SAAS,GAAG,CAACJ,SAAS,CAACK,GAAV,CAAc,WAAd,CAAnB;AACA,UAAMC,SAAS,GAAG,CAACN,SAAS,CAACK,GAAV,CAAc,WAAd,CAAnB;AACA,UAAME,IAAI,GAAG,CAACP,SAAS,CAACK,GAAV,CAAc,MAAd,CAAD,IAA0B,CAAvC;;AACA,QAAId,QAAQ,CAACY,MAAT,IAAmBT,OAAnB,IAA8B,CAACY,SAA/B,IAA4C,CAACF,SAAjD,EAA4D;AAC1DzB,MAAAA,gBAAgB,CAACiB,YAAD,EAAeC,eAAf,EAAgCC,gBAAhC,EAAkDS,IAAlD,CAAhB;AACA;AACD;;AAAC,QAAGD,SAAS,GAAG,CAAf,EAAiB;AACjB1B,MAAAA,qBAAqB,CAACgB,YAAD,EAAeC,eAAf,EAA+BC,gBAA/B,EAAiDM,SAAjD,EAA4DE,SAA5D,EAAuEC,IAAvE,CAArB;AACD,KAFC,MAEG;AACH7B,MAAAA,iBAAiB,CAACkB,YAAD,EAAeC,eAAf,EAAgCC,gBAAhC,EAAkDS,IAAlD,CAAjB;AACD;AAEF,GAfQ,EAeN,CACD7B,iBADC,EAEDC,gBAFC,EAGDY,QAAQ,CAACY,MAHR,EAIDb,KAAK,CAACS,MAAN,CAAaH,YAJZ,EAKDN,KAAK,CAACS,MAAN,CAAaF,eALZ,EAMDP,KAAK,CAACS,MAAN,CAAaD,gBANZ,CAfM,CAAT;;AAuBA,MAAIN,OAAJ,EAAa;AACX,wBAAO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACD,MAAIC,KAAK,IAAIA,KAAK,CAACe,MAAN,IAAgB,GAA7B,EAAkC;AAChC,wBAAO,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACD,sBACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAG,mEAAkEb,IAAK,EAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD,CA/CD;;AAiDA,MAAMc,eAAe,GAAG3B,wBAAwB,CAAC;AAC/CW,EAAAA,KAAK,EAAET,uBADwC;AAE/CQ,EAAAA,OAAO,EAAEP,yBAFsC;AAG/CS,EAAAA,OAAO,EAAEX,oBAHsC;AAI/CY,EAAAA,IAAI,EAAET;AAJyC,CAAD,CAAhD;;AAMA,MAAMwB,kBAAkB,GAAIC,QAAD,KAAe;AACxCjC,EAAAA,iBAAiB,EAAE,CAACkB,YAAD,EAAeC,eAAf,EAAgCC,gBAAhC,EAAkDS,IAAlD,KAA2DI,QAAQ,CAACjC,iBAAiB,CAACkB,YAAD,EAAeC,eAAf,EAAgCC,gBAAhC,EAAkDS,IAAlD,CAAlB,CAD9C;AAExC5B,EAAAA,gBAAgB,EAAE,CAACiB,YAAD,EAAeC,eAAf,EAAgCC,gBAAhC,EAAkDS,IAAlD,KAA2DI,QAAQ,CAAChC,gBAAgB,CAACiB,YAAD,EAAeC,eAAf,EAAgCC,gBAAhC,EAAkDS,IAAlD,CAAjB,CAF7C;AAGxC3B,EAAAA,qBAAqB,EAAG,CAACgB,YAAD,EAAeC,eAAf,EAAgCC,gBAAhC,EAAkDc,QAAlD,EAA4DC,QAA5D,EAAsEN,IAAtE,KAA+EI,QAAQ,CAAC/B,qBAAqB,CAACgB,YAAD,EAAeC,eAAf,EAAgCC,gBAAhC,EAAkDc,QAAlD,EAA4DC,QAA5D,EAAsEN,IAAtE,CAAtB;AAHvE,CAAf,CAA3B;;AAKA,eAAe1B,OAAO,CAAC4B,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CrB,gBAA7C,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { ProductGroupWrapper } from \"./product-group.styles\";\nimport { default as ProductGroupOverview } from \"../../components/ProductGroup/product-group-overview/product-group-overview.container\";\nimport MasterHeader from \"../../components/Layout/master-header/master-header.component\";\nimport Background from \"../../components/Layout/background/background.component\";\nimport {\n  fetchProductGroup,\n  fetchProductList,\n  filterProductsByPrice\n} from \"../../redux/product-group/product-group.actions\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport {  \n  selectProductFetched,\n  selectProductGroupError,\n  selectProductGroupLoading,\n  selectName\n} from \"../../redux/product-group/product-group.selectors\";\nimport PageNotFound from \"../page-error/page-error.component\";\nimport Loader from \"../../components/UI/loader/loader.component\";\nconst ProductGroupPage = ({\n  match,\n  location,\n  fetchProductGroup,\n  fetchProductList,\n  loading,\n  error,\n  fetched,\n  name,\n  filterProductsByPrice\n}) => {\n  useEffect(() => {    \n    let { categoryPath, productTypePath, productGroupPath } = match.params;    \n    const urlParams = new URLSearchParams(window.location.search);\n    const min_price = +urlParams.get(\"min_price\");\n    const max_price = +urlParams.get(\"max_price\");\n    const page = +urlParams.get(\"page\") || 1 ; \n    if (location.search && fetched && !max_price && !min_price) {\n      fetchProductList(categoryPath, productTypePath, productGroupPath, page);\n      return;\n    } if(max_price > 0){      \n      filterProductsByPrice(categoryPath, productTypePath,productGroupPath, min_price, max_price, page);\n    }else{      \n      fetchProductGroup(categoryPath, productTypePath, productGroupPath, page);\n    }\n  \n  }, [\n    fetchProductGroup,\n    fetchProductList,\n    location.search,\n    match.params.categoryPath,\n    match.params.productTypePath,\n    match.params.productGroupPath\n  ]);\n  if (loading) {\n    return <Loader />;\n  }\n  if (error && error.status == 404) {\n    return <PageNotFound />;\n  }\n  return (\n    <ProductGroupWrapper>\n      <MasterHeader />\n      <Background label={`Trang chủ / Danh mục sản phẩm / Loại sản phẩm / Nhóm sản phẩm / ${name}`} />\n      <ProductGroupOverview />\n    </ProductGroupWrapper>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  error: selectProductGroupError,\n  loading: selectProductGroupLoading,  \n  fetched: selectProductFetched,\n  name: selectName,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  fetchProductGroup: (categoryPath, productTypePath, productGroupPath, page) => dispatch(fetchProductGroup(categoryPath, productTypePath, productGroupPath, page)),\n  fetchProductList: (categoryPath, productTypePath, productGroupPath, page) => dispatch(fetchProductList(categoryPath, productTypePath, productGroupPath, page)),\n  filterProductsByPrice : (categoryPath, productTypePath, productGroupPath, minPrice, maxPrice, page) => dispatch(filterProductsByPrice(categoryPath, productTypePath, productGroupPath, minPrice, maxPrice, page))\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductGroupPage);\n"]},"metadata":{},"sourceType":"module"}