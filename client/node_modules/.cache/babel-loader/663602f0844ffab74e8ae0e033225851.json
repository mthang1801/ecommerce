{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/src/components/Layout/categories-slider/categories-slider.component.jsx\";\nimport React, { useState, useRef, useEffect, useContext } from \"react\";\nimport { CategoriesSliderContainer, Caption, CategoryItem, CategoryImage, CategoryName } from \"./categories-slider.styles\";\nimport categoriesData from \"../../../data/category\";\nimport Slider from \"react-slick\";\nimport AppContext from \"../../../context/app-viewport.context\";\nconst categoryItems = Object.keys(categoriesData).map(key => categoriesData[key]);\nlet categoriesGroup = [];\nlet categoriesPerPage = [];\ncategoryItems.forEach((item, index) => {\n  if (index !== 0 && index % 4 === 0) {\n    categoriesGroup.push(categoriesPerPage);\n    categoriesPerPage = [];\n  }\n\n  categoriesPerPage.push(item);\n\n  if (index === categoryItems.length - 1 && index % 4 !== 0) {\n    categoriesGroup.push(categoriesPerPage);\n  }\n});\n\nconst CategoriesSlider = props => {\n  const [slide, setSlide] = useState(null);\n  const [mobileView, setMobileView] = useState(window.innerWidth < 600);\n  const [tabletView, setTabletView] = useState(window.innerWidth < 992);\n  const width = useContext(AppContext);\n  useEffect(() => {\n    if (width < 600) {\n      setMobileView(true);\n    } else {\n      setMobileView(false);\n    }\n  }, [width]);\n  useEffect(() => {\n    if (width < 992) {\n      setTabletView(true);\n    } else {\n      setTabletView(false);\n    }\n  }, [width]);\n  const slideRef = useRef(null);\n  useEffect(() => {\n    setSlide(slideRef.current);\n  }, [slideRef]);\n  return /*#__PURE__*/React.createElement(CategoriesSliderContainer, {\n    mobileView: mobileView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Caption, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 8\n    }\n  }, \"Danh m\\u1EE5c s\\u1EA3n ph\\u1EA9m\"), /*#__PURE__*/React.createElement(Slider, {\n    asNavFor: slide,\n    ref: slideRef,\n    slidesToShow: mobileView ? 2 : 3,\n    swipeToSlide: true,\n    focusOnSelect: true,\n    autoplay: true,\n    pauseOnHover: false,\n    autoplaySpeed: 2000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, categoriesGroup.map(group => group.map(item => /*#__PURE__*/React.createElement(CategoryItem, {\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CategoryImage, {\n    src: require(`../../../assets/img/categories/${item.imageUrl}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CategoryName, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, item.name))))));\n};\n\nexport default CategoriesSlider;","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/src/components/Layout/categories-slider/categories-slider.component.jsx"],"names":["React","useState","useRef","useEffect","useContext","CategoriesSliderContainer","Caption","CategoryItem","CategoryImage","CategoryName","categoriesData","Slider","AppContext","categoryItems","Object","keys","map","key","categoriesGroup","categoriesPerPage","forEach","item","index","push","length","CategoriesSlider","props","slide","setSlide","mobileView","setMobileView","window","innerWidth","tabletView","setTabletView","width","slideRef","current","group","id","require","imageUrl","name"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, useContext } from \"react\";\nimport { CategoriesSliderContainer, Caption, CategoryItem, CategoryImage, CategoryName} from \"./categories-slider.styles\";\nimport categoriesData from \"../../../data/category\";\nimport Slider from \"react-slick\";\nimport AppContext from \"../../../context/app-viewport.context\";\nconst categoryItems = Object.keys(categoriesData).map(\n  (key) => categoriesData[key]\n);\n\nlet categoriesGroup = [];\nlet categoriesPerPage = [];\ncategoryItems.forEach((item, index) => {\n  if (index !== 0 && index % 4 === 0) {\n    categoriesGroup.push(categoriesPerPage);\n    categoriesPerPage = [];\n  }\n  categoriesPerPage.push(item);\n  if (index === categoryItems.length - 1 && index % 4 !== 0) {\n    categoriesGroup.push(categoriesPerPage);\n  }\n});\n\n\nconst CategoriesSlider = (props) => {\n  const [slide, setSlide] = useState(null)\n  const [mobileView, setMobileView] = useState(window.innerWidth < 600);\n  const [tabletView, setTabletView] = useState(window.innerWidth < 992);\n  const width = useContext(AppContext);\n  useEffect(() => {\n    if (width < 600) {\n      setMobileView(true);\n    } else {\n      setMobileView(false);\n    }\n  }, [width]);\n  useEffect(() => {\n    if (width < 992) {\n      setTabletView(true);\n    } else {\n      setTabletView(false);\n    }\n  }, [width]);\n  const slideRef = useRef(null);\n  useEffect(() => {  \n    setSlide(slideRef.current)\n  }, [slideRef])\n    return (\n      <CategoriesSliderContainer mobileView={mobileView}>\n       <Caption>Danh mục sản phẩm</Caption>\n        <Slider\n          asNavFor={slide}\n          ref={slideRef}\n          slidesToShow={mobileView ? 2 : 3}\n          swipeToSlide={true}\n          focusOnSelect={true}        \n          autoplay\n          pauseOnHover={false}\n          autoplaySpeed={2000}\n        >\n          {categoriesGroup.map(group => \n            group.map(item =>(\n              <CategoryItem key={item.id}>\n                <CategoryImage src={require(`../../../assets/img/categories/${item.imageUrl}`)}/>\n                <CategoryName>{item.name}</CategoryName>              \n              </CategoryItem>              \n            ))\n          )}\n        </Slider>\n     \n      </CategoriesSliderContainer>\n    );\n  \n}\n\nexport default CategoriesSlider;\n"]},"metadata":{},"sourceType":"module"}