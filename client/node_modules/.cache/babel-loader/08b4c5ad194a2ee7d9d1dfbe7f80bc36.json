{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/pages/category/category.component.jsx\";\nimport React, { useEffect } from 'react';\nimport { CategoryPageWrapper } from \"./category.styles\";\nimport { default as CategoryOverview } from \"../../components/Category/category-overview/category-overview.container\";\nimport MasterHeader from \"../../components/Layout/master-header/master-header.component\";\nimport Background from \"../../components/Layout/background/background.component\";\nimport { fetchCategory, fetchProductList } from \"../../redux/category/category.actions\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectCategoryError, selectCategoryLoading, selectCategoryList, selectProductFetched } from \"../../redux/category/category.selectors\";\nimport PageNotFound from \"../page-not-found/page-not-found.component\";\nimport Loader from \"../../components/UI/loader/loader.component\";\n\nconst CategoryPage = ({\n  match,\n  fetchCategory,\n  location,\n  error,\n  loading,\n  categoryList,\n  fetchProductList,\n  fetched\n}) => {\n  useEffect(() => {\n    let page = location.search.split(\"=\")[1] || 1;\n    let categoryUrl = match.params.categoryUrl;\n\n    if (location.search && fetched) {\n      fetchProductList(categoryUrl, page);\n      return;\n    }\n\n    fetchCategory(categoryUrl, page);\n  }, [fetchCategory, location.search, match.params.categoryUrl]);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (error && error.status == 404) {\n    return /*#__PURE__*/React.createElement(PageNotFound, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(CategoryPageWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MasterHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Background, {\n    label: categoryList.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CategoryOverview, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  error: selectCategoryError,\n  loading: selectCategoryLoading,\n  categoryList: selectCategoryList,\n  fetched: selectProductFetched\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCategory: (path, page) => dispatch(fetchCategory(path, page)),\n  fetchProductList: (path, page) => dispatch(fetchProductList(path, page))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryPage);","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/pages/category/category.component.jsx"],"names":["React","useEffect","CategoryPageWrapper","default","CategoryOverview","MasterHeader","Background","fetchCategory","fetchProductList","connect","createStructuredSelector","selectCategoryError","selectCategoryLoading","selectCategoryList","selectProductFetched","PageNotFound","Loader","CategoryPage","match","location","error","loading","categoryList","fetched","page","search","split","categoryUrl","params","status","name","mapStateToProps","mapDispatchToProps","dispatch","path"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,mBAAR,QAAkC,mBAAlC;AACA,SAAQC,OAAO,IAAIC,gBAAnB,QAA0C,yEAA1C;AACA,OAAOC,YAAP,MAAyB,+DAAzB;AACA,OAAOC,UAAP,MAAuB,yDAAvB;AACA,SAAQC,aAAR,EAAuBC,gBAAvB,QAA8C,uCAA9C;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAAQC,mBAAR,EAA6BC,qBAA7B,EAAqDC,kBAArD,EAAyEC,oBAAzE,QAAoG,yCAApG;AACA,OAAOC,YAAP,MAAyB,4CAAzB;AACA,OAAOC,MAAP,MAAmB,6CAAnB;;AACA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQX,EAAAA,aAAR;AAAuBY,EAAAA,QAAvB;AAAiCC,EAAAA,KAAjC;AAAwCC,EAAAA,OAAxC;AAAiDC,EAAAA,YAAjD;AAA+Dd,EAAAA,gBAA/D;AAAiFe,EAAAA;AAAjF,CAAD,KAA+F;AAElHtB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIuB,IAAI,GAAGL,QAAQ,CAACM,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,KAAiC,CAA5C;AACA,QAAIC,WAAW,GAAGT,KAAK,CAACU,MAAN,CAAaD,WAA/B;;AACA,QAAGR,QAAQ,CAACM,MAAT,IAAmBF,OAAtB,EAA8B;AAC5Bf,MAAAA,gBAAgB,CAACmB,WAAD,EAAcH,IAAd,CAAhB;AACA;AACD;;AACDjB,IAAAA,aAAa,CAACoB,WAAD,EAAcH,IAAd,CAAb;AAEH,GATQ,EASN,CAACjB,aAAD,EAAgBY,QAAQ,CAACM,MAAzB,EAAiCP,KAAK,CAACU,MAAN,CAAaD,WAA9C,CATM,CAAT;;AAUA,MAAGN,OAAH,EAAW;AACT,wBAAO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACD,MAAGD,KAAK,IAAIA,KAAK,CAACS,MAAN,IAAgB,GAA5B,EAAgC;AAC9B,wBAAO,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACD,sBACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEP,YAAY,CAACQ,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD,CAzBD;;AA2BA,MAAMC,eAAe,GAAGrB,wBAAwB,CAAC;AAC/CU,EAAAA,KAAK,EAAGT,mBADuC;AAE/CU,EAAAA,OAAO,EAAGT,qBAFqC;AAG/CU,EAAAA,YAAY,EAAGT,kBAHgC;AAI/CU,EAAAA,OAAO,EAAGT;AAJqC,CAAD,CAAhD;;AAMA,MAAMkB,kBAAkB,GAAGC,QAAQ,KAAK;AACtC1B,EAAAA,aAAa,EAAG,CAAC2B,IAAD,EAAMV,IAAN,KAAeS,QAAQ,CAAC1B,aAAa,CAAC2B,IAAD,EAAMV,IAAN,CAAd,CADD;AAEtChB,EAAAA,gBAAgB,EAAG,CAAC0B,IAAD,EAAOV,IAAP,KAAgBS,QAAQ,CAACzB,gBAAgB,CAAC0B,IAAD,EAAOV,IAAP,CAAjB;AAFL,CAAL,CAAnC;;AAIA,eAAef,OAAO,CAACsB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6Cf,YAA7C,CAAf","sourcesContent":["import React, {useEffect} from 'react'\nimport {CategoryPageWrapper} from \"./category.styles\";\nimport {default as CategoryOverview} from \"../../components/Category/category-overview/category-overview.container\";\nimport MasterHeader from \"../../components/Layout/master-header/master-header.component\"\nimport Background from \"../../components/Layout/background/background.component\"\nimport {fetchCategory, fetchProductList} from \"../../redux/category/category.actions\";\nimport {connect} from \"react-redux\";\nimport {createStructuredSelector} from \"reselect\";\nimport {selectCategoryError, selectCategoryLoading , selectCategoryList, selectProductFetched} from \"../../redux/category/category.selectors\"\nimport PageNotFound from \"../page-not-found/page-not-found.component\"\nimport Loader from \"../../components/UI/loader/loader.component\"\nconst CategoryPage = ({match, fetchCategory, location, error, loading, categoryList, fetchProductList, fetched}) => { \n  \n  useEffect(() => {           \n      let page = location.search.split(\"=\")[1] || 1 ; \n      let categoryUrl = match.params.categoryUrl;    \n      if(location.search && fetched){     \n        fetchProductList(categoryUrl, page);\n        return ; \n      }             \n      fetchCategory(categoryUrl, page);\n                    \n  }, [fetchCategory, location.search, match.params.categoryUrl]);\n  if(loading){\n    return <Loader/>\n  }\n  if(error && error.status == 404){\n    return <PageNotFound/>\n  }\n  return (\n    <CategoryPageWrapper>             \n      <MasterHeader/>\n      <Background label={categoryList.name}/>   \n      <CategoryOverview/>\n    </CategoryPageWrapper>\n  )\n}\n\nconst mapStateToProps = createStructuredSelector({\n  error : selectCategoryError,\n  loading : selectCategoryLoading,\n  categoryList : selectCategoryList,\n  fetched : selectProductFetched\n})\nconst mapDispatchToProps = dispatch => ({\n  fetchCategory : (path,page) => dispatch(fetchCategory(path,page)),\n  fetchProductList : (path, page) => dispatch(fetchProductList(path, page))\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryPage)\n"]},"metadata":{},"sourceType":"module"}