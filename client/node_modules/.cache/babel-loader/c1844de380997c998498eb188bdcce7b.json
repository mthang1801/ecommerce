{"ast":null,"code":"import { put, takeLatest, call, all, delay } from \"redux-saga/effects\";\nimport * as actions from \"./user.actions\";\nimport userActionTypes from \"./user.types\";\nimport axios from \"axios\";\nimport urls from \"../../utils/urls\";\nimport setAuthToken from \"../../utils/setAuthToken\";\n\nfunction* fetchUser() {\n  try {\n    if (!localStorage.userToken || !localStorage.userExpDate) {\n      throw new Error(\"Authentication denied\");\n    }\n\n    if (!localStorage.userExpDate || Date.parse(localStorage.userExpDate) < Date.now()) {\n      localStorage.removeItem(\"userExpDate\");\n      localStorage.removeItem(\"userToken\");\n      throw new Error(\"Token has expired\");\n    }\n\n    setAuthToken(localStorage.userToken);\n    const timeRemain = Math.ceil(new Date(localStorage.userExpDate).getTime() - Date.now()) / 1000;\n    const {\n      data\n    } = yield axios.get(urls.FETCH_USER_URL);\n    console.log(data);\n    yield put(actions.fetchUserSuccess(data));\n    console.log(timeRemain);\n    yield put(actions.checkAuthTimeout(timeRemain));\n  } catch (error) {\n    yield put(actions.fetchUserFail(error.message));\n  }\n}\n\nfunction* register({\n  payload: {\n    name,\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      data: {\n        token,\n        user,\n        expDate\n      }\n    } = yield axios.post(urls.REGISTER_URL, {\n      name,\n      email,\n      password\n    });\n    localStorage.setItem(\"userToken\", token);\n    localStorage.setItem(\"userExpDate\", new Date(Date.now() + expDate * 1000));\n    setAuthToken(token);\n    yield put(actions.registerSuccess(user));\n    yield put(actions.checkAuthTimeout(expDate));\n  } catch (error) {\n    console.log(error);\n    yield put(actions.registerFail(error.message));\n  }\n}\n\nfunction* login({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      data: {\n        token,\n        user,\n        expDate\n      }\n    } = yield axios.post(urls.LOGIN_URL, {\n      email,\n      password\n    });\n    localStorage.setItem(\"userToken\", token);\n    localStorage.setItem(\"userExpDate\", new Date(Date.now() + expDate * 1000));\n    setAuthToken(token);\n    yield put(actions.loginSuccess(user));\n    yield put(actions.checkAuthTimeout(expDate));\n  } catch (error) {\n    yield put(actions.loginFail(error.message));\n  }\n}\n\nfunction* checkAuthTimeout({\n  payload\n}) {\n  yield delay(payload * 1000);\n  yield put(actions.logoutStart());\n  yield call(setAuthToken, null);\n}\n\nfunction* logout() {\n  localStorage.removeItem(\"userToken\");\n  localStorage.removeItem(\"userExpDate\");\n  yield put(actions.logoutSuccess());\n}\n\nfunction* onFetchUser() {\n  yield takeLatest(userActionTypes.FETCH_USER_START, fetchUser);\n}\n\nfunction* onRegister() {\n  yield takeLatest(userActionTypes.REGISTER_START, register);\n}\n\nfunction* onLogin() {\n  yield takeLatest(userActionTypes.LOGIN_START, login);\n}\n\nfunction* onLogout() {\n  yield takeLatest(userActionTypes.LOGOUT_START, logout);\n}\n\nfunction* onCheckAuthTimeout() {\n  yield takeLatest(userActionTypes.CHECK_AUTH_TIMEOUT, checkAuthTimeout);\n}\n\nexport default function* userSaga() {\n  yield all([call(onRegister), call(onLogout), call(onCheckAuthTimeout), call(onFetchUser), call(onLogin)]);\n}","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/redux/user/user.saga.js"],"names":["put","takeLatest","call","all","delay","actions","userActionTypes","axios","urls","setAuthToken","fetchUser","localStorage","userToken","userExpDate","Error","Date","parse","now","removeItem","timeRemain","Math","ceil","getTime","data","get","FETCH_USER_URL","console","log","fetchUserSuccess","checkAuthTimeout","error","fetchUserFail","message","register","payload","name","email","password","token","user","expDate","post","REGISTER_URL","setItem","registerSuccess","registerFail","login","LOGIN_URL","loginSuccess","loginFail","logoutStart","logout","logoutSuccess","onFetchUser","FETCH_USER_START","onRegister","REGISTER_START","onLogin","LOGIN_START","onLogout","LOGOUT_START","onCheckAuthTimeout","CHECK_AUTH_TIMEOUT","userSaga"],"mappings":"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","sourcesContent":["import { put, takeLatest, call, all, delay } from \"redux-saga/effects\";\nimport * as actions from \"./user.actions\";\nimport userActionTypes from \"./user.types\";\nimport axios from \"axios\";\nimport urls from \"../../utils/urls\";\nimport setAuthToken from \"../../utils/setAuthToken\";\n\nfunction* fetchUser() {\n  try {\n    if (!localStorage.userToken || !localStorage.userExpDate) {\n      throw new Error(\"Authentication denied\");\n    }\n    if (\n      !localStorage.userExpDate ||\n      Date.parse(localStorage.userExpDate) < Date.now()\n    ) {\n      localStorage.removeItem(\"userExpDate\");\n      localStorage.removeItem(\"userToken\");\n      throw new Error(\"Token has expired\");\n    }\n\n    setAuthToken(localStorage.userToken);\n    const timeRemain =\n      Math.ceil(new Date(localStorage.userExpDate).getTime() - Date.now()) /\n      1000;\n    const { data } = yield axios.get(urls.FETCH_USER_URL);\n    console.log(data);\n    yield put(actions.fetchUserSuccess(data));\n    console.log(timeRemain);\n    yield put(actions.checkAuthTimeout(timeRemain));\n  } catch (error) {\n    yield put(actions.fetchUserFail(error.message));\n  }\n}\n\nfunction* register({ payload: { name, email, password } }) {\n  try {\n    const {\n      data: { token, user, expDate },\n    } = yield axios.post(urls.REGISTER_URL, { name, email, password });\n\n    localStorage.setItem(\"userToken\", token);\n    localStorage.setItem(\"userExpDate\", new Date(Date.now() + expDate * 1000));\n    setAuthToken(token);\n    yield put(actions.registerSuccess(user));\n    yield put(actions.checkAuthTimeout(expDate));\n  } catch (error) {\n    console.log(error);\n    yield put(actions.registerFail(error.message));\n  }\n}\n\nfunction* login({ payload: { email, password } }) {\n  try {\n    const {\n      data: { token, user, expDate },\n    } = yield axios.post(urls.LOGIN_URL, { email, password });\n    localStorage.setItem(\"userToken\", token);\n    localStorage.setItem(\"userExpDate\", new Date(Date.now() + expDate * 1000));\n    setAuthToken(token);\n    yield put(actions.loginSuccess(user));\n    yield put(actions.checkAuthTimeout(expDate));\n  } catch (error) {\n    yield put(actions.loginFail(error.message));\n  }\n}\n\nfunction* checkAuthTimeout({ payload }) {\n  yield delay(payload * 1000);\n  yield put(actions.logoutStart());\n  yield call(setAuthToken, null);\n}\n\nfunction* logout() {\n  localStorage.removeItem(\"userToken\");\n  localStorage.removeItem(\"userExpDate\");\n  yield put(actions.logoutSuccess());\n}\n\nfunction* onFetchUser() {\n  yield takeLatest(userActionTypes.FETCH_USER_START, fetchUser);\n}\n\nfunction* onRegister() {\n  yield takeLatest(userActionTypes.REGISTER_START, register);\n}\n\nfunction* onLogin() {\n  yield takeLatest(userActionTypes.LOGIN_START, login);\n}\n\nfunction* onLogout() {\n  yield takeLatest(userActionTypes.LOGOUT_START, logout);\n}\n\nfunction* onCheckAuthTimeout() {\n  yield takeLatest(userActionTypes.CHECK_AUTH_TIMEOUT, checkAuthTimeout);\n}\n\nexport default function* userSaga() {\n  yield all([\n    call(onRegister),\n    call(onLogout),\n    call(onCheckAuthTimeout),\n    call(onFetchUser),\n    call(onLogin),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}