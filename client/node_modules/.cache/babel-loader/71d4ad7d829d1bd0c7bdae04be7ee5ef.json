{"ast":null,"code":"import searchActionTypes from \"./search.types\";\nimport axios from \"axios\";\nimport urls from \"../../utils/urls\";\nexport const searchStart = () => ({\n  type: searchActionTypes.SEARCH_START\n});\nexport const searchSuccess = listProducts => ({\n  type: searchActionTypes.SEARCH_SUCCESS,\n  payload: listProducts\n});\nexport const searchFail = error => ({\n  type: searchActionTypes.SEARCH_FAIL,\n  payload: {\n    msg: error.response.data.message,\n    status: error.response.status\n  }\n});\nexport const onSearch = searchKey => async dispatch => {\n  try {\n    dispatch(searchStart());\n    const {\n      data\n    } = await axios.get(urls.SEARCH_PRODUCT_LIST, {\n      data: searchKey\n    });\n    dispatch(searchSuccess());\n  } catch (error) {\n    dispatch(searchFail());\n  }\n};\nexport const setSearchKey = searchKey => ({\n  type: searchActionTypes.SET_SEARCH_KEY,\n  payload: searchKey\n});","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/redux/search/search.actions.js"],"names":["searchActionTypes","axios","urls","searchStart","type","SEARCH_START","searchSuccess","listProducts","SEARCH_SUCCESS","payload","searchFail","error","SEARCH_FAIL","msg","response","data","message","status","onSearch","searchKey","dispatch","get","SEARCH_PRODUCT_LIST","setSearchKey","SET_SEARCH_KEY"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,gBAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAO,MAAMC,WAAW,GAAG,OAAO;AAChCC,EAAAA,IAAI,EAAEJ,iBAAiB,CAACK;AADQ,CAAP,CAApB;AAGP,OAAO,MAAMC,aAAa,GAAIC,YAAD,KAAmB;AAC9CH,EAAAA,IAAI,EAAEJ,iBAAiB,CAACQ,cADsB;AAE9CC,EAAAA,OAAO,EAAEF;AAFqC,CAAnB,CAAtB;AAIP,OAAO,MAAMG,UAAU,GAAIC,KAAD,KAAY;AACpCP,EAAAA,IAAI,EAAEJ,iBAAiB,CAACY,WADY;AAEpCH,EAAAA,OAAO,EAAE;AAAEI,IAAAA,GAAG,EAAEF,KAAK,CAACG,QAAN,CAAeC,IAAf,CAAoBC,OAA3B;AAAoCC,IAAAA,MAAM,EAAEN,KAAK,CAACG,QAAN,CAAeG;AAA3D;AAF2B,CAAZ,CAAnB;AAKP,OAAO,MAAMC,QAAQ,GAAIC,SAAD,IAAe,MAAOC,QAAP,IAAoB;AACzD,MAAI;AACFA,IAAAA,QAAQ,CAACjB,WAAW,EAAZ,CAAR;AACA,UAAM;AAAEY,MAAAA;AAAF,QAAW,MAAMd,KAAK,CAACoB,GAAN,CAAUnB,IAAI,CAACoB,mBAAf,EAAoC;AACzDP,MAAAA,IAAI,EAAEI;AADmD,KAApC,CAAvB;AAGAC,IAAAA,QAAQ,CAACd,aAAa,EAAd,CAAR;AACD,GAND,CAME,OAAOK,KAAP,EAAc;AACdS,IAAAA,QAAQ,CAACV,UAAU,EAAX,CAAR;AACD;AACF,CAVM;AAYP,OAAO,MAAMa,YAAY,GAAIJ,SAAD,KAAgB;AAC1Cf,EAAAA,IAAI,EAAEJ,iBAAiB,CAACwB,cADkB;AAE1Cf,EAAAA,OAAO,EAAEU;AAFiC,CAAhB,CAArB","sourcesContent":["import searchActionTypes from \"./search.types\";\nimport axios from \"axios\";\nimport urls from \"../../utils/urls\";\nexport const searchStart = () => ({\n  type: searchActionTypes.SEARCH_START,\n});\nexport const searchSuccess = (listProducts) => ({\n  type: searchActionTypes.SEARCH_SUCCESS,\n  payload: listProducts,\n});\nexport const searchFail = (error) => ({\n  type: searchActionTypes.SEARCH_FAIL,\n  payload: { msg: error.response.data.message, status: error.response.status },\n});\n\nexport const onSearch = (searchKey) => async (dispatch) => {\n  try {\n    dispatch(searchStart());\n    const { data } = await axios.get(urls.SEARCH_PRODUCT_LIST, {\n      data: searchKey,\n    });\n    dispatch(searchSuccess());\n  } catch (error) {\n    dispatch(searchFail());\n  }\n};\n\nexport const setSearchKey = (searchKey) => ({\n  type: searchActionTypes.SET_SEARCH_KEY,\n  payload: searchKey,\n});\n"]},"metadata":{},"sourceType":"module"}