{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/src/components/UI/form-create-product/form-create-product.component.jsx\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Form, FormInline, FormGroup, Label, Input, Required, Option } from \"./form-create-product.styles\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\nimport AppContext from \"../../../context/app-viewport.context\";\nimport { getCategoryList, getProductsListByCategoryId } from \"../../../utils/algorithms\";\nimport category from \"../../../data/category\";\nconst categoryList = getCategoryList();\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 250,\n    width: \"100%\"\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst FormCreateProduct = () => {\n  const classes = useStyles();\n  const [payMethod, setPayMethod] = useState(null);\n  const [category, setCategory] = useState({\n    _id: \"\",\n    name: \"\",\n    linkUrl: \"\",\n    products: []\n  });\n  const [productsGroup, setProductsGroup] = useState([]);\n  const [productsType, setProductsType] = useState(\"\");\n  const [mobileView, setMobileView] = useState(window.innerWidth < 600);\n  const [tabletView, setTabletView] = useState(window.innerWidth < 992 && window.innerWidth >= 660);\n  const width = useContext(AppContext);\n  useEffect(() => {\n    if (width < 660) {\n      setMobileView(true);\n    } else {\n      setMobileView(false);\n    }\n\n    if (width < 992 && width >= 660) {\n      setTabletView(true);\n    } else {\n      setTabletView(false);\n    }\n  }, [width]);\n  useEffect(() => {\n    if (categoryId) {\n      let category = categoryList.find(item => item._id === categoryId);\n      console.log(category);\n      setCategoryName(category.name);\n      setCategoryUrl(category.linkUrl);\n      setProductsGroup([...category.products]);\n    }\n  }, [categoryId]);\n  console.log(productsGroup);\n  return /*#__PURE__*/React.createElement(Form, {\n    mobileView: mobileView,\n    tabletView: tabletView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"age-native-helper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"Lo\\u1EA1i S\\u1EA3n ph\\u1EA9m\"), /*#__PURE__*/React.createElement(NativeSelect, {\n    value: category.name,\n    onChange: handleCategory,\n    inputProps: {\n      name: \"category\",\n      id: \"category-native-helper\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }), categoryList.map(categoryItem => /*#__PURE__*/React.createElement(\"option\", {\n    key: categoryItem._id,\n    value: categoryItem._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, categoryItem.name)))), /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"age-native-helper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, \"Nh\\xF3m S\\u1EA3n ph\\u1EA9m\"), /*#__PURE__*/React.createElement(NativeSelect, {\n    value: productsType,\n    onChange: e => setProductsType(e.target.value),\n    inputProps: {\n      name: 'products',\n      id: 'products-native-helper'\n    },\n    disabled: !productsGroup.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }), productsGroup.map(groupName => /*#__PURE__*/React.createElement(\"option\", {\n    key: groupName,\n    value: groupName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, groupName)))));\n};\n\nexport default FormCreateProduct;","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/src/components/UI/form-create-product/form-create-product.component.jsx"],"names":["React","useState","useEffect","useContext","Form","FormInline","FormGroup","Label","Input","Required","Option","makeStyles","InputLabel","FormHelperText","FormControl","Select","NativeSelect","AppContext","getCategoryList","getProductsListByCategoryId","category","categoryList","useStyles","theme","formControl","margin","spacing","minWidth","width","selectEmpty","marginTop","FormCreateProduct","classes","payMethod","setPayMethod","setCategory","_id","name","linkUrl","products","productsGroup","setProductsGroup","productsType","setProductsType","mobileView","setMobileView","window","innerWidth","tabletView","setTabletView","categoryId","find","item","console","log","setCategoryName","setCategoryUrl","handleCategory","id","map","categoryItem","e","target","value","length","groupName"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport {\n  Form,\n  FormInline,\n  FormGroup,\n  Label,\n  Input,\n  Required,\n  Option,\n} from \"./form-create-product.styles\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\nimport AppContext from \"../../../context/app-viewport.context\";\nimport {\n  getCategoryList,\n  getProductsListByCategoryId,\n} from \"../../../utils/algorithms\";\nimport category from \"../../../data/category\";\n\nconst categoryList = getCategoryList();\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 250,\n    width: \"100%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst FormCreateProduct = () => {\n  const classes = useStyles();\n  const [payMethod, setPayMethod] = useState(null);\n  const [category, setCategory] = useState({_id : \"\", name : \"\", linkUrl : \"\", products : []});\n  const [productsGroup, setProductsGroup] = useState([]);\n  const [productsType, setProductsType] = useState(\"\");\n  const [mobileView, setMobileView] = useState(window.innerWidth < 600);\n  const [tabletView, setTabletView] = useState(\n    window.innerWidth < 992 && window.innerWidth >= 660\n  );\n  const width = useContext(AppContext);\n  useEffect(() => {\n    if (width < 660) {\n      setMobileView(true);\n    } else {\n      setMobileView(false);\n    }\n    if (width < 992 && width >= 660) {\n      setTabletView(true);\n    } else {\n      setTabletView(false);\n    }\n  }, [width]);\n\n  useEffect(() => {    \n    if(categoryId){    \n      let category = categoryList.find(item => item._id === categoryId);\n      console.log(category)\n      setCategoryName(category.name);\n      setCategoryUrl(category.linkUrl);     \n      setProductsGroup([...category.products]);\n    }\n  }, [categoryId])  \n  console.log(productsGroup)\n  return (\n    <Form mobileView={mobileView} tabletView={tabletView}>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor=\"age-native-helper\">Loại Sản phẩm</InputLabel>\n        <NativeSelect\n          value={category.name}\n          onChange={handleCategory}\n          inputProps={{\n            name: \"category\",\n            id: \"category-native-helper\",\n          }}\n        >\n          <option aria-label=\"None\" value=\"\" />\n          {categoryList.map((categoryItem) => (\n            <option key={categoryItem._id} value={categoryItem._id}>\n              {categoryItem.name}\n            </option>\n          ))}\n        </NativeSelect>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor=\"age-native-helper\">Nhóm Sản phẩm</InputLabel>\n        <NativeSelect\n          value={productsType}        \n          onChange={e => setProductsType(e.target.value)}\n          inputProps={{\n            name: 'products',\n            id: 'products-native-helper',\n          }}\n          disabled={!productsGroup.length}\n        >\n          <option aria-label=\"None\" value=\"\" />\n          {productsGroup.map((groupName) => (\n            <option key={groupName} value={groupName}>{groupName}</option>\n          ))}\n        </NativeSelect>    \n      </FormControl>\n     \n    </Form>\n  );\n};\n\nexport default FormCreateProduct;\n"]},"metadata":{},"sourceType":"module"}