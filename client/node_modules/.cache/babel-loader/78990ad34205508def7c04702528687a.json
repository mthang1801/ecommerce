{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Layout/category-menu/category-menu.component.jsx\";\nimport React, { useState, useEffect, useRef, useContext } from \"react\";\nimport { CategoryMenuContainer, DropdownContent, CategoryList, CustomLink } from \"./category-menu.styles\";\nimport CATEGORY_MENU from \"../../../data/menu.json\";\nimport ProductsPopup from \"../products-popup/products-popup.component\";\nimport AppContext from \"../../../context/app-viewport.context\";\nimport { connect } from \"react-redux\";\nimport { selectCategoryList } from \"../../../redux/category/category.selectors\";\nimport { createStructuredSelector } from \"reselect\";\n\nconst CategoryMenu = ({}) => {\n  const categoryList = Object.keys(CATEGORY_MENU).map(key => CATEGORY_MENU[key]);\n  const [ctgId, setCtfId] = useState(null);\n  const [offsetWidth, setOffsetWidth] = useState(0);\n  const [touched, setIsTouched] = useState(false);\n  const [activeLink, setActiveLink] = useState(null);\n  const categoryRef = useRef(null);\n  const listRef = useRef(null);\n  const [smallView, setSmallView] = useState(window.innerWidth < 992);\n  const width = useContext(AppContext);\n  useEffect(() => {\n    if (width < 992) {\n      setSmallView(true);\n    } else {\n      setSmallView(false);\n    }\n\n    setOffsetWidth(categoryRef.current.offsetWidth);\n  }, [width]);\n  useEffect(() => {\n    function removePopupWhenMouseOutListCategory(e) {\n      if (listRef && !listRef.current.contains(e.target)) {\n        setCtfId(null);\n        setIsTouched(false);\n        setActiveLink(null);\n      }\n    }\n\n    document.addEventListener(\"mouseover\", removePopupWhenMouseOutListCategory);\n    return () => document.removeEventListener(\"mouseover\", removePopupWhenMouseOutListCategory);\n  });\n\n  const handleMouseEnter = (e, categoryId) => {\n    setCtfId(categoryId);\n    setIsTouched(true);\n    setActiveLink(categoryId);\n  };\n\n  return /*#__PURE__*/React.createElement(CategoryMenuContainer, {\n    ref: categoryRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CategoryList, {\n    ref: listRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 8\n    }\n  }, categoryList.map(item => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: item._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CustomLink, {\n    onMouseEnter: e => handleMouseEnter(e, item._id),\n    to: item.linkUrl,\n    style: {\n      fontWeight: \"400\",\n      textTransform: \"capitalize\"\n    },\n    active: item._id === activeLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, item.name), /*#__PURE__*/React.createElement(DropdownContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ProductsPopup, {\n    offsetWidth: offsetWidth,\n    categoryId: ctgId,\n    data: CATEGORY_MENU[ctgId],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }))))));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  categoryList: selectCategoryList\n});\nexport default connect(mapStateToProps)(CategoryMenu);","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Layout/category-menu/category-menu.component.jsx"],"names":["React","useState","useEffect","useRef","useContext","CategoryMenuContainer","DropdownContent","CategoryList","CustomLink","CATEGORY_MENU","ProductsPopup","AppContext","connect","selectCategoryList","createStructuredSelector","CategoryMenu","categoryList","Object","keys","map","key","ctgId","setCtfId","offsetWidth","setOffsetWidth","touched","setIsTouched","activeLink","setActiveLink","categoryRef","listRef","smallView","setSmallView","window","innerWidth","width","current","removePopupWhenMouseOutListCategory","e","contains","target","document","addEventListener","removeEventListener","handleMouseEnter","categoryId","item","_id","linkUrl","fontWeight","textTransform","name","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, useContext} from \"react\";\nimport {\n  CategoryMenuContainer,\n  DropdownContent,\n  CategoryList,\n  CustomLink\n} from \"./category-menu.styles\";\nimport CATEGORY_MENU from \"../../../data/menu.json\";\nimport ProductsPopup from \"../products-popup/products-popup.component\";\nimport AppContext from \"../../../context/app-viewport.context\";\nimport {connect} from \"react-redux\";\nimport {selectCategoryList} from \"../../../redux/category/category.selectors\"\nimport {createStructuredSelector} from \"reselect\"\nconst CategoryMenu = ({  }) => {  \n  const categoryList = Object.keys(CATEGORY_MENU).map(key => CATEGORY_MENU[key]);\n  \n  const [ctgId, setCtfId] = useState(null);\n  const [offsetWidth, setOffsetWidth] = useState(0);\n  const [touched, setIsTouched] = useState(false);\n  const [activeLink, setActiveLink] = useState(null);\n  const categoryRef = useRef(null); \n  const listRef = useRef(null);\n  \n  const [smallView, setSmallView] = useState(window.innerWidth < 992);\n  const width = useContext(AppContext);\n  useEffect(() => {\n    if (width < 992) {\n      setSmallView(true);\n    } else {\n      setSmallView(false);\n    }\n    setOffsetWidth(categoryRef.current.offsetWidth);\n  }, [width]);\n\n  useEffect(() => {\n    function removePopupWhenMouseOutListCategory(e) {\n      if (listRef && !listRef.current.contains(e.target)) {\n        setCtfId(null);\n        setIsTouched(false);\n        setActiveLink(null);\n      }\n    }\n    document.addEventListener(\"mouseover\", removePopupWhenMouseOutListCategory);\n    return () =>\n      document.removeEventListener(\n        \"mouseover\",\n        removePopupWhenMouseOutListCategory\n      );\n  });\n\n  const handleMouseEnter = (e, categoryId) => {\n    setCtfId(categoryId);\n    setIsTouched(true);\n    setActiveLink(categoryId);    \n  };    \n  \n  return (  \n    <CategoryMenuContainer ref={categoryRef} >    \n       <CategoryList ref={listRef}>\n        {categoryList.map((item) => (\n          <React.Fragment key={item._id}>\n            <CustomLink\n              onMouseEnter={(e) => handleMouseEnter(e, item._id)}             \n              to={item.linkUrl}\n              style={{ fontWeight: \"400\", textTransform: \"capitalize\" }}\n              active={item._id === activeLink}\n            >\n              {item.name}\n            </CustomLink>            \n            <DropdownContent>\n              {(\n                <ProductsPopup                  \n                  offsetWidth={offsetWidth}\n                  categoryId={ctgId}                 \n                  data={CATEGORY_MENU[ctgId]}\n                />\n              )} \n            </DropdownContent>\n          </React.Fragment>\n        ))}\n        \n      </CategoryList> \n    </CategoryMenuContainer>\n  );\n};\nconst mapStateToProps = createStructuredSelector({\n  categoryList : selectCategoryList\n})\nexport default connect(mapStateToProps)(CategoryMenu);\n"]},"metadata":{},"sourceType":"module"}