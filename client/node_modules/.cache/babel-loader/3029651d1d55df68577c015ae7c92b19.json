{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Checkout/checkout-overview/checkout-overview.component.jsx\";\nimport React, { useState, useEffect, useContext, createRef } from \"react\";\nimport { CheckoutOverviewContainer, Title, CheckoutPreview, Grid } from \"./checkout-overview.styles\";\nimport UpdateUserForm from \"../update-user-form/update-user-form.component\";\nimport CheckoutForm from \"../check-out-form/check-out-form.component\";\nimport OrderForm from \"../order-form/order-form.component\";\nimport AppContext from \"../../../context/app-viewport.context\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectCurrentUser, selectUserLoading } from \"../../../redux/user/user.selectors\";\nimport { selectCountItem } from \"../../../redux/cart/cart.selectors\";\nimport { connect } from \"react-redux\";\nimport { Redirect, withRouter } from \"react-router-dom\";\nimport CheckoutPayment from \"../checkout-payment/checkout-payment.component\";\nimport { selectCartItems } from \"../../../redux/cart/cart.selectors\";\n\nconst CheckoutOverview = ({\n  currentUser,\n  match,\n  countItem,\n  loading,\n  cartItems\n}) => {\n  const [showOrder, setShowOrder] = useState(false);\n  const [showPayment, setShowPayment] = useState(false);\n  const [mobileView, setMobileView] = useState(window.innerWidth < 768);\n  const [error, setError] = useState(null);\n  const [tabletView, setTabletView] = useState(window.innerWidth < 992 && window.innerWidth >= 768);\n  const orderFormRef = createRef(null);\n  const width = useContext(AppContext);\n  useEffect(() => {\n    if (width < 768) {\n      setMobileView(true);\n    } else {\n      setMobileView(false);\n    }\n\n    if (width < 992 && width >= 768) {\n      setTabletView(true);\n    } else {\n      setTabletView(false);\n    }\n\n    if (orderFormRef.current) {\n      window.scrollTo({\n        top: orderFormRef.current.offsetTop,\n        behavior: \"smooth\"\n      });\n    }\n  }, [width, orderFormRef]);\n  return /*#__PURE__*/React.createElement(CheckoutOverviewContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CheckoutPreview, {\n    mobileView: mobileView,\n    tabletView: tabletView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    w60: true,\n    mobileView: mobileView,\n    tabletView: tabletView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, error & /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 20\n    }\n  }, error), /*#__PURE__*/React.createElement(CheckoutForm, {\n    currentUser: currentUser,\n    showOrder: showOrder,\n    setShowOrder: () => setShowOrder(true),\n    showPayment: showPayment,\n    setShowPayment: () => setShowPayment(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }), currentUser && cartItems && showPayment && /*#__PURE__*/React.createElement(CheckoutPayment, {\n    currentUser: currentUser,\n    cartItems: cartItems,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  })), showOrder && /*#__PURE__*/React.createElement(Grid, {\n    mobileView: mobileView,\n    tabletView: tabletView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(OrderForm, {\n    ref: orderFormRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }))));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  countItem: selectCountItem,\n  loading: selectUserLoading,\n  cartItems: selectCartItems\n});\nexport default connect(mapStateToProps)(withRouter(CheckoutOverview));","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Checkout/checkout-overview/checkout-overview.component.jsx"],"names":["React","useState","useEffect","useContext","createRef","CheckoutOverviewContainer","Title","CheckoutPreview","Grid","UpdateUserForm","CheckoutForm","OrderForm","AppContext","createStructuredSelector","selectCurrentUser","selectUserLoading","selectCountItem","connect","Redirect","withRouter","CheckoutPayment","selectCartItems","CheckoutOverview","currentUser","match","countItem","loading","cartItems","showOrder","setShowOrder","showPayment","setShowPayment","mobileView","setMobileView","window","innerWidth","error","setError","tabletView","setTabletView","orderFormRef","width","current","scrollTo","top","offsetTop","behavior","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, createRef } from \"react\";\nimport {\n  CheckoutOverviewContainer,\n  Title,\n  CheckoutPreview,\n  Grid,\n} from \"./checkout-overview.styles\";\nimport UpdateUserForm from \"../update-user-form/update-user-form.component\";\nimport CheckoutForm from \"../check-out-form/check-out-form.component\";\n\nimport OrderForm from \"../order-form/order-form.component\";\nimport AppContext from \"../../../context/app-viewport.context\";\nimport { createStructuredSelector } from \"reselect\";\nimport {\n  selectCurrentUser,\n  selectUserLoading,\n} from \"../../../redux/user/user.selectors\";\nimport { selectCountItem } from \"../../../redux/cart/cart.selectors\";\nimport { connect } from \"react-redux\";\nimport { Redirect, withRouter } from \"react-router-dom\";\nimport CheckoutPayment from \"../checkout-payment/checkout-payment.component\";\nimport { selectCartItems } from \"../../../redux/cart/cart.selectors\";\nconst CheckoutOverview = ({\n  currentUser,\n  match,\n  countItem,\n  loading,\n  cartItems,\n}) => {\n  const [showOrder, setShowOrder] = useState(false);\n  const [showPayment, setShowPayment] = useState(false);\n  const [mobileView, setMobileView] = useState(window.innerWidth < 768);\n  const [error, setError] = useState(null)\n  const [tabletView, setTabletView] = useState(\n    window.innerWidth < 992 && window.innerWidth >= 768\n  );\n  const orderFormRef = createRef(null);\n  const width = useContext(AppContext);\n  useEffect(() => {\n    if (width < 768) {\n      setMobileView(true);\n    } else {\n      setMobileView(false);\n    }\n    if (width < 992 && width >= 768) {\n      setTabletView(true);\n    } else {\n      setTabletView(false);\n    }\n    if (orderFormRef.current) {\n      window.scrollTo({\n        top: orderFormRef.current.offsetTop,\n        behavior: \"smooth\",\n      });\n    }\n  }, [width, orderFormRef]);\n\n  return (\n    <CheckoutOverviewContainer>\n      <CheckoutPreview mobileView={mobileView} tabletView={tabletView}>\n        <Grid w60 mobileView={mobileView} tabletView={tabletView}>\n          {error & <h4>{error}</h4>}\n          <CheckoutForm            \n            currentUser={currentUser}\n            showOrder={showOrder}\n            setShowOrder={() => setShowOrder(true)}\n            showPayment={showPayment}\n            setShowPayment={() => setShowPayment(true)}\n          />\n          {currentUser && cartItems && showPayment && (\n            <CheckoutPayment currentUser={currentUser} cartItems={cartItems} />\n          )}\n        </Grid>\n        {showOrder && (\n          <Grid mobileView={mobileView} tabletView={tabletView}>\n            <OrderForm ref={orderFormRef} />\n          </Grid>\n        )}\n      </CheckoutPreview>\n    </CheckoutOverviewContainer>\n  );\n};\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  countItem: selectCountItem,\n  loading: selectUserLoading,\n  cartItems: selectCartItems,\n});\nexport default connect(mapStateToProps)(withRouter(CheckoutOverview));\n"]},"metadata":{},"sourceType":"module"}