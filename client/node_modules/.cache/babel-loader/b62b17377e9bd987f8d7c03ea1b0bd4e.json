{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/pages/product-group/product-group.component.jsx\";\nimport React, { useEffect } from \"react\";\nimport { ProductGroupWrapper } from \"./product-group.styles\";\nimport { default as ProductGroupOverview } from \"../../components/ProductGroup/product-group-overview/product-group-overview.container\";\nimport MasterHeader from \"../../components/Layout/master-header/master-header.component\";\nimport Background from \"../../components/Layout/background/background.component\";\nimport { fetchProductGroup, fetchProductList } from \"../../redux/product-group/product-group.actions\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectProductFetched, selectProductGroupError, selectProductGroupLoading, selectName } from \"../../redux/product-group/product-group.selectors\";\nimport PageNotFound from \"../page-not-found/page-not-found.component\";\nimport Loader from \"../../components/UI/loader/loader.component\";\n\nconst ProductGroupPage = ({\n  match,\n  location,\n  fetchProductGroup,\n  fetchProductList,\n  loading,\n  error,\n  fetched,\n  name\n}) => {\n  useEffect(() => {\n    let page = +location.search.split(\"=\")[1] || 1;\n    let {\n      categoryUrl,\n      productTypeUrl,\n      productGroupUrl\n    } = match.params;\n    console.log(location);\n\n    if (location.search && fetched) {\n      fetchProductList(categoryUrl, productTypeUrl, productGroupUrl, page);\n      return;\n    }\n\n    fetchProductGroup(categoryUrl, productTypeUrl, productGroupUrl, page);\n  }, [fetchProductGroup, fetchProductList, location.search, match.params.categoryUrl, match.params.productTypeUrl, match.params.productGroupUrl]);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (error && error.status == 404) {\n    return /*#__PURE__*/React.createElement(PageNotFound, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(ProductGroupWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MasterHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Background, {\n    label: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ProductTypeOverview, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  error: selectProductGroupError,\n  loading: selectProductGroupLoading,\n  fetched: selectProductFetched,\n  name: selectName\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchProductGroup: (categoryUrl, productTypeUrl, productGroupUrl, page) => dispatch(fetchProductGroup(categoryUrl, productTypeUrl, productGroupUrl, page)),\n  fetchProductList: (categoryUrl, productTypeUrl, productGroupUrl, page) => dispatch(fetchProductList(categoryUrl, productTypeUrl, productGroupUrl, page))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductGroupPage);","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/pages/product-group/product-group.component.jsx"],"names":["React","useEffect","ProductGroupWrapper","default","ProductGroupOverview","MasterHeader","Background","fetchProductGroup","fetchProductList","connect","createStructuredSelector","selectProductFetched","selectProductGroupError","selectProductGroupLoading","selectName","PageNotFound","Loader","ProductGroupPage","match","location","loading","error","fetched","name","page","search","split","categoryUrl","productTypeUrl","productGroupUrl","params","console","log","status","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { ProductGroupWrapper } from \"./product-group.styles\";\nimport { default as ProductGroupOverview } from \"../../components/ProductGroup/product-group-overview/product-group-overview.container\";\nimport MasterHeader from \"../../components/Layout/master-header/master-header.component\";\nimport Background from \"../../components/Layout/background/background.component\";\nimport {\n  fetchProductGroup,\n  fetchProductList,\n} from \"../../redux/product-group/product-group.actions\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport {  \n  selectProductFetched,\n  selectProductGroupError,\n  selectProductGroupLoading,\n  selectName\n} from \"../../redux/product-group/product-group.selectors\";\nimport PageNotFound from \"../page-not-found/page-not-found.component\";\nimport Loader from \"../../components/UI/loader/loader.component\";\nconst ProductGroupPage = ({\n  match,\n  location,\n  fetchProductGroup,\n  fetchProductList,\n  loading,\n  error,\n  fetched,\n  name,\n}) => {\n  useEffect(() => {\n    let page = +location.search.split(\"=\")[1] || 1;    \n    let { categoryUrl, productTypeUrl, productGroupUrl } = match.params; \n    console.log(location);\n    if (location.search && fetched) {\n      fetchProductList(categoryUrl, productTypeUrl, productGroupUrl, page);\n      return;\n    }\n    fetchProductGroup(categoryUrl, productTypeUrl, productGroupUrl, page);\n  }, [\n    fetchProductGroup,\n    fetchProductList,\n    location.search,\n    match.params.categoryUrl,\n    match.params.productTypeUrl,\n    match.params.productGroupUrl\n  ]);\n  if (loading) {\n    return <Loader />;\n  }\n  if (error && error.status == 404) {\n    return <PageNotFound />;\n  }\n  return (\n    <ProductGroupWrapper>\n      <MasterHeader />\n      <Background label={name} />\n      <ProductTypeOverview />\n    </ProductGroupWrapper>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  error: selectProductGroupError,\n  loading: selectProductGroupLoading,  \n  fetched: selectProductFetched,\n  name: selectName,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  fetchProductGroup: (categoryUrl, productTypeUrl, productGroupUrl, page) => dispatch(fetchProductGroup(categoryUrl, productTypeUrl, productGroupUrl, page)),\n  fetchProductList: (categoryUrl, productTypeUrl, productGroupUrl, page) => dispatch(fetchProductList(categoryUrl, productTypeUrl, productGroupUrl, page)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductGroupPage);\n"]},"metadata":{},"sourceType":"module"}