{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Layout/pagination/pagination.component.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { PaginationContainer, PageLink } from \"./pagination.styles\";\nimport { withRouter } from \"react-router-dom\";\nimport { setCurrentPage } from \"../../../redux/category/category.actions\";\nimport { connect } from \"react-redux\";\nimport Paginate from \"../../UI/paginate/paginate.component\";\n\nconst Pagination = ({\n  currentPage,\n  numPages,\n  match,\n  history,\n  location,\n  setCurrentPage\n}) => {\n  const [initialPage, setInitialPage] = useState(true);\n\n  const movePage = page => {\n    const pathName = location.pathname.split(\"/\")[1];\n    history.push(`/${pathName}/products?page=${page}`);\n    setCurrentPage(page);\n  };\n\n  const handlePageClick = data => {\n    if (!initialPage) {\n      const currentPage = data.selected + 1;\n      return movePage(currentPage);\n    }\n\n    return setInitialPage(!initialPage);\n  };\n\n  return /*#__PURE__*/React.createElement(PaginationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paginate, {\n    numPages: numPages,\n    handlePageClick: handlePageClick,\n    currentPage: currentPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentPage: page => dispatch(setCurrentPage(page))\n});\n\nexport default connect(null, mapDispatchToProps)(withRouter(Pagination));","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Layout/pagination/pagination.component.jsx"],"names":["React","useState","useEffect","PaginationContainer","PageLink","withRouter","setCurrentPage","connect","Paginate","Pagination","currentPage","numPages","match","history","location","initialPage","setInitialPage","movePage","page","pathName","pathname","split","push","handlePageClick","data","selected","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,mBAAT,EAA8BC,QAA9B,QAA8C,qBAA9C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,cAAT,QAA+B,0CAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,sCAArB;;AACA,MAAMC,UAAU,GAAG,CAAC;AAClBC,EAAAA,WADkB;AAElBC,EAAAA,QAFkB;AAGlBC,EAAAA,KAHkB;AAIlBC,EAAAA,OAJkB;AAKlBC,EAAAA,QALkB;AAMlBR,EAAAA;AANkB,CAAD,KAOb;AACJ,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,IAAD,CAA9C;;AACA,QAAMgB,QAAQ,GAAGC,IAAI,IAAI;AACvB,UAAMC,QAAQ,GAAGL,QAAQ,CAACM,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CAAjB;AACAR,IAAAA,OAAO,CAACS,IAAR,CAAc,IAAGH,QAAS,kBAAiBD,IAAK,EAAhD;AACAZ,IAAAA,cAAc,CAACY,IAAD,CAAd;AACD,GAJD;;AAKA,QAAMK,eAAe,GAAIC,IAAD,IAAU;AAChC,QAAG,CAACT,WAAJ,EAAgB;AACd,YAAML,WAAW,GAAGc,IAAI,CAACC,QAAL,GAAe,CAAnC;AACA,aAAOR,QAAQ,CAACP,WAAD,CAAf;AACD;;AACD,WAAOM,cAAc,CAAC,CAACD,WAAF,CAArB;AACD,GAND;;AAQA,sBACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEJ,QAApB;AAA8B,IAAA,eAAe,EAAEY,eAA/C;AAAgE,IAAA,WAAW,EAAEb,WAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CA3BD;;AA6BA,MAAMgB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCrB,EAAAA,cAAc,EAAGY,IAAI,IAAIS,QAAQ,CAACrB,cAAc,CAACY,IAAD,CAAf;AADK,CAAL,CAAnC;;AAGA,eAAeX,OAAO,CAAC,IAAD,EAAOmB,kBAAP,CAAP,CAAkCrB,UAAU,CAACI,UAAD,CAA5C,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { PaginationContainer, PageLink } from \"./pagination.styles\";\nimport { withRouter } from \"react-router-dom\";\nimport { setCurrentPage } from \"../../../redux/category/category.actions\";\nimport { connect } from \"react-redux\";\nimport Paginate from \"../../UI/paginate/paginate.component\";\nconst Pagination = ({\n  currentPage,\n  numPages,\n  match,\n  history,\n  location,\n  setCurrentPage,\n}) => {  \n  const [initialPage, setInitialPage] = useState(true);\n  const movePage = page => {\n    const pathName = location.pathname.split(\"/\")[1];\n    history.push(`/${pathName}/products?page=${page}`);\n    setCurrentPage(page);\n  }\n  const handlePageClick = (data) => {   \n    if(!initialPage){\n      const currentPage = data.selected +1 ; \n      return movePage(currentPage);\n    }\n    return setInitialPage(!initialPage);\n  };\n \n  return (\n    <PaginationContainer>     \n      <Paginate numPages={numPages} handlePageClick={handlePageClick} currentPage={currentPage}/>\n    </PaginationContainer>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentPage : page => dispatch(setCurrentPage(page))\n})\nexport default connect(null, mapDispatchToProps)(withRouter(Pagination));\n"]},"metadata":{},"sourceType":"module"}