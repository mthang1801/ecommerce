{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/pages/product-type/product-type.component.jsx\";\nimport React, { useEffect } from 'react';\nimport { ProductTypeWrapper } from \"./product-type.styles\";\nimport { default as CategoryOverview } from \"../../components/Category/category-overview/category-overview.container\";\nimport MasterHeader from \"../../components/Layout/master-header/master-header.component\";\nimport Background from \"../../components/Layout/background/background.component\";\nimport { fetchProductType } from \"../../redux/product-type/product-type.actions\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectCategoryError, selectCategoryLoading, selectCategoryList, selectProductFetched } from \"../../redux/category/category.selectors\";\nimport PageNotFound from \"../page-not-found/page-not-found.component\";\nimport Loader from \"../../components/UI/loader/loader.component\";\n\nconst CategoryPage = ({\n  match\n}) => {\n  useEffect(() => {\n    let page = 1;\n    let categoryUrl = match.params.categoryUrl;\n\n    if (location.search && fetched) {\n      page = +location.search.split(\"=\")[1];\n      fetchProductList(categoryUrl, page);\n      return;\n    }\n\n    fetchCategory(categoryUrl, page);\n  }, [fetchCategory, location.search, match.params.categoryUrl]);\n  return /*#__PURE__*/React.createElement(ProductTypeWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, \"ProductType\");\n};\n\nexport default CategoryPage;","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/pages/product-type/product-type.component.jsx"],"names":["React","useEffect","ProductTypeWrapper","default","CategoryOverview","MasterHeader","Background","fetchProductType","connect","createStructuredSelector","selectCategoryError","selectCategoryLoading","selectCategoryList","selectProductFetched","PageNotFound","Loader","CategoryPage","match","page","categoryUrl","params","location","search","fetched","split","fetchProductList","fetchCategory"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,kBAAR,QAAiC,uBAAjC;AACA,SAAQC,OAAO,IAAIC,gBAAnB,QAA0C,yEAA1C;AACA,OAAOC,YAAP,MAAyB,+DAAzB;AACA,OAAOC,UAAP,MAAuB,yDAAvB;AACA,SAAQC,gBAAR,QAA+B,+CAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAAQC,mBAAR,EAA6BC,qBAA7B,EAAqDC,kBAArD,EAAyEC,oBAAzE,QAAoG,yCAApG;AACA,OAAOC,YAAP,MAAyB,4CAAzB;AACA,OAAOC,MAAP,MAAmB,6CAAnB;;AACA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAChChB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIiB,IAAI,GAAG,CAAX;AACA,QAAIC,WAAW,GAAGF,KAAK,CAACG,MAAN,CAAaD,WAA/B;;AAEA,QAAGE,QAAQ,CAACC,MAAT,IAAmBC,OAAtB,EAA8B;AAC5BL,MAAAA,IAAI,GAAG,CAACG,QAAQ,CAACC,MAAT,CAAgBE,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAR;AACAC,MAAAA,gBAAgB,CAACN,WAAD,EAAcD,IAAd,CAAhB;AACA;AACD;;AACDQ,IAAAA,aAAa,CAACP,WAAD,EAAcD,IAAd,CAAb;AAEH,GAXU,EAWR,CAACQ,aAAD,EAAgBL,QAAQ,CAACC,MAAzB,EAAiCL,KAAK,CAACG,MAAN,CAAaD,WAA9C,CAXQ,CAAT;AAYA,sBACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF;AAKD,CAlBD;;AAoBA,eAAeH,YAAf","sourcesContent":["import React, {useEffect} from 'react'\nimport {ProductTypeWrapper} from \"./product-type.styles\";\nimport {default as CategoryOverview} from \"../../components/Category/category-overview/category-overview.container\";\nimport MasterHeader from \"../../components/Layout/master-header/master-header.component\"\nimport Background from \"../../components/Layout/background/background.component\"\nimport {fetchProductType} from \"../../redux/product-type/product-type.actions\";\nimport {connect} from \"react-redux\";\nimport {createStructuredSelector} from \"reselect\";\nimport {selectCategoryError, selectCategoryLoading , selectCategoryList, selectProductFetched} from \"../../redux/category/category.selectors\"\nimport PageNotFound from \"../page-not-found/page-not-found.component\"\nimport Loader from \"../../components/UI/loader/loader.component\"\nconst CategoryPage = ({match}) => {\n  useEffect(() => {\n    let page = 1 ; \n    let categoryUrl = match.params.categoryUrl\n  \n    if(location.search && fetched){\n      page = +location.search.split(\"=\")[1];       \n      fetchProductList(categoryUrl, page);\n      return ; \n    }         \n    fetchCategory(categoryUrl, page);\n                  \n}, [fetchCategory, location.search, match.params.categoryUrl]);\n  return (\n    <ProductTypeWrapper>\n      ProductType\n    </ProductTypeWrapper>\n  )\n}\n\nexport default CategoryPage\n"]},"metadata":{},"sourceType":"module"}