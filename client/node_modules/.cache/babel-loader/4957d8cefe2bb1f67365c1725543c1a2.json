{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/src/components/UI/form-create-product/form-create-product.component.jsx\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Form, FormInline, FormGroup, Label, Input, Select, Required, Option } from \"./form-create-product.styles\";\nimport AppContext from \"../../../context/app-viewport.context\";\nimport { getCategoryList, getProductsListByCategoryId } from \"../../../utils/algorithms\";\nconst categoryList = getCategoryList();\n\nconst FormCreateProduct = () => {\n  const [category, setCategory] = useState({\n    _id: \"\",\n    name: \"\",\n    linkUrl: \"\",\n    products: []\n  });\n  const [productsGroup, setProductsGroup] = useState([]);\n  const [productsType, setProductsType] = useState(\"\");\n  const [mobileView, setMobileView] = useState(window.innerWidth < 600);\n  const [tabletView, setTabletView] = useState(window.innerWidth < 992 && window.innerWidth >= 660);\n  const width = useContext(AppContext);\n  useEffect(() => {\n    if (width < 660) {\n      setMobileView(true);\n    } else {\n      setMobileView(false);\n    }\n\n    if (width < 992 && width >= 660) {\n      setTabletView(true);\n    } else {\n      setTabletView(false);\n    }\n  }, [width]);\n\n  const handleCategory = e => {\n    const category = categoryList.find(item => item._id === e.target.value);\n\n    if (category) {\n      setCategory({ ...category,\n        _id: category._id,\n        name: category.name,\n        linkUrl: category.linkUrl,\n        products: category.products\n      });\n    } else {\n      setCategory({\n        _id: \"\",\n        name: \"\",\n        linkUrl: \"\",\n        products: []\n      });\n    }\n  };\n\n  console.log(category);\n  return /*#__PURE__*/React.createElement(Form, {\n    mobileView: mobileView,\n    tabletView: tabletView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"Lo\\u1EA1i s\\u1EA3n ph\\u1EA9m\"), /*#__PURE__*/React.createElement(Select, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, categoryList.map(item => /*#__PURE__*/React.createElement(Option, {\n    key: item._id,\n    value: item._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, item.name)))));\n};\n\nexport default FormCreateProduct;","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/src/components/UI/form-create-product/form-create-product.component.jsx"],"names":["React","useState","useEffect","useContext","Form","FormInline","FormGroup","Label","Input","Select","Required","Option","AppContext","getCategoryList","getProductsListByCategoryId","categoryList","FormCreateProduct","category","setCategory","_id","name","linkUrl","products","productsGroup","setProductsGroup","productsType","setProductsType","mobileView","setMobileView","window","innerWidth","tabletView","setTabletView","width","handleCategory","e","find","item","target","value","console","log","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport {\n  Form,\n  FormInline,\n  FormGroup,\n  Label,\n  Input,\n  Select,\n  Required,\n  Option,\n} from \"./form-create-product.styles\";\nimport AppContext from \"../../../context/app-viewport.context\";\nimport {\n  getCategoryList,\n  getProductsListByCategoryId,\n} from \"../../../utils/algorithms\";\n\nconst categoryList = getCategoryList();\n\n\nconst FormCreateProduct = () => {\n  const [category, setCategory] = useState({\n    _id: \"\",\n    name: \"\",\n    linkUrl: \"\",\n    products: [],\n  });\n  const [productsGroup, setProductsGroup] = useState([]);\n  const [productsType, setProductsType] = useState(\"\");\n  const [mobileView, setMobileView] = useState(window.innerWidth < 600);\n  const [tabletView, setTabletView] = useState(\n    window.innerWidth < 992 && window.innerWidth >= 660\n  );\n  const width = useContext(AppContext);\n  useEffect(() => {\n    if (width < 660) {\n      setMobileView(true);\n    } else {\n      setMobileView(false);\n    }\n    if (width < 992 && width >= 660) {\n      setTabletView(true);\n    } else {\n      setTabletView(false);\n    }\n  }, [width]);\n\n  const handleCategory = (e) => {\n    const  category  =categoryList.find(\n      (item) => item._id === e.target.value\n    );\n    if (category) {\n      setCategory({\n        ...category,\n        _id: category._id,\n        name: category.name,\n        linkUrl: category.linkUrl,\n        products: category.products,\n      });\n    } else {\n      setCategory({ _id: \"\", name: \"\", linkUrl: \"\", products: [] });\n    }\n  };\n  console.log(category)\n  return (\n    <Form mobileView={mobileView} tabletView={tabletView}>\n      <FormGroup>\n        <Label>Loại sản phẩm</Label>\n        <Select>          \n          {categoryList.map( (item) => (\n            <Option key={item._id} value={item._id}>{item.name}</Option>\n          ))}\n        </Select>\n      </FormGroup>\n    </Form>\n  );\n};\n\nexport default FormCreateProduct;\n"]},"metadata":{},"sourceType":"module"}