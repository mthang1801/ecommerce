{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Seller/register-form/register-form.component.jsx\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Form, FormInline, FormGroup, Label, Input, Required, Select, Option } from \"./register-form.styles\";\nimport AppContext from \"../../../context/app-viewport.context\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectCurrentUser } from \"../../../redux/user/user.selectors\";\nimport { PaymentInputsWrapper, usePaymentInputs } from 'react-payment-inputs';\nimport images from 'react-payment-inputs/images';\nimport { getListCities, getListDistricts } from \"../../../utils/algorithms\";\nimport Loader from \"../../UI/loader/loader.component\";\n\nconst RegisterForm = ({\n  user\n}) => {\n  const {\n    wrapperProps,\n    getCardImageProps,\n    getCardNumberProps,\n    getExpiryDateProps,\n    getCVCProps\n  } = usePaymentInputs();\n  const [cardNumber, setCardNumber] = useState(\"\");\n  const [expiryDate, setExpiryDate] = useState(\"\");\n  const [cvc, setCvc] = useState(\"\");\n  const [payMethod, setPayMethod] = useState(null);\n  const [mobileView, setMobileView] = useState(window.innerWidth < 600);\n  const [listCities, setListCites] = useState([]);\n  const [listDistricts, setListDistricts] = useState([]);\n  const [selectedCity, setSelectedCity] = useState({\n    ID: \"\",\n    SolrID: \"\",\n    Title: \"\"\n  });\n  const [selectedDist, setSelectedDist] = useState({\n    ID: \"\",\n    SolrID: \"\",\n    Title: \"\"\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [tabletView, setTabletView] = useState(window.innerWidth < 992 && window.innerWidth >= 660);\n  const width = useContext(AppContext);\n  useEffect(() => {\n    if (width < 660) {\n      setMobileView(true);\n    } else {\n      setMobileView(false);\n    }\n\n    if (width < 992 && width >= 660) {\n      setTabletView(true);\n    } else {\n      setTabletView(false);\n    }\n  }, [width]);\n  useEffect(() => {\n    getListCities().then(listCities => {\n      setListCites(listCities);\n      setLoading(false);\n    }).catch(err => {\n      setError(err);\n      setLoading(false);\n    });\n  }, [getListCities]);\n\n  const handleChangeCity = e => {\n    setLoading(true);\n    const index = e.nativeEvent.target.selectedIndex;\n    setSelectedCity({\n      ID: e.target.value,\n      SolrID: e.target.childNodes[index].dataset.url,\n      Title: e.nativeEvent.target[index].text\n    });\n    getListDistricts(e.target.value).then(data => {\n      setListDistricts(data);\n      setLoading(false);\n    }).catch(err => {\n      setError(err);\n      setLoading(false);\n    });\n  };\n\n  const handleChangeCardNumber = e => {\n    setCardNumber(e.target.value);\n  };\n\n  const handleChangeExpiryDate = e => {\n    setExpiryDate(e.target.value);\n  };\n\n  const handleChangeCVC = e => {\n    setCvc(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, loading && /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    mobileView: mobileView,\n    tabletView: tabletView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, error && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, error), /*#__PURE__*/React.createElement(FormInline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"first_name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"H\\u1ECD\", /*#__PURE__*/React.createElement(Required, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(Input, {\n    name: \"first_name\",\n    id: \"first_name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"last_name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, \"T\\xEAn\", /*#__PURE__*/React.createElement(Required, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 16\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(Input, {\n    name: \"last_name\",\n    id: \"last_name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    defaultValue: selectedCity.ID,\n    onChange: handleChangeCity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    value: selectedCity.ID,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, \"--Ch\\u1ECDn th\\xE0nh ph\\u1ED1--\"), listCities.map(city => /*#__PURE__*/React.createElement(Option, {\n    value: city.ID,\n    \"data-url\": city.SolrID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, city.Title)))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"address\",\n    placeholder: \"Qu\\u1EADn Huy\\u1EC7n\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"apartment\",\n    placeholder: \"\\u0110\\u01B0\\u1EDDng, Ph\\u01B0\\u1EDDng X\\xE3, S\\u1ED1 nh\\xE0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FormInline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"phone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, \"S\\u1ED1 \\u0111i\\u1EC7n tho\\u1EA1i\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"phone1\",\n    id: \"phone1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    value: user.email,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(PaymentInputsWrapper, Object.assign({}, wrapperProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"svg\", Object.assign({}, getCardImageProps({\n    images\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getCardNumberProps({\n    onChange: handleChangeCardNumber\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getExpiryDateProps({\n    onChange: handleChangeExpiryDate\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getCVCProps({\n    onChange: handleChangeCVC\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  })))));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  user: selectCurrentUser\n});\nexport default connect(mapStateToProps)(RegisterForm);","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Seller/register-form/register-form.component.jsx"],"names":["React","useState","useEffect","useContext","Form","FormInline","FormGroup","Label","Input","Required","Select","Option","AppContext","connect","createStructuredSelector","selectCurrentUser","PaymentInputsWrapper","usePaymentInputs","images","getListCities","getListDistricts","Loader","RegisterForm","user","wrapperProps","getCardImageProps","getCardNumberProps","getExpiryDateProps","getCVCProps","cardNumber","setCardNumber","expiryDate","setExpiryDate","cvc","setCvc","payMethod","setPayMethod","mobileView","setMobileView","window","innerWidth","listCities","setListCites","listDistricts","setListDistricts","selectedCity","setSelectedCity","ID","SolrID","Title","selectedDist","setSelectedDist","loading","setLoading","error","setError","tabletView","setTabletView","width","then","catch","err","handleChangeCity","e","index","nativeEvent","target","selectedIndex","value","childNodes","dataset","url","text","data","handleChangeCardNumber","handleChangeExpiryDate","handleChangeCVC","color","map","city","email","onChange","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport {\n  Form,\n  FormInline,\n  FormGroup,\n  Label,\n  Input,\n  Required,\n  Select,\n  Option,\n} from \"./register-form.styles\";\nimport AppContext from \"../../../context/app-viewport.context\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectCurrentUser } from \"../../../redux/user/user.selectors\";\nimport { PaymentInputsWrapper, usePaymentInputs } from 'react-payment-inputs';\nimport images from 'react-payment-inputs/images';\nimport {getListCities, getListDistricts} from \"../../../utils/algorithms\";\nimport Loader from \"../../UI/loader/loader.component\";\nconst RegisterForm = ({ user }) => {\n  const {\n    wrapperProps,\n    getCardImageProps,\n    getCardNumberProps,\n    getExpiryDateProps,\n    getCVCProps\n  } = usePaymentInputs();\n  const [cardNumber, setCardNumber] = useState(\"\");\n  const [expiryDate, setExpiryDate] = useState(\"\");\n  const [cvc, setCvc] = useState(\"\");\n  const [payMethod, setPayMethod] = useState(null);\n  const [mobileView, setMobileView] = useState(window.innerWidth < 600);\n  const [listCities, setListCites] = useState([]);\n  const [listDistricts, setListDistricts] = useState([]);\n  const [selectedCity, setSelectedCity] = useState({ID : \"\", SolrID : \"\", Title : \"\"});\n  const [selectedDist, setSelectedDist] = useState({ID : \"\", SolrID : \"\", Title : \"\"});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [tabletView, setTabletView] = useState(\n    window.innerWidth < 992 && window.innerWidth >= 660\n  );\n  const width = useContext(AppContext);\n  useEffect(() => {\n    if (width < 660) {\n      setMobileView(true);\n    } else {\n      setMobileView(false);\n    }\n    if (width < 992 && width >= 660) {\n      setTabletView(true);\n    } else {\n      setTabletView(false);\n    }\n  }, [width]);\n\n  useEffect(() => {    \n    getListCities().then(listCities => {\n      setListCites(listCities);\n      setLoading(false);\n    }).catch(err => {\n      setError(err);\n      setLoading(false);\n    })\n  },[getListCities]);\n\n  const handleChangeCity = e => {\n    setLoading(true);\n    const index = e.nativeEvent.target.selectedIndex;   \n    setSelectedCity({ID : e.target.value, SolrID : e.target.childNodes[index].dataset.url ,Title: e.nativeEvent.target[index].text});\n    getListDistricts(e.target.value).then(data => {      \n      setListDistricts(data);\n      setLoading(false);\n    })\n    .catch(err => {\n      setError(err);\n      setLoading(false);\n    })\n  }\n  \n\n  const handleChangeCardNumber = e => {\n    setCardNumber(e.target.value)\n  }\n  const handleChangeExpiryDate = e => {\n    setExpiryDate(e.target.value)\n  }\n  const handleChangeCVC = e => {\n    setCvc(e.target.value)\n  }\n  return (\n    <React.Fragment>\n    {loading && <Loader/>}\n    <Form mobileView={mobileView} tabletView={tabletView}>\n      {error && <div style={{color : \"red\"}}>{error}</div>}\n      <FormInline>\n        <FormGroup>\n          <Label htmlFor=\"first_name\">\n            Họ<Required>*</Required>\n          </Label>\n          <Input name=\"first_name\" id=\"first_name\" />\n        </FormGroup>\n        <FormGroup>\n          <Label htmlFor=\"last_name\">\n            Tên<Required>*</Required>\n          </Label>\n          <Input name=\"last_name\" id=\"last_name\" />\n        </FormGroup>\n      </FormInline>\n      <FormGroup>\n        <Select defaultValue={selectedCity.ID} onChange={handleChangeCity}>\n          <Option value={selectedCity.ID} disabled>--Chọn thành phố--</Option>\n          {listCities.map( city => (\n            <Option value={city.ID} data-url={city.SolrID}>{city.Title}</Option>\n          ))}\n        </Select>\n      </FormGroup>\n      <FormGroup>\n        <Input name=\"address\" placeholder=\"Quận Huyện\" />\n      </FormGroup>\n\n      <FormGroup>\n        <Input name=\"apartment\" placeholder=\"Đường, Phường Xã, Số nhà\" />\n      </FormGroup>\n      <FormInline>\n        <FormGroup>\n          <Label htmlFor=\"phone\">Số điện thoại</Label>\n          <Input name=\"phone1\" id=\"phone1\" />\n        </FormGroup>\n        <FormGroup>\n          <Label>Email</Label>\n          <Input name=\"email\" value={user.email} disabled />\n        </FormGroup>\n      </FormInline>            \n      <PaymentInputsWrapper {...wrapperProps}>\n        <svg {...getCardImageProps({ images })} />\n        <input {...getCardNumberProps({ onChange : handleChangeCardNumber})} />\n        <input {...getExpiryDateProps({ onChange : handleChangeExpiryDate})} />\n        <input {...getCVCProps({ onChange : handleChangeCVC})} />\n      </PaymentInputsWrapper>      \n    </Form>\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  user : selectCurrentUser \n})\nexport default connect(mapStateToProps)(RegisterForm);\n"]},"metadata":{},"sourceType":"module"}