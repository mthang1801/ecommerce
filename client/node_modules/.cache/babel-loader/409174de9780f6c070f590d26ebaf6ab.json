{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Layout/cart-dropdown/cart-dropdown.component.jsx\";\nimport React, { useRef, useEffect } from \"react\";\nimport Button from \"../../UI/custom-button/custom-button.component\";\nimport { CartDropdownContainer, CartDropdownItems, CartDropdownFooter, NoCartItems } from \"./cart-dropdown.styles\";\nimport { connect } from \"react-redux\";\nimport CartItem from \"../cart-item/cart-item.component\";\nimport { withRouter } from \"react-router-dom\";\nimport { closeCart } from \"../../../redux/cart/cart.actions\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectCartItems } from \"../../../redux/cart/cart.selectors\";\n\nconst CartDropdown = ({\n  cartItems,\n  history,\n  match,\n  closeCart\n}) => {\n  const cardDropdownRef = useRef(null);\n  useEffect(() => {\n    function handleClickOutside(e) {\n      if (cardDropdownRef && !cardDropdownRef.current.contains(e.target)) {\n        closeCart();\n      }\n    }\n\n    document.addEventListener(\"click\", handleClickOutside);\n    return () => document.removeEventListener(\"click\", handleClickOutside);\n  }, [cardDropdownRef, closeCart]);\n  return /*#__PURE__*/React.createElement(CartDropdownContainer, {\n    ref: cardDropdownRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CartDropdownItems, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, cartItems.length ? cartItems.map(item => /*#__PURE__*/React.createElement(CartItem, {\n    key: item._id,\n    item: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 35\n    }\n  })) : /*#__PURE__*/React.createElement(NoCartItems, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, \"Kh\\xF4ng c\\xF3 SP trong gi\\u1ECF\")), /*#__PURE__*/React.createElement(CartDropdownFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    color: \"white\",\n    variant: \"contained\",\n    bgColor: \"#1a237e \",\n    onClick: () => {\n      history.push(\"/cart\");\n      closeCart();\n    },\n    disabled: cartItems.length === 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"Ti\\u1EBFn h\\xE0nh \\u0111\\u1EB7t h\\xE0ng\")));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\n\nconst mapDispatchToProps = dispatch => ({\n  closeCart: () => dispatch(closeCart())\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CartDropdown));","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Layout/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","useRef","useEffect","Button","CartDropdownContainer","CartDropdownItems","CartDropdownFooter","NoCartItems","connect","CartItem","withRouter","closeCart","createStructuredSelector","selectCartItems","CartDropdown","cartItems","history","match","cardDropdownRef","handleClickOutside","e","current","contains","target","document","addEventListener","removeEventListener","length","map","item","_id","push","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,gDAAnB;AACA,SACEC,qBADF,EAEEC,iBAFF,EAGEC,kBAHF,EAIEC,WAJF,QAKO,wBALP;AAMA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,SAAT,QAA0B,kCAA1B;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,eAAT,QAAgC,oCAAhC;;AACA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA,KAAtB;AAA6BN,EAAAA;AAA7B,CAAD,KAA8C;AACjE,QAAMO,eAAe,GAAGjB,MAAM,CAAC,IAAD,CAA9B;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,aAASiB,kBAAT,CAA4BC,CAA5B,EAA+B;AAC7B,UAAIF,eAAe,IAAI,CAACA,eAAe,CAACG,OAAhB,CAAwBC,QAAxB,CAAiCF,CAAC,CAACG,MAAnC,CAAxB,EAAoE;AAClEZ,QAAAA,SAAS;AACV;AACF;;AACDa,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCN,kBAAnC;AACA,WAAO,MAAMK,QAAQ,CAACE,mBAAT,CAA6B,OAA7B,EAAsCP,kBAAtC,CAAb;AACD,GARQ,EAQN,CAACD,eAAD,EAAkBP,SAAlB,CARM,CAAT;AASA,sBACE,oBAAC,qBAAD;AAAuB,IAAA,GAAG,EAAEO,eAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,SAAS,CAACY,MAAV,GACCZ,SAAS,CAACa,GAAV,CAAeC,IAAD,iBAAU,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACC,GAApB;AAAyB,IAAA,IAAI,EAAED,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxB,CADD,gBAGC,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAJJ,CADF,eAQE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,KAAK,EAAC,OAFR;AAGE,IAAA,OAAO,EAAC,WAHV;AAIE,IAAA,OAAO,EAAC,UAJV;AAKE,IAAA,OAAO,EAAE,MAAM;AACbb,MAAAA,OAAO,CAACe,IAAR,CAAa,OAAb;AACApB,MAAAA,SAAS;AACV,KARH;AASE,IAAA,QAAQ,EAAEI,SAAS,CAACY,MAAV,KAAqB,CATjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CADF,CARF,CADF;AA0BD,CArCD;;AAuCA,MAAMK,eAAe,GAAGpB,wBAAwB,CAAC;AAC/CG,EAAAA,SAAS,EAAEF;AADoC,CAAD,CAAhD;;AAIA,MAAMoB,kBAAkB,GAAIC,QAAD,KAAe;AACxCvB,EAAAA,SAAS,EAAE,MAAMuB,QAAQ,CAACvB,SAAS,EAAV;AADe,CAAf,CAA3B;;AAGA,eAAeD,UAAU,CACvBF,OAAO,CAACwB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CnB,YAA7C,CADuB,CAAzB","sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport Button from \"../../UI/custom-button/custom-button.component\";\nimport {\n  CartDropdownContainer,\n  CartDropdownItems,\n  CartDropdownFooter,\n  NoCartItems,\n} from \"./cart-dropdown.styles\";\nimport { connect } from \"react-redux\";\nimport CartItem from \"../cart-item/cart-item.component\";\nimport { withRouter } from \"react-router-dom\";\nimport { closeCart } from \"../../../redux/cart/cart.actions\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectCartItems } from \"../../../redux/cart/cart.selectors\";\nconst CartDropdown = ({ cartItems, history, match, closeCart }) => {\n  const cardDropdownRef = useRef(null);\n  useEffect(() => {\n    function handleClickOutside(e) {\n      if (cardDropdownRef && !cardDropdownRef.current.contains(e.target)) {\n        closeCart();\n      }\n    }\n    document.addEventListener(\"click\", handleClickOutside);\n    return () => document.removeEventListener(\"click\", handleClickOutside);\n  }, [cardDropdownRef, closeCart]);\n  return (\n    <CartDropdownContainer ref={cardDropdownRef}>\n      <CartDropdownItems>\n        {cartItems.length ? (\n          cartItems.map((item) => <CartItem key={item._id} item={item} />)\n        ) : (\n          <NoCartItems>Không có SP trong giỏ</NoCartItems>\n        )}\n      </CartDropdownItems>\n      <CartDropdownFooter>\n        <Button\n          size=\"small\"\n          color=\"white\"\n          variant=\"contained\"\n          bgColor=\"#1a237e \"\n          onClick={() => {\n            history.push(\"/cart\");\n            closeCart();\n          }}\n          disabled={cartItems.length === 0}\n        >\n          Tiến hành đặt hàng\n        </Button>\n      </CartDropdownFooter>\n    </CartDropdownContainer>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  closeCart: () => dispatch(closeCart()),\n});\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(CartDropdown)\n);\n"]},"metadata":{},"sourceType":"module"}