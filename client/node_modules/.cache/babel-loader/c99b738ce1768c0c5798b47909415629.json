{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Product-Detail/response-item/response-item.component.jsx\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { ResponseItemWrapper, Avatar, Row, ResponseText, ReadMore, ButtonLink } from \"./response-item.styles\";\nimport Moment from \"react-moment\";\nimport Button from \"@material-ui/core/Button\";\nimport { FcBusinessman } from \"react-icons/fc\";\nimport { connect } from \"react-redux\";\nimport { selectCurrentUser } from \"../../../redux/user/user.selectors\";\nimport { createStructuredSelector } from \"reselect\";\nimport { withRouter, Redirect, Link } from \"react-router-dom\";\nimport { AiOutlineLike, AiOutlineDislike } from \"react-icons/ai\";\nimport { postLikeOrUnlikeResponseComment } from \"../../../redux/product-comment-review/product-comment-review.actions\";\n\nconst ResponseItem = ({\n  comment,\n  response,\n  currentUser,\n  postLikeOrUnlikeResponseComment,\n  match,\n  history,\n  postResponseComment,\n  handleClickLikeResponseButton\n}) => {\n  const responseRef = useRef(null);\n  const [text, setText] = useState(\"\");\n  const [readMore, setReadMore] = useState(false);\n  const [showReadMore, setShowReadMore] = useState(false);\n  const [isResponseComment, setIsReponseComment] = useState(false);\n  const timeShowResponse = 700;\n  useEffect(() => {\n    if (response.text.length > 200) {\n      setShowReadMore(true);\n      setText(response.text.substr(0, 200));\n    } else {\n      setShowReadMore(false);\n      setText(response.text);\n    }\n  }, [response]);\n\n  const handleSetReadMore = () => {\n    if (readMore) {\n      setReadMore(false);\n      setText(response.text.substr(0, 200));\n    } else {\n      setReadMore(true);\n      setText(response.text);\n    }\n  };\n\n  const handleClickDislikeButton = () => {\n    if (!currentUser) {\n      let splitUrl = match.url.split(\"/\");\n      splitUrl[splitUrl.length - 1] = encodeURIComponent(splitUrl[splitUrl.length - 1]);\n      const encodeUrl = splitUrl.join(\"/\");\n      return history.push({\n        pathname: \"/auth\",\n        state: {\n          from: encodeUrl\n        }\n      });\n    }\n  };\n\n  const handleClickResponseCommentButton = () => {\n    if (!currentUser) {\n      let splitUrl = match.url.split(\"/\");\n      splitUrl[splitUrl.length - 1] = encodeURIComponent(splitUrl[splitUrl.length - 1]);\n      const encodeUrl = splitUrl.join(\"/\");\n      return history.push({\n        pathname: \"/auth\",\n        state: {\n          from: encodeUrl\n        }\n      });\n    }\n\n    setIsReponseComment(true);\n    setTimeout(() => {\n      responseRef.current.focus();\n      responseRef.current.setSelectionRange(responseRef.current.value.length, responseRef.current.value.length);\n    }, timeShowResponse);\n  };\n\n  console.log(response);\n  return /*#__PURE__*/React.createElement(ResponseItemWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    src: `http://localhost:5000/images/${response.user.avatar}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      flexDirection: \"column\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ResponseText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"rgba(0,0,0,0.75)\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Moment, {\n    format: \"DD-MM-YYYY HH:mm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, response.createdAt)), \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, text, \" \", showReadMore ? /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, !readMore ? \"...\" : \" \", /*#__PURE__*/React.createElement(ReadMore, {\n    onClick: handleSetReadMore,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 19\n    }\n  }, !readMore ? \"Xem thêm\" : \"Thu gọn\")) : null, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ButtonLink, {\n    onClick: () => handleClickLikeResponseButton(response._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: \"1em\",\n      verticalAlign: \"middle\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(AiOutlineLike, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  })), \" \", \"(\", response.likes.length, \")\"), /*#__PURE__*/React.createElement(ButtonLink, {\n    onClick: handleClickDislikeButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: \"1em\",\n      verticalAlign: \"middle\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(AiOutlineDislike, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  })), \" \", \"(\", response.dislikes.length, \")\"), currentUser && currentUser._id !== response.user._id || !currentUser ? /*#__PURE__*/React.createElement(ButtonLink, {\n    onClick: handleClickResponseCommentButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }, \"Tr\\u1EA3 l\\u1EDDi\") : null))));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n  postLikeOrUnlikeResponseComment: (responseId, userId) => dispatch(postLikeOrUnlikeResponseComment(responseId, userId)) // postLikeOrUnlikeComment: (commentId, userId) =>\n  //   dispatch(postLikeOrUnlikeComment(commentId, userId)),\n  // postResponseComment: (commentId, text) =>\n  //   dispatch(postResponseComment(commentId, text)),\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ResponseItem));","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Product-Detail/response-item/response-item.component.jsx"],"names":["React","useState","useEffect","useRef","ResponseItemWrapper","Avatar","Row","ResponseText","ReadMore","ButtonLink","Moment","Button","FcBusinessman","connect","selectCurrentUser","createStructuredSelector","withRouter","Redirect","Link","AiOutlineLike","AiOutlineDislike","postLikeOrUnlikeResponseComment","ResponseItem","comment","response","currentUser","match","history","postResponseComment","handleClickLikeResponseButton","responseRef","text","setText","readMore","setReadMore","showReadMore","setShowReadMore","isResponseComment","setIsReponseComment","timeShowResponse","length","substr","handleSetReadMore","handleClickDislikeButton","splitUrl","url","split","encodeURIComponent","encodeUrl","join","push","pathname","state","from","handleClickResponseCommentButton","setTimeout","current","focus","setSelectionRange","value","console","log","user","avatar","flexDirection","color","createdAt","_id","fontSize","verticalAlign","likes","dislikes","mapStateToProps","mapDispatchToProps","dispatch","responseId","userId"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  ResponseItemWrapper,\n  Avatar,\n  Row,\n  ResponseText,\n  ReadMore,\n  ButtonLink,\n} from \"./response-item.styles\";\nimport Moment from \"react-moment\";\nimport Button from \"@material-ui/core/Button\";\nimport { FcBusinessman } from \"react-icons/fc\";\nimport { connect } from \"react-redux\";\nimport { selectCurrentUser } from \"../../../redux/user/user.selectors\";\nimport { createStructuredSelector } from \"reselect\";\nimport { withRouter, Redirect, Link } from \"react-router-dom\";\nimport { AiOutlineLike, AiOutlineDislike } from \"react-icons/ai\";\nimport {\n  postLikeOrUnlikeResponseComment\n} from \"../../../redux/product-comment-review/product-comment-review.actions\";\n\nconst ResponseItem = ({\n  comment,\n  response,\n  currentUser,\n  postLikeOrUnlikeResponseComment,\n  match,\n  history,\n  postResponseComment,\n  handleClickLikeResponseButton\n}) => {\n  const responseRef = useRef(null);\n  const [text, setText] = useState(\"\");\n  const [readMore, setReadMore] = useState(false);\n  const [showReadMore, setShowReadMore] = useState(false);\n  const [isResponseComment, setIsReponseComment] = useState(false);\n  const timeShowResponse = 700 ; \n  useEffect(() => {\n    if (response.text.length > 200) {\n      setShowReadMore(true);\n      setText(response.text.substr(0, 200));\n    } else {\n      setShowReadMore(false);\n      setText(response.text);\n    }\n  }, [response]);  \n  const handleSetReadMore = () => {\n    if (readMore) {\n      setReadMore(false);\n      setText(response.text.substr(0, 200));\n    } else {\n      setReadMore(true);\n      setText(response.text);\n    }\n  };\n  \n  const handleClickDislikeButton = () => {\n    if (!currentUser) {\n      let splitUrl = match.url.split(\"/\");\n      splitUrl[splitUrl.length - 1] = encodeURIComponent(\n        splitUrl[splitUrl.length - 1]\n      );\n      const encodeUrl = splitUrl.join(\"/\");\n      return history.push({ pathname: \"/auth\", state: { from: encodeUrl } });\n    }\n   \n  };\n  const handleClickResponseCommentButton = () => {\n    if (!currentUser) {\n      let splitUrl = match.url.split(\"/\");\n      splitUrl[splitUrl.length - 1] = encodeURIComponent(\n        splitUrl[splitUrl.length - 1]\n      );\n      const encodeUrl = splitUrl.join(\"/\");\n      return history.push({ pathname: \"/auth\", state: { from: encodeUrl } });\n    }\n    setIsReponseComment(true);\n    setTimeout(() => {\n      responseRef.current.focus();\n      responseRef.current.setSelectionRange(\n        responseRef.current.value.length,\n        responseRef.current.value.length\n      );\n    }, timeShowResponse);\n  };\n  console.log(response)\n  return (\n    <ResponseItemWrapper>\n      <Row>\n        <Avatar src={`http://localhost:5000/images/${response.user.avatar}`} />\n        <Row style={{ flexDirection: \"column\" }}>\n          <ResponseText>\n            <p>\n              {/* <strong>\n                {response.user.local.name ||\n                  response.user.google.name ||\n                  response.user.facebook.name}{\" \"}\n                {response.user._id === product.user._id ? (\n                  <span style={{ color: \"#3f51b5\" }}>\n                    Nhà bán hàng <FcBusinessman />\n                  </span>\n                ) : (\n                  \"\"\n                )}\n              </strong>{\" \"} */}\n              <span style={{ color: \"rgba(0,0,0,0.75)\" }}>\n                <Moment format=\"DD-MM-YYYY HH:mm\">{response.createdAt}</Moment>\n              </span>{\" \"}\n            </p>\n            <p>\n              {text}{\" \"}\n              {showReadMore ? (\n                <span>\n                  {!readMore ? \"...\" : \" \"}\n                  <ReadMore onClick={handleSetReadMore}>\n                    {!readMore ? \"Xem thêm\" : \"Thu gọn\"}\n                  </ReadMore>\n                </span>\n              ) : null}{\" \"}\n            </p>\n          </ResponseText>\n          <div>\n            <ButtonLink onClick={() => handleClickLikeResponseButton(response._id)}>\n              <span style={{ fontSize: \"1em\", verticalAlign: \"middle\" }}>\n                <AiOutlineLike />\n              </span>{\" \"}\n              ({response.likes.length})\n            </ButtonLink>\n            <ButtonLink onClick={handleClickDislikeButton}>\n              <span style={{ fontSize: \"1em\", verticalAlign: \"middle\" }}>\n                <AiOutlineDislike />\n              </span>{\" \"}\n              ({response.dislikes.length})\n            </ButtonLink>\n            {(currentUser && currentUser._id !== response.user._id) ||\n            !currentUser ? (\n              <ButtonLink onClick={handleClickResponseCommentButton}>\n                Trả lời\n              </ButtonLink>\n            ) : null}\n          </div>\n        </Row>\n      </Row>\n    </ResponseItemWrapper>\n  );\n};\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  postLikeOrUnlikeResponseComment: ( responseId, userId) =>\n    dispatch(postLikeOrUnlikeResponseComment( responseId,userId)),\n  // postLikeOrUnlikeComment: (commentId, userId) =>\n  //   dispatch(postLikeOrUnlikeComment(commentId, userId)),\n  // postResponseComment: (commentId, text) =>\n  //   dispatch(postResponseComment(commentId, text)),\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(ResponseItem));\n"]},"metadata":{},"sourceType":"module"}