{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/pages/product-type/product-type.component.jsx\";\nimport React, { useEffect } from \"react\";\nimport { ProductTypeWrapper } from \"./product-type.styles\";\nimport { default as ProductTypeOverview } from \"../../components/ProductType/product-type-overview/product-type-overview.container\";\nimport MasterHeader from \"../../components/Layout/master-header/master-header.component\";\nimport Background from \"../../components/Layout/background/background.component\";\nimport { fetchProductType, fetchProductList, filterProductsByPrice } from \"../../redux/product-type/product-type.actions\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectProductTypeError, selectProductTypeLoading, selectProductTypeList, selectProductFetched, selectName, selectProductsIsFilter } from \"../../redux/product-type/product-type.selectors\";\nimport PageNotFound from \"../page-error/page-error.component\";\nimport Loader from \"../../components/UI/loader/loader.component\";\n\nconst ProductTypePage = ({\n  match,\n  location,\n  fetchProductType,\n  fetchProductList,\n  loading,\n  error,\n  fetched,\n  name,\n  isFilter\n}) => {\n  useEffect(() => {\n    let page = +location.search.split(\"=\")[1] || 1;\n    let {\n      categoryPath,\n      productTypePath\n    } = match.params;\n    let queryList = location.search.replace(/[?]/, \"\");\n    console.log(location.search);\n    console.log(queryList);\n\n    if (location.search && fetched) {\n      fetchProductList(categoryPath, productTypePath, page);\n      return;\n    }\n\n    if (isFilter) {} else {\n      fetchProductType(categoryPath, productTypePath, page);\n    }\n  }, [fetchProductType, fetchProductList, location.search, match.params.categoryPath, match.params.productTypePath]);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (error && error.status == 404) {\n    return /*#__PURE__*/React.createElement(PageNotFound, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(ProductTypeWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MasterHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Background, {\n    label: `Trang chủ / Danh mục sản phẩm / Loại sản phẩm / ${name}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ProductTypeOverview, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  error: selectProductTypeError,\n  loading: selectProductTypeLoading,\n  productTypeList: selectProductTypeList,\n  fetched: selectProductFetched,\n  name: selectName,\n  isFilter: selectProductsIsFilter\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchProductType: (categoryPath, productTypePath, page) => dispatch(fetchProductType(categoryPath, productTypePath, page)),\n  fetchProductList: (categoryPath, productTypePath, page) => dispatch(fetchProductList(categoryPath, productTypePath, page)),\n  filterProductsByPrice: (categoryPath, productTypePath, minPrice, maxPrice, page) => dispatch(filterProductsByPrice(categoryPath, productTypePath, minPrice, maxPrice, page))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductTypePage);","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/pages/product-type/product-type.component.jsx"],"names":["React","useEffect","ProductTypeWrapper","default","ProductTypeOverview","MasterHeader","Background","fetchProductType","fetchProductList","filterProductsByPrice","connect","createStructuredSelector","selectProductTypeError","selectProductTypeLoading","selectProductTypeList","selectProductFetched","selectName","selectProductsIsFilter","PageNotFound","Loader","ProductTypePage","match","location","loading","error","fetched","name","isFilter","page","search","split","categoryPath","productTypePath","params","queryList","replace","console","log","status","mapStateToProps","productTypeList","mapDispatchToProps","dispatch","minPrice","maxPrice"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { ProductTypeWrapper } from \"./product-type.styles\";\nimport { default as ProductTypeOverview } from \"../../components/ProductType/product-type-overview/product-type-overview.container\";\nimport MasterHeader from \"../../components/Layout/master-header/master-header.component\";\nimport Background from \"../../components/Layout/background/background.component\";\nimport {\n  fetchProductType,\n  fetchProductList,\n  filterProductsByPrice\n} from \"../../redux/product-type/product-type.actions\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport {\n  selectProductTypeError,\n  selectProductTypeLoading,\n  selectProductTypeList,\n  selectProductFetched,\n  selectName,\n  selectProductsIsFilter\n} from \"../../redux/product-type/product-type.selectors\";\nimport PageNotFound from \"../page-error/page-error.component\";\nimport Loader from \"../../components/UI/loader/loader.component\";\nconst ProductTypePage = ({\n  match,\n  location,\n  fetchProductType,\n  fetchProductList,\n  loading,\n  error,\n  fetched,\n  name,\n  isFilter\n}) => {\n  useEffect(() => {\n    let page = +location.search.split(\"=\")[1] || 1;    \n    let { categoryPath, productTypePath } = match.params;    \n    let queryList = location.search.replace(/[?]/,\"\");\n    console.log(location.search)\n    console.log(queryList);\n    if (location.search && fetched) {\n      fetchProductList(categoryPath, productTypePath, page);\n      return;\n    }\n    if(isFilter){\n\n    }else{\n      fetchProductType(categoryPath, productTypePath, page);\n    }\n    \n  }, [\n    fetchProductType,\n    fetchProductList,\n    location.search,\n    match.params.categoryPath,\n    match.params.productTypePath,\n  ]);\n  if (loading) {\n    return <Loader />;\n  }\n  if (error && error.status == 404) {\n    return <PageNotFound />;\n  }\n  return (\n    <ProductTypeWrapper>\n      <MasterHeader />\n      <Background label={`Trang chủ / Danh mục sản phẩm / Loại sản phẩm / ${name}`} />\n      <ProductTypeOverview />\n    </ProductTypeWrapper>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  error: selectProductTypeError,\n  loading: selectProductTypeLoading,\n  productTypeList: selectProductTypeList,\n  fetched: selectProductFetched,\n  name: selectName,\n  isFilter : selectProductsIsFilter\n});\nconst mapDispatchToProps = (dispatch) => ({\n  fetchProductType: (categoryPath, productTypePath, page) => dispatch(fetchProductType(categoryPath, productTypePath, page)),\n  fetchProductList: (categoryPath, productTypePath, page) => dispatch(fetchProductList(categoryPath, productTypePath, page)),\n  filterProductsByPrice : (categoryPath, productTypePath, minPrice, maxPrice, page) => dispatch(filterProductsByPrice(categoryPath, productTypePath, minPrice, maxPrice, page))\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductTypePage);\n"]},"metadata":{},"sourceType":"module"}