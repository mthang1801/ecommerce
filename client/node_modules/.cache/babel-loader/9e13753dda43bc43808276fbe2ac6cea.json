{"ast":null,"code":"import { put, takeLatest, call, all } from \"redux-saga/effects\";\nimport { registerSuccess, registerFail } from \"./user.actions\";\nimport userActionTypes from \"./user.types\";\nimport axios from \"axios\";\nimport urls from \"../../utils/urls/urls\";\n\nfunction* register({\n  payload: {\n    name,\n    email,\n    password\n  }\n}) {\n  try {\n    console.log(name, email, password);\n    const {\n      data: {\n        token,\n        user,\n        expDate\n      }\n    } = yield axios.post(urls.REGISTER_URL, {\n      name,\n      email,\n      password\n    });\n    localStorage.setItem(\"userToken\", token);\n    localStorage.setItem(\"expDate\", new Date(Date.now() + expDate * 1000));\n    yield put(registerSuccess(user));\n  } catch (error) {\n    yield put(registerFail(error.message));\n  }\n}\n\nfunction* onRegister() {\n  yield takeLatest(userActionTypes.REGISTER_START, register);\n}\n\nexport default function* userSaga() {\n  yield all([call(onRegister)]);\n}","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/redux/user/user.saga.js"],"names":["put","takeLatest","call","all","registerSuccess","registerFail","userActionTypes","axios","urls","register","payload","name","email","password","console","log","data","token","user","expDate","post","REGISTER_URL","localStorage","setItem","Date","now","error","message","onRegister","REGISTER_START","userSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,SAASC,eAAT,EAA0BC,YAA1B,QAA8C,gBAA9C;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;;AACA,UAAUC,QAAV,CAAmB;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf;AAAX,CAAnB,EAA2D;AACzD,MAAI;AACFC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EAAkBC,KAAlB,EAAyBC,QAAzB;AACA,UAAM;AACJG,MAAAA,IAAI,EAAE;AAAEC,QAAAA,KAAF;AAASC,QAAAA,IAAT;AAAeC,QAAAA;AAAf;AADF,QAEF,MAAMZ,KAAK,CAACa,IAAN,CAAWZ,IAAI,CAACa,YAAhB,EAA8B;AAAEV,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA;AAAf,KAA9B,CAFV;AAIAS,IAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCN,KAAlC;AACAK,IAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgC,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,KAAaN,OAAO,GAAG,IAAhC,CAAhC;AACA,UAAMnB,GAAG,CAACI,eAAe,CAACc,IAAD,CAAhB,CAAT;AACD,GATD,CASE,OAAOQ,KAAP,EAAc;AACd,UAAM1B,GAAG,CAACK,YAAY,CAACqB,KAAK,CAACC,OAAP,CAAb,CAAT;AACD;AACF;;AAED,UAAUC,UAAV,GAAuB;AACrB,QAAM3B,UAAU,CAACK,eAAe,CAACuB,cAAjB,EAAiCpB,QAAjC,CAAhB;AACD;;AAED,eAAe,UAAUqB,QAAV,GAAqB;AAClC,QAAM3B,GAAG,CAAC,CAACD,IAAI,CAAC0B,UAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { put, takeLatest, call, all } from \"redux-saga/effects\";\nimport { registerSuccess, registerFail } from \"./user.actions\";\nimport userActionTypes from \"./user.types\";\nimport axios from \"axios\";\nimport urls from \"../../utils/urls/urls\";\nfunction* register({ payload: { name, email, password } }) {\n  try {\n    console.log(name, email, password);\n    const {\n      data: { token, user, expDate },\n    } = yield axios.post(urls.REGISTER_URL, { name, email, password });\n\n    localStorage.setItem(\"userToken\", token);\n    localStorage.setItem(\"expDate\", new Date(Date.now() + expDate * 1000));\n    yield put(registerSuccess(user));\n  } catch (error) {\n    yield put(registerFail(error.message));\n  }\n}\n\nfunction* onRegister() {\n  yield takeLatest(userActionTypes.REGISTER_START, register);\n}\n\nexport default function* userSaga() {\n  yield all([call(onRegister)]);\n}\n"]},"metadata":{},"sourceType":"module"}