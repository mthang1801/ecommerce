{"ast":null,"code":"import { put, takeLatest, call, all, delay } from \"redux-saga/effects\";\nimport * as actions from \"./user.actions\";\nimport userActionTypes from \"./user.types\";\nimport axios from \"axios\";\nimport urls from \"../../utils/urls\";\nimport setAuthToken from \"../../utils/setAuthToken\";\n\nfunction* checkAuthTimeout(userExpDate) {\n  console.log(\"start\");\n  yield delay(userExpDate * 1000);\n  console.log(\"finish\");\n  yield put(actions.logoutStart());\n  yield call(setAuthToken, null);\n}\n\nfunction* logout() {\n  localStorage.removeItem(\"userToken\");\n  localStorage.removeItem(\"userExpDate\");\n  yield put(actions.logoutSuccess());\n}\n\nfunction* register({\n  payload: {\n    name,\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      data: {\n        token,\n        user,\n        expDate\n      }\n    } = yield axios.post(urls.REGISTER_URL, {\n      name,\n      email,\n      password\n    });\n    localStorage.setItem(\"userToken\", token);\n    localStorage.setItem(\"userExpDate\", new Date(Date.now() + expDate * 1000));\n    setAuthToken(token);\n    yield put(actions.registerSuccess(user));\n    yield put(actions.checkAuthTimeout(10000));\n  } catch (error) {\n    yield put(actions.registerFail(error.message));\n  }\n}\n\nfunction* fetchUser() {\n  try {\n    if (!localStorage.token || !localStorage.expDate) {\n      throw new Error(\"Authentication denied\");\n    }\n\n    if (!localStorage.expDate || Date.parse(localStorage.expDate) < Date.now()) {\n      localStorage.removeItem(\"userExpDate\");\n      localStorage.removeItem(\"userToken\");\n      throw new Error(\"Token has expired\");\n    }\n\n    setAuthToken(localStorage.token);\n    const {\n      data\n    } = yield axios.get(\"/auth/user\");\n    yield put(actions.fetchUserSuccess(data));\n    yield put(actions.checkAuthTimeout());\n  } catch (error) {\n    yield put(actions.fetchUserFail(error.message));\n  }\n}\n\nfunction* onRegister() {\n  yield takeLatest(userActionTypes.REGISTER_START, register);\n}\n\nfunction* onLogout() {\n  yield takeLatest(userActionTypes.LOGOUT_START, logout);\n}\n\nfunction* onCheckAuthTimeout() {\n  yield takeLatest(userActionTypes.CHECK_AUTH_TIMEOUT, checkAuthTimeout);\n}\n\nexport default function* userSaga() {\n  yield all([call(onRegister), call(onLogout), call(onCheckAuthTimeout)]);\n}","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/redux/user/user.saga.js"],"names":["put","takeLatest","call","all","delay","actions","userActionTypes","axios","urls","setAuthToken","checkAuthTimeout","userExpDate","console","log","logoutStart","logout","localStorage","removeItem","logoutSuccess","register","payload","name","email","password","data","token","user","expDate","post","REGISTER_URL","setItem","Date","now","registerSuccess","error","registerFail","message","fetchUser","Error","parse","get","fetchUserSuccess","fetchUserFail","onRegister","REGISTER_START","onLogout","LOGOUT_START","onCheckAuthTimeout","CHECK_AUTH_TIMEOUT","userSaga"],"mappings":"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","sourcesContent":["import { put, takeLatest, call, all, delay } from \"redux-saga/effects\";\nimport * as actions from \"./user.actions\";\nimport userActionTypes from \"./user.types\";\nimport axios from \"axios\";\nimport urls from \"../../utils/urls\";\nimport setAuthToken from \"../../utils/setAuthToken\";\n\nfunction* checkAuthTimeout(userExpDate) {\n  console.log(\"start\");\n  yield delay(userExpDate * 1000);\n  console.log(\"finish\");\n  yield put(actions.logoutStart());\n  yield call(setAuthToken, null);\n}\n\nfunction* logout() {\n  localStorage.removeItem(\"userToken\");\n  localStorage.removeItem(\"userExpDate\");\n  yield put(actions.logoutSuccess());\n}\n\nfunction* register({ payload: { name, email, password } }) {\n  try {\n    const {\n      data: { token, user, expDate },\n    } = yield axios.post(urls.REGISTER_URL, { name, email, password });\n\n    localStorage.setItem(\"userToken\", token);\n    localStorage.setItem(\"userExpDate\", new Date(Date.now() + expDate * 1000));\n    setAuthToken(token);\n    yield put(actions.registerSuccess(user));\n    yield put(actions.checkAuthTimeout(10000));\n  } catch (error) {\n    yield put(actions.registerFail(error.message));\n  }\n}\n\nfunction* fetchUser() {\n  try {\n    if (!localStorage.token || !localStorage.expDate) {\n      throw new Error(\"Authentication denied\");\n    }\n    if (\n      !localStorage.expDate ||\n      Date.parse(localStorage.expDate) < Date.now()\n    ) {\n      localStorage.removeItem(\"userExpDate\");\n      localStorage.removeItem(\"userToken\");\n      throw new Error(\"Token has expired\");\n    }\n    setAuthToken(localStorage.token);\n    const { data } = yield axios.get(\"/auth/user\");\n    yield put(actions.fetchUserSuccess(data));\n    yield put(actions.checkAuthTimeout());\n  } catch (error) {\n    yield put(actions.fetchUserFail(error.message));\n  }\n}\n\nfunction* onRegister() {\n  yield takeLatest(userActionTypes.REGISTER_START, register);\n}\n\nfunction* onLogout() {\n  yield takeLatest(userActionTypes.LOGOUT_START, logout);\n}\n\nfunction* onCheckAuthTimeout() {\n  yield takeLatest(userActionTypes.CHECK_AUTH_TIMEOUT, checkAuthTimeout);\n}\n\nexport default function* userSaga() {\n  yield all([call(onRegister), call(onLogout), call(onCheckAuthTimeout)]);\n}\n"]},"metadata":{},"sourceType":"module"}