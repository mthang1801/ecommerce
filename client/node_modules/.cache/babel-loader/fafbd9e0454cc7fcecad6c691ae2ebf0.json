{"ast":null,"code":"import CATEGORIES_DATA from \"../data/category\";\nimport PRODUCTS_DATA from \"../data/products\";\nimport SELLERS_DATA from \"../data/sellers\";\nimport CART_DATA from \"../data/cart\";\nimport axios from \"axios\";\nimport urls from \"./urls\";\nexport const getProductsTopRated = () => {\n  let sellers = [...SELLERS_DATA];\n  sellers.sort((a, b) => {\n    if (a.votes > b.votes) return -1;\n  });\n  return sellers.slice(0, 9);\n};\nexport const getProductsListByCategoryId = categeryId => {\n  const categories = { ...CATEGORIES_DATA\n  };\n  const listProductsId = categories[categeryId].products;\n  const products = { ...PRODUCTS_DATA\n  };\n  let productsList = {};\n  listProductsId.length && listProductsId.forEach(productId => {\n    productsList[productId] = products[productId];\n  });\n  return productsList;\n};\nexport const getCategoryData = () => {\n  const categoryList = { ...CATEGORIES_DATA\n  };\n  return Object.keys(categoryList).map(key => categoryList[key]);\n};\nexport const getMaxPrice = () => {\n  const sellers = [...SELLERS_DATA];\n  let max = sellers[0].price;\n  sellers.forEach(seller => {\n    if (seller.price > max) {\n      max = seller.price;\n    }\n  });\n  return max;\n};\nexport const getSaleOffProducts = () => {\n  let sellers = [...SELLERS_DATA];\n  sellers = sellers.filter(seller => seller.discount > 0);\n  sellers.sort((a, b) => {\n    if (a.discount > b.discount) {\n      return -1;\n    }\n\n    return 1;\n  });\n  return sellers;\n};\nexport const getNumberOfProducts = () => {\n  let sellers = [...SELLERS_DATA];\n  return sellers.length;\n};\nexport const getProductsPerpage = (page = 1, viewport = \"desktop\", sort = \"ascending\") => {\n  let NUM_PRODUCTS_PER_PAGE;\n\n  switch (viewport) {\n    case \"mobileView\":\n      NUM_PRODUCTS_PER_PAGE = 3;\n      break;\n\n    case \"tabletView\":\n      NUM_PRODUCTS_PER_PAGE = 6;\n      break;\n\n    default:\n      NUM_PRODUCTS_PER_PAGE = 12;\n  }\n\n  let sellers = [...SELLERS_DATA];\n  return sellers.filter((_, idx) => idx >= (page - 1) * NUM_PRODUCTS_PER_PAGE && idx < page * NUM_PRODUCTS_PER_PAGE);\n};\nexport const getCartItems = () => {\n  return [...CART_DATA];\n};\nexport const getProductsByProductType = productType => {\n  return PRODUCTS_DATA[productType];\n}; //========================================\n\nexport const getListCities = () => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const {\n        data\n      } = await axios.get(urls.LIST_CITIES_API);\n      resolve(data);\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\nexport const getListDistricts = cityID => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const {\n        data\n      } = await axios.get(urls.LIST_DISTRICTS_BASE_ON_CITY_ID_API(cityID));\n      resolve(data);\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\nexport const getListWards = districtID => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const {\n        data\n      } = await axios.get(urls.LIST_WARDS_BASE_ON_DISRICT_ID_API(districtID));\n      resolve(data);\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\nexport const getListCategory = () => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const {\n        data\n      } = await axios.get(urls.GET_LIST_CATEGORY);\n      resolve(data);\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\nexport const getListProductType = categoryID => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const {\n        data\n      } = await axios.get(urls.GET_LIST_PRODUCT_TYPE_BY_CATEGORYID(categoryID));\n      resolve(data);\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\nexport const getListProductGroup = productTypeID => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const {\n        data\n      } = await axios.get(urls.GET_LIST_PRODUCT_GROUP_BY_PRODUCTTYPEID(productTypeID));\n      resolve(data);\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\nexport const registerAsSeller = registerForm => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const {\n        data\n      } = await axios.put(urls.UPDATE_ROLE_USER_AS_SELLER, registerForm);\n      resolve(true);\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\nexport const createNewProduct = product => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      let formData = new FormData();\n      formData.append(\"categoryId\", product.selectedCategory._id);\n      formData.append(\"productTypeId\", product.selectedProductType._id);\n      formData.append(\"rootUrl\", product.selectedProductType.linkUrl);\n      formData.append(\"productGroupId\", product.selectedProductGroup._id === \"#\" ? \"\" : product.selectedProductGroup._id);\n      formData.append(\"groupName\", product.selectedProductGroup.name);\n      formData.append(\"label\", product.label);\n      formData.append(\"name\", product.name);\n      formData.append(\"price\", product.price);\n      formData.append(\"discount\", product.discount || 0);\n      formData.append(\"discountExpDate\", product.discountExpDate);\n      formData.append(\"description\", product.description);\n      formData.append(\"information\", product.information);\n      formData.append(\"manufactor\", product.manufactor);\n      formData.append(\"weight\", +product.weight);\n      formData.append(\"quantity\", +product.quantity);\n      formData.append(\"ship_fee\", +product.ship_fee);\n\n      for (let file of product.image) {\n        formData.append(\"multiple-images\", file);\n      }\n\n      const {\n        data\n      } = await axios.post(urls.POST_CREATE_NEW_PRODUCT, formData);\n      resolve(true);\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\nexport const getLatestProducts = () => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const {\n        data\n      } = await axios.get(urls.GET_LATEST_PRODUCTS);\n      resolve(data);\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\nexport const getBestSellerProducts = () => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const {\n        data\n      } = await axios.get(urls.GET_BEST_SELLER_PRODUCTS);\n      resolve(data);\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\nexport const getTopRatedProducts = () => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const {\n        data\n      } = await axios.get(urls.GET_TOP_RATED_PRODUCTS);\n      resolve(data);\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\nexport const getCategoryList = () => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const {\n        data\n      } = await axios.get(urls.GET_CATEGORY_LIST);\n      resolve(data);\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\nexport const getProductListByPageNumber = page => {\n  return new Promise(async (resolve, reject) => {\n    try {} catch (error) {\n      reject(error);\n    }\n  });\n};\nexport const postCODPayment = (currentUser, cartItems, methodDelivery, userMessage, totalPrice) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      console.log(methodDelivery);\n      const {\n        data\n      } = await axios.post(urls.POST_COD_PAYMENT, {\n        currentUser,\n        cartItems,\n        methodDelivery,\n        userMessage,\n        totalPrice\n      });\n      resolve(data);\n    } catch (error) {\n      reject(error.response.data.message);\n    }\n  });\n};\nexport const postCardPayment = (currentUser, cartItems, methodDelivery, userMessage, totalPrice, token) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const {\n        data\n      } = await axios.post(urls.POST_CARD_PAYMENT, {\n        currentUser,\n        cartItems,\n        methodDelivery,\n        userMessage,\n        totalPrice,\n        token\n      });\n      resolve(data);\n    } catch (error) {\n      reject(error.response.data.message);\n    }\n  });\n};\nexport const postReviewsProduct = (productId, stars, comment) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const {\n        data\n      } = await axios.post(urls.POST_REVIEWS_PRODUCT(productId), {\n        stars,\n        comment\n      });\n      resolve(true);\n    } catch (error) {\n      reject(error.response.data.message);\n    }\n  });\n};\nexport const updateReviewsProduct = (productId, stars, comment, updatedMyReview) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const {\n        data\n      } = await axios.put(urls.UPDATE_REVIEWS_PRODUCT(productId), {\n        stars,\n        comment,\n        updatedMyReview: { ...updatedMyReview\n        }\n      });\n      resolve(data);\n    } catch (error) {\n      reject(error.response.data.message);\n    }\n  });\n};\nexport const getCommentReviewsByProductId = productId => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const {\n        data\n      } = await axios.get(urls.GET_PRODUCT_COMMENT_REVIEWS(productId));\n      resolve(data);\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\nexport const postLikeOrUnlikeComment = commentId => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const {\n        data: msg\n      } = await axios.post(urls.POST_LIKE_OR_UNLIKE_COMMENT(commentId));\n      console.log(msg);\n      resolve(msg);\n    } catch (error) {\n      reject(error.response.data.message);\n    }\n  });\n};","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/utils/connectDB.js"],"names":["CATEGORIES_DATA","PRODUCTS_DATA","SELLERS_DATA","CART_DATA","axios","urls","getProductsTopRated","sellers","sort","a","b","votes","slice","getProductsListByCategoryId","categeryId","categories","listProductsId","products","productsList","length","forEach","productId","getCategoryData","categoryList","Object","keys","map","key","getMaxPrice","max","price","seller","getSaleOffProducts","filter","discount","getNumberOfProducts","getProductsPerpage","page","viewport","NUM_PRODUCTS_PER_PAGE","_","idx","getCartItems","getProductsByProductType","productType","getListCities","Promise","resolve","reject","data","get","LIST_CITIES_API","error","getListDistricts","cityID","LIST_DISTRICTS_BASE_ON_CITY_ID_API","getListWards","districtID","LIST_WARDS_BASE_ON_DISRICT_ID_API","getListCategory","GET_LIST_CATEGORY","getListProductType","categoryID","GET_LIST_PRODUCT_TYPE_BY_CATEGORYID","getListProductGroup","productTypeID","GET_LIST_PRODUCT_GROUP_BY_PRODUCTTYPEID","registerAsSeller","registerForm","put","UPDATE_ROLE_USER_AS_SELLER","createNewProduct","product","formData","FormData","append","selectedCategory","_id","selectedProductType","linkUrl","selectedProductGroup","name","label","discountExpDate","description","information","manufactor","weight","quantity","ship_fee","file","image","post","POST_CREATE_NEW_PRODUCT","getLatestProducts","GET_LATEST_PRODUCTS","getBestSellerProducts","GET_BEST_SELLER_PRODUCTS","getTopRatedProducts","GET_TOP_RATED_PRODUCTS","getCategoryList","GET_CATEGORY_LIST","getProductListByPageNumber","postCODPayment","currentUser","cartItems","methodDelivery","userMessage","totalPrice","console","log","POST_COD_PAYMENT","response","message","postCardPayment","token","POST_CARD_PAYMENT","postReviewsProduct","stars","comment","POST_REVIEWS_PRODUCT","updateReviewsProduct","updatedMyReview","UPDATE_REVIEWS_PRODUCT","getCommentReviewsByProductId","GET_PRODUCT_COMMENT_REVIEWS","postLikeOrUnlikeComment","commentId","msg","POST_LIKE_OR_UNLIKE_COMMENT"],"mappings":"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","sourcesContent":["import CATEGORIES_DATA from \"../data/category\";\nimport PRODUCTS_DATA from \"../data/products\";\nimport SELLERS_DATA from \"../data/sellers\";\nimport CART_DATA from \"../data/cart\";\nimport axios from \"axios\";\nimport urls from \"./urls\";\n\nexport const getProductsTopRated = () => {\n  let sellers = [...SELLERS_DATA];\n  sellers.sort((a, b) => {\n    if (a.votes > b.votes) return -1;\n  });\n  return sellers.slice(0, 9);\n};\n\nexport const getProductsListByCategoryId = (categeryId) => {\n  const categories = { ...CATEGORIES_DATA };\n  const listProductsId = categories[categeryId].products;\n  const products = { ...PRODUCTS_DATA };\n  let productsList = {};\n  listProductsId.length &&\n    listProductsId.forEach((productId) => {\n      productsList[productId] = products[productId];\n    });\n  return productsList;\n};\n\nexport const getCategoryData = () => {\n  const categoryList = { ...CATEGORIES_DATA };\n  return Object.keys(categoryList).map((key) => categoryList[key]);\n};\n\nexport const getMaxPrice = () => {\n  const sellers = [...SELLERS_DATA];\n  let max = sellers[0].price;\n  sellers.forEach((seller) => {\n    if (seller.price > max) {\n      max = seller.price;\n    }\n  });\n  return max;\n};\n\nexport const getSaleOffProducts = () => {\n  let sellers = [...SELLERS_DATA];\n  sellers = sellers.filter((seller) => seller.discount > 0);\n  sellers.sort((a, b) => {\n    if (a.discount > b.discount) {\n      return -1;\n    }\n    return 1;\n  });\n  return sellers;\n};\n\nexport const getNumberOfProducts = () => {\n  let sellers = [...SELLERS_DATA];\n  return sellers.length;\n};\n\nexport const getProductsPerpage = (\n  page = 1,\n  viewport = \"desktop\",\n  sort = \"ascending\"\n) => {\n  let NUM_PRODUCTS_PER_PAGE;\n  switch (viewport) {\n    case \"mobileView\":\n      NUM_PRODUCTS_PER_PAGE = 3;\n      break;\n    case \"tabletView\":\n      NUM_PRODUCTS_PER_PAGE = 6;\n      break;\n    default:\n      NUM_PRODUCTS_PER_PAGE = 12;\n  }\n  let sellers = [...SELLERS_DATA];\n  return sellers.filter(\n    (_, idx) =>\n      idx >= (page - 1) * NUM_PRODUCTS_PER_PAGE &&\n      idx < page * NUM_PRODUCTS_PER_PAGE\n  );\n};\n\nexport const getCartItems = () => {\n  return [...CART_DATA];\n};\n\nexport const getProductsByProductType = (productType) => {\n  return PRODUCTS_DATA[productType];\n};\n\n//========================================\n\nexport const getListCities = () => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const { data } = await axios.get(urls.LIST_CITIES_API);\n      resolve(data);\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\n\nexport const getListDistricts = (cityID) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const { data } = await axios.get(\n        urls.LIST_DISTRICTS_BASE_ON_CITY_ID_API(cityID)\n      );\n      resolve(data);\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\n\nexport const getListWards = (districtID) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const { data } = await axios.get(\n        urls.LIST_WARDS_BASE_ON_DISRICT_ID_API(districtID)\n      );\n      resolve(data);\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\n\nexport const getListCategory = () => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const { data } = await axios.get(urls.GET_LIST_CATEGORY);\n      resolve(data);\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\n\nexport const getListProductType = (categoryID) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const { data } = await axios.get(\n        urls.GET_LIST_PRODUCT_TYPE_BY_CATEGORYID(categoryID)\n      );\n\n      resolve(data);\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\nexport const getListProductGroup = (productTypeID) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const { data } = await axios.get(\n        urls.GET_LIST_PRODUCT_GROUP_BY_PRODUCTTYPEID(productTypeID)\n      );\n\n      resolve(data);\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\n\nexport const registerAsSeller = (registerForm) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const { data } = await axios.put(\n        urls.UPDATE_ROLE_USER_AS_SELLER,\n        registerForm\n      );\n      resolve(true);\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\n\nexport const createNewProduct = (product) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      let formData = new FormData();\n      formData.append(\"categoryId\", product.selectedCategory._id);\n      formData.append(\"productTypeId\", product.selectedProductType._id);\n      formData.append(\"rootUrl\", product.selectedProductType.linkUrl);\n      formData.append(\n        \"productGroupId\",\n        product.selectedProductGroup._id === \"#\"\n          ? \"\"\n          : product.selectedProductGroup._id\n      );\n      formData.append(\"groupName\", product.selectedProductGroup.name);\n      formData.append(\"label\", product.label);\n      formData.append(\"name\", product.name);\n      formData.append(\"price\", product.price);\n      formData.append(\"discount\", product.discount || 0);\n      formData.append(\"discountExpDate\", product.discountExpDate);\n      formData.append(\"description\", product.description);\n      formData.append(\"information\", product.information);\n      formData.append(\"manufactor\", product.manufactor);\n      formData.append(\"weight\", +product.weight);\n      formData.append(\"quantity\", +product.quantity);\n      formData.append(\"ship_fee\", +product.ship_fee);\n      for (let file of product.image) {\n        formData.append(\"multiple-images\", file);\n      }\n\n      const { data } = await axios.post(urls.POST_CREATE_NEW_PRODUCT, formData);\n      resolve(true);\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\n\nexport const getLatestProducts = () => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const { data } = await axios.get(urls.GET_LATEST_PRODUCTS);\n      resolve(data);\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\n\nexport const getBestSellerProducts = () => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const { data } = await axios.get(urls.GET_BEST_SELLER_PRODUCTS);\n      resolve(data);\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\n\nexport const getTopRatedProducts = () => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const { data } = await axios.get(urls.GET_TOP_RATED_PRODUCTS);\n      resolve(data);\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\n\nexport const getCategoryList = () => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const { data } = await axios.get(urls.GET_CATEGORY_LIST);\n      resolve(data);\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\n\nexport const getProductListByPageNumber = (page) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\n\nexport const postCODPayment = (\n  currentUser,\n  cartItems,\n  methodDelivery,\n  userMessage,\n  totalPrice\n) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      console.log(methodDelivery);\n      const { data } = await axios.post(urls.POST_COD_PAYMENT, {\n        currentUser,\n        cartItems,\n        methodDelivery,\n        userMessage,\n        totalPrice,\n      });\n      resolve(data);\n    } catch (error) {\n      reject(error.response.data.message);\n    }\n  });\n};\n\nexport const postCardPayment = (\n  currentUser,\n  cartItems,\n  methodDelivery,\n  userMessage,\n  totalPrice,\n  token\n) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const { data } = await axios.post(urls.POST_CARD_PAYMENT, {\n        currentUser,\n        cartItems,\n        methodDelivery,\n        userMessage,\n        totalPrice,\n        token,\n      });\n      resolve(data);\n    } catch (error) {\n      reject(error.response.data.message);\n    }\n  });\n};\nexport const postReviewsProduct = (productId, stars, comment) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const { data } = await axios.post(urls.POST_REVIEWS_PRODUCT(productId), {\n        stars,\n        comment,\n      });\n      resolve(true);\n    } catch (error) {\n      reject(error.response.data.message);\n    }\n  });\n};\nexport const updateReviewsProduct = (\n  productId,\n  stars,\n  comment,\n  updatedMyReview\n) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const { data } = await axios.put(urls.UPDATE_REVIEWS_PRODUCT(productId), {\n        stars,\n        comment,\n        updatedMyReview: { ...updatedMyReview },\n      });\n      resolve(data);\n    } catch (error) {\n      reject(error.response.data.message);\n    }\n  });\n};\nexport const getCommentReviewsByProductId = (productId) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const { data } = await axios.get(\n        urls.GET_PRODUCT_COMMENT_REVIEWS(productId)\n      );\n      resolve(data);\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\nexport const postLikeOrUnlikeComment = (commentId) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const { data: msg } = await axios.post(\n        urls.POST_LIKE_OR_UNLIKE_COMMENT(commentId)\n      );\n      console.log(msg);\n      resolve(msg);\n    } catch (error) {\n      reject(error.response.data.message);\n    }\n  });\n};\n"]},"metadata":{},"sourceType":"module"}