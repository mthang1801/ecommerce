{"ast":null,"code":"import productTypeActionTypes from \"./product-type.types\";\nimport axios from \"axios\";\nimport urls from \"../../utils/urls\";\nexport const fetchProductTypeStart = () => ({\n  type: productTypeActionTypes.FETCH_CONTENT_LIST_BY_PRODUCT_TYPE_START\n});\nexport const fetchProductTypeSuccess = ({\n  productTypeList,\n  discountProductList,\n  topRatedProducts,\n  bestSellerProducts,\n  productList,\n  numProducts,\n  numPages,\n  maxPrice\n}) => ({\n  type: productTypeActionTypes.FETCH_CONTENT_LIST_BY_PRODUCT_TYPE_SUCCESS,\n  payload: {\n    productTypeList,\n    discountProductList,\n    topRatedProducts,\n    bestSellerProducts,\n    productList,\n    numProducts,\n    numPages,\n    maxPrice\n  }\n});\nexport const fetchProductTypeFail = err => ({\n  type: productTypeActionTypes.FETCH_CONTENT_LIST_BY_PRODUCT_TYPE_FAIL,\n  payload: {\n    msg: err.response.data.message,\n    status: err.response.status\n  }\n});\nexport const fetchProductType = (categoryUrl, productTypeUrl, page = 1) => async dispatch => {\n  try {\n    dispatch(fetchProductTypeStart());\n    const {\n      data\n    } = await axios.get(urls.GET_CONTENT_LIST_BY_PRODUCT_TYPE_URL(categoryUrl, productTypeUrl, page));\n    dispatch(fetchProductTypeSuccess(data));\n  } catch (error) {\n    dispatch(fetchProductTypeFail(error));\n  }\n};\nexport const setCurrentPage = curPage => ({\n  type: productTypeActionTypes.SET_CURRENT_PAGE,\n  payload: curPage\n});\nexport const fetchProductListStart = () => ({\n  type: productTypeActionTypes.FETCH_PRODUCT_LIST_START\n});\nexport const fetchProductListSuccess = productList => ({\n  type: productTypeActionTypes.FETCH_PRODUCT_LIST_SUCCESS,\n  payload: productList\n});\nexport const fetchProductListFail = err => ({\n  type: productTypeActionTypes.FETCH_PRODUCT_LIST_FAIL,\n  payload: {\n    msg: err.response.data.message,\n    status: err.response.status\n  }\n});\nexport const fetchProductList = (categoryUrl, productTypeUrl, page) => async (dispatch) => {\n  try {\n    dispatch(fetchProductListStart());\n    const {\n      data\n    } = await axios.get(urls.GET_CONTENT_LIST_BY_PRODUCT_TYPE_URL(categoryUrl, productTypeUrl, page));\n    dispatch(fetchProductListSuccess(data));\n  } catch (error) {\n    dispatch(fetchProductListFail(error));\n  }\n};","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/redux/product-type/product-type.actions.js"],"names":["productTypeActionTypes","axios","urls","fetchProductTypeStart","type","FETCH_CONTENT_LIST_BY_PRODUCT_TYPE_START","fetchProductTypeSuccess","productTypeList","discountProductList","topRatedProducts","bestSellerProducts","productList","numProducts","numPages","maxPrice","FETCH_CONTENT_LIST_BY_PRODUCT_TYPE_SUCCESS","payload","fetchProductTypeFail","err","FETCH_CONTENT_LIST_BY_PRODUCT_TYPE_FAIL","msg","response","data","message","status","fetchProductType","categoryUrl","productTypeUrl","page","dispatch","get","GET_CONTENT_LIST_BY_PRODUCT_TYPE_URL","error","setCurrentPage","curPage","SET_CURRENT_PAGE","fetchProductListStart","FETCH_PRODUCT_LIST_START","fetchProductListSuccess","FETCH_PRODUCT_LIST_SUCCESS","fetchProductListFail","FETCH_PRODUCT_LIST_FAIL","fetchProductList"],"mappings":"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","sourcesContent":["import productTypeActionTypes from \"./product-type.types\";\nimport axios from \"axios\";\nimport urls from \"../../utils/urls\";\nexport const fetchProductTypeStart = () => ({\n  type: productTypeActionTypes.FETCH_CONTENT_LIST_BY_PRODUCT_TYPE_START,\n});\nexport const fetchProductTypeSuccess = ({\n  productTypeList,\n  discountProductList,\n  topRatedProducts,\n  bestSellerProducts,\n  productList,\n  numProducts,\n  numPages,\n  maxPrice,\n}) => ({\n  type: productTypeActionTypes.FETCH_CONTENT_LIST_BY_PRODUCT_TYPE_SUCCESS,\n  payload: {\n    productTypeList,\n    discountProductList,\n    topRatedProducts,\n    bestSellerProducts,\n    productList,\n    numProducts,\n    numPages,\n    maxPrice,\n  },\n});\nexport const fetchProductTypeFail = (err) => ({\n  type: productTypeActionTypes.FETCH_CONTENT_LIST_BY_PRODUCT_TYPE_FAIL,\n  payload: { msg: err.response.data.message, status: err.response.status },\n});\n\nexport const fetchProductType = (\n  categoryUrl,\n  productTypeUrl,\n  page = 1\n) => async (dispatch) => {\n  try {\n    dispatch(fetchProductTypeStart());\n    const { data } = await axios.get(\n      urls.GET_CONTENT_LIST_BY_PRODUCT_TYPE_URL(\n        categoryUrl,\n        productTypeUrl,\n        page\n      )\n    );\n    dispatch(fetchProductTypeSuccess(data));\n  } catch (error) {\n    dispatch(fetchProductTypeFail(error));\n  }\n};\n\nexport const setCurrentPage = (curPage) => ({\n  type: productTypeActionTypes.SET_CURRENT_PAGE,\n  payload: curPage,\n});\n\nexport const fetchProductListStart = () => ({\n  type: productTypeActionTypes.FETCH_PRODUCT_LIST_START,\n});\nexport const fetchProductListSuccess = (productList) => ({\n  type: productTypeActionTypes.FETCH_PRODUCT_LIST_SUCCESS,\n  payload: productList,\n});\nexport const fetchProductListFail = (err) => ({\n  type: productTypeActionTypes.FETCH_PRODUCT_LIST_FAIL,\n  payload: { msg: err.response.data.message, status: err.response.status },\n});\n\nexport const fetchProductList = (categoryUrl, productTypeUrl, page) => async (\n  dispatch\n) => {\n  try {\n    dispatch(fetchProductListStart());\n    const { data } = await axios.get(\n      urls.GET_CONTENT_LIST_BY_PRODUCT_TYPE_URL(\n        categoryUrl,\n        productTypeUrl,\n        page\n      )\n    );\n    dispatch(fetchProductListSuccess(data));\n  } catch (error) {\n    dispatch(fetchProductListFail(error));\n  }\n};\n"]},"metadata":{},"sourceType":"module"}