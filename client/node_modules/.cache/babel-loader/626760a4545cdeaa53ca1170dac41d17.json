{"ast":null,"code":"import manufactorActionTypes from \"./manufactor.types\";\nimport axios from \"axios\";\nimport urls from \"../../utils/urls\";\n\nconst fetchManufactorStart = () => ({\n  type: manufactorActionTypes.FETCH_CONTENT_LIST_BY_MANUFACTOR_PATH_URL_START\n});\n\nconst fetchManufactorSuccess = ({\n  name,\n  productGroupList,\n  productList,\n  numProducts,\n  currentPage,\n  numPages,\n  maxPrice\n}) => ({\n  type: manufactorActionTypes.FETCH_CONTENT_LIST_BY_MANUFACTOR_PATH_URL_SUCCESS,\n  payload: {\n    name,\n    productGroupList,\n    productList,\n    numProducts,\n    currentPage,\n    numPages,\n    maxPrice\n  }\n});\n\nconst fetchManufactorFail = err => ({\n  type: manufactorActionTypes.FETCH_CONTENT_LIST_BY_MANUFACTOR_PATH_URL_FAIL,\n  payload: {\n    msg: err.response.data.message,\n    status: err.response.status\n  }\n});\n\nexport const fetchManufactor = (pathUrl, page) => async dispatch => {\n  try {\n    console.log(pathUrl);\n    dispatch(fetchManufactorStart());\n    let {\n      data\n    } = await axios.get(urls.GET_CONTENT_LIST_BY_MANUFACTOR_PATH_URL(pathUrl, page));\n    data.currentPage = page;\n    dispatch(fetchManufactorSuccess(data));\n  } catch (error) {\n    dispatch(fetchManufactorFail(error));\n  }\n};\nexport const setCurrentPage = curPage => ({\n  type: manufactorActionTypes.SET_CURRENT_PAGE,\n  payload: curPage\n});\nexport const fetchProductListStart = () => ({\n  type: manufactorActionTypes.FETCH_PRODUCT_LIST_START\n});\nexport const fetchProductListSuccess = productList => ({\n  type: manufactorActionTypes.FETCH_PRODUCT_LIST_SUCCESS,\n  payload: productList\n});\nexport const fetchProductListFail = err => ({\n  type: manufactorActionTypes.FETCH_PRODUCT_LIST_FAIL,\n  payload: {\n    msg: err.response.data.message,\n    status: err.response.status\n  }\n});\nexport const fetchProductList = (pathUrl, page) => async dispatch => {\n  try {\n    dispatch(fetchProductListStart());\n    const {\n      data\n    } = await axios.get(urls.GET_PRODUCT_LIST_PER_PAGE_BY_MANUFACTOR_PATH_URL(pathUrl, page));\n    dispatch(fetchProductListSuccess(data));\n  } catch (error) {\n    dispatch(fetchProductListFail(error));\n  }\n};\n\nconst filterProductsByPriceStart = () => ({\n  type: manufactorActionTypes.FILTER_PRODUCTS_BY_PRICE_START\n});\n\nconst filterProductsByPriceSuccess = (categoryList, productList, numProducts, currentPage, numPages, maxPrice) => ({\n  type: manufactorActionTypes.FILTER_PRODUCTS_BY_PRICE_SUCCESS,\n  payload: {\n    categoryList,\n    productList,\n    numProducts,\n    currentPage,\n    numPages,\n    maxPrice\n  }\n});\n\nconst filterProductsByPriceFail = err => ({\n  type: manufactorActionTypes.FILTER_PRODUCTS_BY_PRICE_FAIL,\n  payload: {\n    msg: err.response.data.message,\n    status: err.response.status\n  }\n});\n\nexport const filterProductsByPrice = (categoryPath, minPriceChange, maxPriceChange, page = 1) => async dispatch => {\n  try {\n    dispatch(filterProductsByPriceStart());\n    const {\n      data: {\n        categoryList,\n        productList,\n        numProducts,\n        currentPage,\n        numPages,\n        maxPrice\n      }\n    } = await axios.get(urls.GET_PRODUCT_LIST_BY_FILTER_PRICE_IN_CATEGORY(categoryPath, minPriceChange, maxPriceChange, page));\n    dispatch(filterProductsByPriceSuccess(categoryList, productList, numProducts, currentPage, numPages, maxPrice));\n  } catch (error) {\n    dispatch(filterProductsByPriceFail(error));\n  }\n};","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/redux/manufactor/manufactor.actions.js"],"names":["manufactorActionTypes","axios","urls","fetchManufactorStart","type","FETCH_CONTENT_LIST_BY_MANUFACTOR_PATH_URL_START","fetchManufactorSuccess","name","productGroupList","productList","numProducts","currentPage","numPages","maxPrice","FETCH_CONTENT_LIST_BY_MANUFACTOR_PATH_URL_SUCCESS","payload","fetchManufactorFail","err","FETCH_CONTENT_LIST_BY_MANUFACTOR_PATH_URL_FAIL","msg","response","data","message","status","fetchManufactor","pathUrl","page","dispatch","console","log","get","GET_CONTENT_LIST_BY_MANUFACTOR_PATH_URL","error","setCurrentPage","curPage","SET_CURRENT_PAGE","fetchProductListStart","FETCH_PRODUCT_LIST_START","fetchProductListSuccess","FETCH_PRODUCT_LIST_SUCCESS","fetchProductListFail","FETCH_PRODUCT_LIST_FAIL","fetchProductList","GET_PRODUCT_LIST_PER_PAGE_BY_MANUFACTOR_PATH_URL","filterProductsByPriceStart","FILTER_PRODUCTS_BY_PRICE_START","filterProductsByPriceSuccess","categoryList","FILTER_PRODUCTS_BY_PRICE_SUCCESS","filterProductsByPriceFail","FILTER_PRODUCTS_BY_PRICE_FAIL","filterProductsByPrice","categoryPath","minPriceChange","maxPriceChange","GET_PRODUCT_LIST_BY_FILTER_PRICE_IN_CATEGORY"],"mappings":"AAAA,OAAOA,qBAAP,MAAkC,oBAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;;AACA,MAAMC,oBAAoB,GAAG,OAAO;AAClCC,EAAAA,IAAI,EAAEJ,qBAAqB,CAACK;AADM,CAAP,CAA7B;;AAIA,MAAMC,sBAAsB,GAAG,CAAC;AAC9BC,EAAAA,IAD8B;AAE9BC,EAAAA,gBAF8B;AAG9BC,EAAAA,WAH8B;AAI9BC,EAAAA,WAJ8B;AAK9BC,EAAAA,WAL8B;AAM9BC,EAAAA,QAN8B;AAO9BC,EAAAA;AAP8B,CAAD,MAQxB;AACLT,EAAAA,IAAI,EAAEJ,qBAAqB,CAACc,iDADvB;AAELC,EAAAA,OAAO,EAAE;AACPR,IAAAA,IADO;AAEPC,IAAAA,gBAFO;AAGPC,IAAAA,WAHO;AAIPC,IAAAA,WAJO;AAKPC,IAAAA,WALO;AAMPC,IAAAA,QANO;AAOPC,IAAAA;AAPO;AAFJ,CARwB,CAA/B;;AAqBA,MAAMG,mBAAmB,GAAIC,GAAD,KAAU;AACpCb,EAAAA,IAAI,EAAEJ,qBAAqB,CAACkB,8CADQ;AAEpCH,EAAAA,OAAO,EAAE;AAAEI,IAAAA,GAAG,EAAEF,GAAG,CAACG,QAAJ,CAAaC,IAAb,CAAkBC,OAAzB;AAAkCC,IAAAA,MAAM,EAAEN,GAAG,CAACG,QAAJ,CAAaG;AAAvD;AAF2B,CAAV,CAA5B;;AAKA,OAAO,MAAMC,eAAe,GAAG,CAACC,OAAD,EAAUC,IAAV,KAAmB,MAAOC,QAAP,IAAoB;AACpE,MAAI;AACFC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACAE,IAAAA,QAAQ,CAACxB,oBAAoB,EAArB,CAAR;AACA,QAAI;AAAEkB,MAAAA;AAAF,QAAW,MAAMpB,KAAK,CAAC6B,GAAN,CACnB5B,IAAI,CAAC6B,uCAAL,CAA6CN,OAA7C,EAAsDC,IAAtD,CADmB,CAArB;AAGAL,IAAAA,IAAI,CAACV,WAAL,GAAmBe,IAAnB;AACAC,IAAAA,QAAQ,CAACrB,sBAAsB,CAACe,IAAD,CAAvB,CAAR;AACD,GARD,CAQE,OAAOW,KAAP,EAAc;AACdL,IAAAA,QAAQ,CAACX,mBAAmB,CAACgB,KAAD,CAApB,CAAR;AACD;AACF,CAZM;AAcP,OAAO,MAAMC,cAAc,GAAIC,OAAD,KAAc;AAC1C9B,EAAAA,IAAI,EAAEJ,qBAAqB,CAACmC,gBADc;AAE1CpB,EAAAA,OAAO,EAAEmB;AAFiC,CAAd,CAAvB;AAKP,OAAO,MAAME,qBAAqB,GAAG,OAAO;AAC1ChC,EAAAA,IAAI,EAAEJ,qBAAqB,CAACqC;AADc,CAAP,CAA9B;AAGP,OAAO,MAAMC,uBAAuB,GAAI7B,WAAD,KAAkB;AACvDL,EAAAA,IAAI,EAAEJ,qBAAqB,CAACuC,0BAD2B;AAEvDxB,EAAAA,OAAO,EAAEN;AAF8C,CAAlB,CAAhC;AAIP,OAAO,MAAM+B,oBAAoB,GAAIvB,GAAD,KAAU;AAC5Cb,EAAAA,IAAI,EAAEJ,qBAAqB,CAACyC,uBADgB;AAE5C1B,EAAAA,OAAO,EAAE;AAAEI,IAAAA,GAAG,EAAEF,GAAG,CAACG,QAAJ,CAAaC,IAAb,CAAkBC,OAAzB;AAAkCC,IAAAA,MAAM,EAAEN,GAAG,CAACG,QAAJ,CAAaG;AAAvD;AAFmC,CAAV,CAA7B;AAKP,OAAO,MAAMmB,gBAAgB,GAAG,CAACjB,OAAD,EAAUC,IAAV,KAAmB,MAAOC,QAAP,IAAoB;AACrE,MAAI;AACFA,IAAAA,QAAQ,CAACS,qBAAqB,EAAtB,CAAR;AACA,UAAM;AAAEf,MAAAA;AAAF,QAAW,MAAMpB,KAAK,CAAC6B,GAAN,CACrB5B,IAAI,CAACyC,gDAAL,CAAsDlB,OAAtD,EAA+DC,IAA/D,CADqB,CAAvB;AAGAC,IAAAA,QAAQ,CAACW,uBAAuB,CAACjB,IAAD,CAAxB,CAAR;AACD,GAND,CAME,OAAOW,KAAP,EAAc;AACdL,IAAAA,QAAQ,CAACa,oBAAoB,CAACR,KAAD,CAArB,CAAR;AACD;AACF,CAVM;;AAWP,MAAMY,0BAA0B,GAAG,OAAO;AACxCxC,EAAAA,IAAI,EAAEJ,qBAAqB,CAAC6C;AADY,CAAP,CAAnC;;AAGA,MAAMC,4BAA4B,GAAG,CACnCC,YADmC,EAEnCtC,WAFmC,EAGnCC,WAHmC,EAInCC,WAJmC,EAKnCC,QALmC,EAMnCC,QANmC,MAO/B;AACJT,EAAAA,IAAI,EAAEJ,qBAAqB,CAACgD,gCADxB;AAEJjC,EAAAA,OAAO,EAAE;AACPgC,IAAAA,YADO;AAEPtC,IAAAA,WAFO;AAGPC,IAAAA,WAHO;AAIPC,IAAAA,WAJO;AAKPC,IAAAA,QALO;AAMPC,IAAAA;AANO;AAFL,CAP+B,CAArC;;AAkBA,MAAMoC,yBAAyB,GAAIhC,GAAD,KAAU;AAC1Cb,EAAAA,IAAI,EAAEJ,qBAAqB,CAACkD,6BADc;AAE1CnC,EAAAA,OAAO,EAAE;AAAEI,IAAAA,GAAG,EAAEF,GAAG,CAACG,QAAJ,CAAaC,IAAb,CAAkBC,OAAzB;AAAkCC,IAAAA,MAAM,EAAEN,GAAG,CAACG,QAAJ,CAAaG;AAAvD;AAFiC,CAAV,CAAlC;;AAKA,OAAO,MAAM4B,qBAAqB,GAAG,CACnCC,YADmC,EAEnCC,cAFmC,EAGnCC,cAHmC,EAInC5B,IAAI,GAAG,CAJ4B,KAKhC,MAAOC,QAAP,IAAoB;AACvB,MAAI;AACFA,IAAAA,QAAQ,CAACiB,0BAA0B,EAA3B,CAAR;AACA,UAAM;AACJvB,MAAAA,IAAI,EAAE;AACJ0B,QAAAA,YADI;AAEJtC,QAAAA,WAFI;AAGJC,QAAAA,WAHI;AAIJC,QAAAA,WAJI;AAKJC,QAAAA,QALI;AAMJC,QAAAA;AANI;AADF,QASF,MAAMZ,KAAK,CAAC6B,GAAN,CACR5B,IAAI,CAACqD,4CAAL,CACEH,YADF,EAEEC,cAFF,EAGEC,cAHF,EAIE5B,IAJF,CADQ,CATV;AAiBAC,IAAAA,QAAQ,CACNmB,4BAA4B,CAC1BC,YAD0B,EAE1BtC,WAF0B,EAG1BC,WAH0B,EAI1BC,WAJ0B,EAK1BC,QAL0B,EAM1BC,QAN0B,CADtB,CAAR;AAUD,GA7BD,CA6BE,OAAOmB,KAAP,EAAc;AACdL,IAAAA,QAAQ,CAACsB,yBAAyB,CAACjB,KAAD,CAA1B,CAAR;AACD;AACF,CAtCM","sourcesContent":["import manufactorActionTypes from \"./manufactor.types\";\nimport axios from \"axios\";\nimport urls from \"../../utils/urls\";\nconst fetchManufactorStart = () => ({\n  type: manufactorActionTypes.FETCH_CONTENT_LIST_BY_MANUFACTOR_PATH_URL_START,\n});\n\nconst fetchManufactorSuccess = ({\n  name,\n  productGroupList,\n  productList,\n  numProducts,\n  currentPage,\n  numPages,\n  maxPrice,\n}) => ({\n  type: manufactorActionTypes.FETCH_CONTENT_LIST_BY_MANUFACTOR_PATH_URL_SUCCESS,\n  payload: {\n    name,\n    productGroupList,\n    productList,\n    numProducts,\n    currentPage,\n    numPages,\n    maxPrice,\n  },\n});\n\nconst fetchManufactorFail = (err) => ({\n  type: manufactorActionTypes.FETCH_CONTENT_LIST_BY_MANUFACTOR_PATH_URL_FAIL,\n  payload: { msg: err.response.data.message, status: err.response.status },\n});\n\nexport const fetchManufactor = (pathUrl, page) => async (dispatch) => {\n  try {\n    console.log(pathUrl);\n    dispatch(fetchManufactorStart());\n    let { data } = await axios.get(\n      urls.GET_CONTENT_LIST_BY_MANUFACTOR_PATH_URL(pathUrl, page)\n    );\n    data.currentPage = page;\n    dispatch(fetchManufactorSuccess(data));\n  } catch (error) {\n    dispatch(fetchManufactorFail(error));\n  }\n};\n\nexport const setCurrentPage = (curPage) => ({\n  type: manufactorActionTypes.SET_CURRENT_PAGE,\n  payload: curPage,\n});\n\nexport const fetchProductListStart = () => ({\n  type: manufactorActionTypes.FETCH_PRODUCT_LIST_START,\n});\nexport const fetchProductListSuccess = (productList) => ({\n  type: manufactorActionTypes.FETCH_PRODUCT_LIST_SUCCESS,\n  payload: productList,\n});\nexport const fetchProductListFail = (err) => ({\n  type: manufactorActionTypes.FETCH_PRODUCT_LIST_FAIL,\n  payload: { msg: err.response.data.message, status: err.response.status },\n});\n\nexport const fetchProductList = (pathUrl, page) => async (dispatch) => {\n  try {\n    dispatch(fetchProductListStart());\n    const { data } = await axios.get(\n      urls.GET_PRODUCT_LIST_PER_PAGE_BY_MANUFACTOR_PATH_URL(pathUrl, page)\n    );\n    dispatch(fetchProductListSuccess(data));\n  } catch (error) {\n    dispatch(fetchProductListFail(error));\n  }\n};\nconst filterProductsByPriceStart = () => ({\n  type: manufactorActionTypes.FILTER_PRODUCTS_BY_PRICE_START,\n});\nconst filterProductsByPriceSuccess = (\n  categoryList,\n  productList,\n  numProducts,\n  currentPage,\n  numPages,\n  maxPrice\n) => ({\n  type: manufactorActionTypes.FILTER_PRODUCTS_BY_PRICE_SUCCESS,\n  payload: {\n    categoryList,\n    productList,\n    numProducts,\n    currentPage,\n    numPages,\n    maxPrice,\n  },\n});\nconst filterProductsByPriceFail = (err) => ({\n  type: manufactorActionTypes.FILTER_PRODUCTS_BY_PRICE_FAIL,\n  payload: { msg: err.response.data.message, status: err.response.status },\n});\n\nexport const filterProductsByPrice = (\n  categoryPath,\n  minPriceChange,\n  maxPriceChange,\n  page = 1\n) => async (dispatch) => {\n  try {\n    dispatch(filterProductsByPriceStart());\n    const {\n      data: {\n        categoryList,\n        productList,\n        numProducts,\n        currentPage,\n        numPages,\n        maxPrice,\n      },\n    } = await axios.get(\n      urls.GET_PRODUCT_LIST_BY_FILTER_PRICE_IN_CATEGORY(\n        categoryPath,\n        minPriceChange,\n        maxPriceChange,\n        page\n      )\n    );\n    dispatch(\n      filterProductsByPriceSuccess(\n        categoryList,\n        productList,\n        numProducts,\n        currentPage,\n        numPages,\n        maxPrice\n      )\n    );\n  } catch (error) {\n    dispatch(filterProductsByPriceFail(error));\n  }\n};\n"]},"metadata":{},"sourceType":"module"}