{"ast":null,"code":"import styled, { css } from \"styled-components\";\nimport { darken, lighten } from \"polished\";\nconst ButtonColor = css`\n  background-color : ${({\n  color\n}) => color ? `${color.trim().toString()}` : \"black\"};\n`;\nconst VariantOutlined = css`\n  background-color:  white ; \n  color : ${({\n  color\n}) => color ? `${color.trim().toString()}` : \"black\"};\n  border :  ${({\n  color\n}) => color ? `1px solid ${color.trim().toString()}` : \"1px solid black\"};\n  &:hover{\n    background-color :  ${({\n  color\n}) => color ? `${color.trim().toString()}` : \"black\"};\n    color : ${({\n  color\n}) => color ? lighten(1, `${color.trim().toString()}`) : \"white\"};\n    border:  none ;\n  }\n`;\nconst VariantContained = css`\n  background-color:  ${({\n  bgColor\n}) => bgColor ? `${bgColor.trim().toString()}` : \"#252525\"}; ; \n  color : ${({\n  color\n}) => color ? `${color.trim().toString()}` : \"white\"} ;  \n  border : none ;\n  &:hover{   \n    background-color :  ${({\n  bgColor\n}) => bgColor ? darken(0.1, `${bgColor.trim().toString()}`) : \"black\"};\n    border:  none ;\n    color : ${({\n  color\n}) => color ? lighten(0.1, `${color.trim().toString()}`) : \"white\"}\n  }\n`;\n\nconst ButtonVariant = props => {\n  if (!props.variant) {\n    return;\n  }\n\n  return props.variant === \"outlined\" ? VariantOutlined : VariantContained;\n};\n\nconst ButtonStyle = css`\n  background-color : black ; \n  color : white; \n  border : none ; \n  &:hover{\n    background-color : white ; \n    color:  black ; \n    border : 1px solid black;    \n  }\n`;\n\nconst getButtonStyles = props => {\n  return ButtonStyle;\n};\n\nconst ButtonSizeSmall = css`\n  padding : 0 .75rem 0 .75rem;\n  height : 40px;\n  line-height : 40px;\n`;\nconst ButtonSizeLarge = css`\n  padding : 0 1.4rem 0 1.4rem;\n  height : 55px;\n  line-height : 55px;\n`;\nconst ButtonSizeXLarge = css`\n  padding : 0 1.8rem 0 1.8rem;\n  height: 60px;\n  line-height: 60px;\n`;\n\nconst ButtonSize = props => {\n  switch (props.size) {\n    case \"small\":\n      return ButtonSizeSmall;\n\n    case \"large\":\n      return ButtonSizeLarge;\n\n    case \"xlarge\":\n      return ButtonSizeXLarge;\n\n    default:\n      return;\n  }\n};\n\nconst ButtonWidthOptions = {\n  25: {\n    width: \"25%\"\n  },\n  50: {\n    width: \"50%\"\n  },\n  75: {\n    width: \"75%\"\n  },\n  100: {\n    width: \"100%\"\n  }\n};\n\nconst ButtonWidth = props => {\n  switch (props.width) {\n    case \"25\":\n      return ButtonWidthOptions[\"25\"];\n\n    case \"50\":\n      return ButtonWidthOptions[\"50\"];\n\n    case \"75\":\n      return ButtonWidthOptions[\"75\"];\n\n    case \"100\":\n      return ButtonWidthOptions[\"100\"];\n\n    default:\n      return;\n  }\n};\n\nexport const IconButton = styled.span`     \n  font-size : 1.5em;\n  height : 100%;\n  margin-right : .2rem;\n  padding : .15rem;\n`;\nconst ButtonDisabled = css`\n  border: 1px solid #999999;\n  background-color: #cccccc;\n  color: #666666;\n  cursor : not-allowed;\n  \n`;\nexport const CustomButtonContainer = styled.button`  \n  text-transform : uppercase ;  \n  width : auto ; \n  height : 50px;\n  letter-spacing : .5px ; \n  line-height : 50px;\n  padding : 0 1rem 0 1rem ;  \n  font-weight: bolder;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items : center;\n  border-radius : 5px;\n  outline : none; \n  border: none;   \n  position : relative;\n  text-align : center;\n  white-space: nowrap; \n  overflow : hidden ;\n  text-overflow: ellipsis;\n  ${getButtonStyles};\n  ${ButtonColor};\n  ${ButtonVariant};\n  ${ButtonSize};\n  ${ButtonWidth};\n  &:disabled {\n    ${ButtonDisabled}\n  }\n`;","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/src/components/UI/custom-button/custom-button.styles.jsx"],"names":["styled","css","darken","lighten","ButtonColor","color","trim","toString","VariantOutlined","VariantContained","bgColor","ButtonVariant","props","variant","ButtonStyle","getButtonStyles","ButtonSizeSmall","ButtonSizeLarge","ButtonSizeXLarge","ButtonSize","size","ButtonWidthOptions","width","ButtonWidth","IconButton","span","ButtonDisabled","CustomButtonContainer","button"],"mappings":"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","sourcesContent":["import styled, {css} from \"styled-components\";\nimport {darken, lighten} from \"polished\";\nconst ButtonColor = css`\n  background-color : ${({color}) => color ? `${color.trim().toString()}` : \"black\"};\n`\n\nconst VariantOutlined = css`\n  background-color:  white ; \n  color : ${({color}) => color ? `${color.trim().toString()}` : \"black\"};\n  border :  ${({color}) => color ? `1px solid ${color.trim().toString()}` : \"1px solid black\"};\n  &:hover{\n    background-color :  ${({color}) => color ? `${color.trim().toString()}` : \"black\"};\n    color : ${({color}) => color ? lighten(1, `${color.trim().toString()}`) : \"white\"};\n    border:  none ;\n  }\n`\n\nconst VariantContained = css`\n  background-color:  ${({bgColor}) => bgColor ? `${bgColor.trim().toString()}` : \"#252525\"}; ; \n  color : ${({color}) => color ? `${color.trim().toString()}` : \"white\"} ;  \n  border : none ;\n  &:hover{   \n    background-color :  ${({bgColor}) => bgColor ? darken(0.1, `${bgColor.trim().toString()}`) : \"black\"};\n    border:  none ;\n    color : ${({color}) => color ? lighten(0.1,`${color.trim().toString()}`) : \"white\"}\n  }\n`\n\nconst ButtonVariant = props => {\n  if(!props.variant){\n    return ;\n  }\n  return props.variant === \"outlined\" ? VariantOutlined : VariantContained;\n}\n\n\nconst ButtonStyle = css`\n  background-color : black ; \n  color : white; \n  border : none ; \n  &:hover{\n    background-color : white ; \n    color:  black ; \n    border : 1px solid black;    \n  }\n`\n\nconst getButtonStyles = props => {  \n  return ButtonStyle;\n}\n\nconst ButtonSizeSmall = css`\n  padding : 0 .75rem 0 .75rem;\n  height : 40px;\n  line-height : 40px;\n`\n\nconst ButtonSizeLarge = css`\n  padding : 0 1.4rem 0 1.4rem;\n  height : 55px;\n  line-height : 55px;\n`\n\nconst ButtonSizeXLarge = css`\n  padding : 0 1.8rem 0 1.8rem;\n  height: 60px;\n  line-height: 60px;\n`\n\nconst ButtonSize = props => {\n  switch(props.size){\n    case \"small\" : return ButtonSizeSmall ;\n    case \"large\" : return ButtonSizeLarge ;\n    case \"xlarge\" : return ButtonSizeXLarge ;\n    default : return ;\n  }\n}\n\nconst ButtonWidthOptions = {\n  25 : { width : \"25%\"}, \n  50 : { width : \"50%\"}, \n  75 : { width : \"75%\"}, \n  100 : { width : \"100%\"}, \n}\n\nconst ButtonWidth = props => {\n  switch(props.width){\n    case \"25\" : return ButtonWidthOptions[\"25\"]; \n    case \"50\" : return ButtonWidthOptions[\"50\"]; \n    case \"75\" : return ButtonWidthOptions[\"75\"]; \n    case \"100\" : return ButtonWidthOptions[\"100\"]; \n    default : return ;\n  }\n}\n\nexport const IconButton = styled.span`     \n  font-size : 1.5em;\n  height : 100%;\n  margin-right : .2rem;\n  padding : .15rem;\n`\n\nconst ButtonDisabled = css`\n  border: 1px solid #999999;\n  background-color: #cccccc;\n  color: #666666;\n  cursor : not-allowed;\n  \n`\n\nexport const CustomButtonContainer = styled.button`  \n  text-transform : uppercase ;  \n  width : auto ; \n  height : 50px;\n  letter-spacing : .5px ; \n  line-height : 50px;\n  padding : 0 1rem 0 1rem ;  \n  font-weight: bolder;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items : center;\n  border-radius : 5px;\n  outline : none; \n  border: none;   \n  position : relative;\n  text-align : center;\n  white-space: nowrap; \n  overflow : hidden ;\n  text-overflow: ellipsis;\n  ${getButtonStyles};\n  ${ButtonColor};\n  ${ButtonVariant};\n  ${ButtonSize};\n  ${ButtonWidth};\n  &:disabled {\n    ${ButtonDisabled}\n  }\n`"]},"metadata":{},"sourceType":"module"}