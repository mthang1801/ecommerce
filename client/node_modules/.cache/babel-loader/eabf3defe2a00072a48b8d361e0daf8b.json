{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Auth/sign-in/sign-in.component.jsx\";\nimport React from \"react\";\nimport { CustomFormContainer, FormHeader, Title, SubTitle, FormGroups, FormActions, StyledLink, Option, FlashForm, ErrorMessage } from \"../../UI/custom-form/custom-form.styles\";\nimport CustomInput from \"../../UI/custom-input/custom-input.component\";\nimport CustomButton from \"../../UI/custom-button/custom-button.component\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectUserError } from \"../../../redux/user/user.selectors\";\nimport { loginStart } from \"../../../redux/user/user.actions\";\nimport GoogleRecaptcha from \"../../UI/google-recaptcha/google-recaptcha.component\";\nimport FacebookLogin from \"../../UI/facebook-login/facebook-login.component\";\nimport GoogleLogin from \"../../UI/google-login/google-login.component\";\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      error: null,\n      disabled: true,\n      loaded: false,\n      captcha_value: null\n    };\n    this.timer = null;\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.onSubmitSigninForm = async e => {\n      e.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n\n      if (!email || !password) {\n        this.setState({\n          error: \"Email và mật khẩu không được để trống\"\n        });\n        return;\n      }\n\n      this.setState({\n        error: null\n      });\n\n      try {\n        this.props.login(email, password);\n      } catch (error) {\n        this.setState({\n          error: error\n        });\n      }\n    };\n\n    this.handleChangeGoogleRecaptcha = value => {\n      this.setState({\n        captcha_value: value,\n        disabled: false\n      });\n      if (value === null) this.setState({\n        disabled: true\n      });\n    };\n\n    this.signInRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.timer = setTimeout(() => {\n      this.setState({\n        loaded: true\n      });\n    }, 1000);\n    window.scrollTo({\n      top: this.signInRef.current.offsetTop,\n      behavior: \"smooth\"\n    });\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.timer);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.error !== this.props.error) {\n      this.setState({\n        error: this.props.error\n      });\n    }\n  }\n\n  render() {\n    const {\n      email,\n      password,\n      error,\n      disabled,\n      loaded\n    } = this.state;\n    const {\n      authPath\n    } = this.props;\n    return /*#__PURE__*/React.createElement(CustomFormContainer, {\n      onSubmit: this.onSubmitSigninForm,\n      ref: this.signInRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(FormHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, \"Sign In\"), /*#__PURE__*/React.createElement(SubTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, \"Sign in your account via email and password.\")), error && /*#__PURE__*/React.createElement(ErrorMessage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 20\n      }\n    }, error), /*#__PURE__*/React.createElement(FlashForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FacebookLogin, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(GoogleLogin, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(FormGroups, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CustomInput, {\n      type: \"text\",\n      name: \"email\",\n      value: email,\n      label: \"Email\",\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(CustomInput, {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      label: \"Password\",\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }), loaded && /*#__PURE__*/React.createElement(GoogleRecaptcha, {\n      onChange: this.handleChangeGoogleRecaptcha,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 22\n      }\n    }), /*#__PURE__*/React.createElement(CustomButton, {\n      variant: \"outlined\",\n      size: \"small\",\n      color: \"#0d47a1\",\n      bgColor: \"blue\",\n      disabled: disabled,\n      style: {\n        marginTop: \"1rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, \"Sign In\")), /*#__PURE__*/React.createElement(FormActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Option, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, \"Don't have account ? \", /*#__PURE__*/React.createElement(StyledLink, {\n      to: `${authPath}/signup`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 40\n      }\n    }, \"Signup account\")), /*#__PURE__*/React.createElement(Option, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, \"Forgot password ? \", /*#__PURE__*/React.createElement(StyledLink, {\n      to: `${authPath}/restore-account`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 37\n      }\n    }, \"Get Password Again.\"))));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  error: selectUserError\n});\n\nconst mapDispatchToProps = dispatch => ({\n  login: (email, password) => dispatch(loginStart(email, password))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(SignIn));","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Auth/sign-in/sign-in.component.jsx"],"names":["React","CustomFormContainer","FormHeader","Title","SubTitle","FormGroups","FormActions","StyledLink","Option","FlashForm","ErrorMessage","CustomInput","CustomButton","withRouter","connect","createStructuredSelector","selectUserError","loginStart","GoogleRecaptcha","FacebookLogin","GoogleLogin","SignIn","Component","constructor","props","state","email","password","error","disabled","loaded","captcha_value","timer","handleChange","e","name","value","target","setState","onSubmitSigninForm","preventDefault","login","handleChangeGoogleRecaptcha","signInRef","createRef","componentDidMount","setTimeout","window","scrollTo","top","current","offsetTop","behavior","componentWillUnmount","clearTimeout","componentDidUpdate","prevProps","render","authPath","marginTop","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React  from \"react\"; \nimport {CustomFormContainer, FormHeader, Title, SubTitle,  FormGroups, FormActions, StyledLink, Option, FlashForm , ErrorMessage} from \"../../UI/custom-form/custom-form.styles\";\nimport CustomInput from \"../../UI/custom-input/custom-input.component\";\nimport CustomButton from \"../../UI/custom-button/custom-button.component\";\nimport {withRouter} from \"react-router-dom\";\nimport {connect} from \"react-redux\"\nimport {createStructuredSelector} from \"reselect\";\nimport {selectUserError} from \"../../../redux/user/user.selectors\"\nimport {loginStart} from \"../../../redux/user/user.actions\";\nimport GoogleRecaptcha from \"../../UI/google-recaptcha/google-recaptcha.component\";\nimport FacebookLogin from \"../../UI/facebook-login/facebook-login.component\";\nimport GoogleLogin from \"../../UI/google-login/google-login.component\";\nclass SignIn extends React.Component{\n  constructor(props){\n    super(props);\n    this.signInRef = React.createRef();\n  }\n  state = {\n    email : \"\", \n    password : \"\",\n    error : null, \n    disabled : true , \n    loaded : false ,\n    captcha_value :null\n  }\n\n\n  timer = null ;\n  componentDidMount(){\n    this.timer = setTimeout(() => {\n      this.setState({loaded: true})\n    },1000)    \n    window.scrollTo({\n      top : this.signInRef.current.offsetTop, \n      behavior : \"smooth\"\n    })\n  }\n  componentWillUnmount(){\n    clearTimeout(this.timer);\n  }\n\n  handleChange = e => {\n    const {name, value} = e.target;\n    this.setState({ [name] : value})\n  }\n  componentDidUpdate(prevProps){\n    if(prevProps.error !== this.props.error){\n      this.setState({error : this.props.error})\n    }\n  }\n\n  onSubmitSigninForm = async e => {\n    e.preventDefault();\n    const {email, password} = this.state ; \n    if(!email || !password){\n      this.setState({error : \"Email và mật khẩu không được để trống\"});\n      return;\n    }\n    this.setState({error : null })\n    try {\n      this.props.login(email,password)\n    } catch (error) {\n      this.setState({error : error})\n    }\n  }\n  handleChangeGoogleRecaptcha = value => {\n    this.setState({ captcha_value: value, disabled: false });\n    if (value === null) this.setState({ disabled: true });\n  }\n\n  render(){    \n    const {email, password, error, disabled, loaded} = this.state;   \n    const {authPath}  = this.props;   \n    return (\n      <CustomFormContainer onSubmit={this.onSubmitSigninForm} ref={this.signInRef}>\n        <FormHeader>\n          <Title>Sign In</Title>\n          <SubTitle>Sign in your account via email and password.</SubTitle>\n        </FormHeader>\n        {error &&  <ErrorMessage>{error}</ErrorMessage>}\n        <FlashForm>\n          <FacebookLogin/>\n          <GoogleLogin/>         \n        </FlashForm>\n        <FormGroups>                        \n          <CustomInput type=\"text\" name=\"email\" value={email} label=\"Email\" onChange={this.handleChange} required/>\n          <CustomInput type=\"password\" name=\"password\" value={password} label=\"Password\" onChange={this.handleChange} required/>\n          {loaded && <GoogleRecaptcha onChange={this.handleChangeGoogleRecaptcha}/>}\n          <CustomButton variant=\"outlined\" size=\"small\" color=\"#0d47a1\" bgColor=\"blue\" disabled={disabled} style={{marginTop : \"1rem\"}}>Sign In</CustomButton>\n        </FormGroups>       \n        <FormActions>          \n          <Option>Don't have account ? <StyledLink to={`${authPath}/signup`}>Signup account</StyledLink></Option>\n          <Option>Forgot password ? <StyledLink to={`${authPath}/restore-account`}>Get Password Again.</StyledLink></Option>\n        </FormActions>\n      </CustomFormContainer>\n    )\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  error : selectUserError\n})\n\nconst mapDispatchToProps = dispatch => ({\n  login : (email,password) => dispatch(loginStart(email, password))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(SignIn));"]},"metadata":{},"sourceType":"module"}