{"ast":null,"code":"export const setLikeForComment = (comments, commentId, userId) => {\n  return comments.map(comment => {\n    if (comment._id == commentId) {\n      comment.likes.push(userId);\n      comment.dislikes = comment.dislikes.filter(_id => _id != userId);\n    }\n\n    return comment;\n  });\n};\nexport const setUnlikeForComment = (comments, commentId, userId) => {\n  return comments.map(comment => {\n    if (comment._id == commentId) {\n      comment.likes = comment.likes.filter(_id => _id != userId);\n    }\n\n    return comment;\n  });\n};\nexport const setDislikeForComment = (comments, commentId, userId) => {\n  return comments.map(comment => {\n    if (comment._id == commentId) {\n      comment.dislikes.push(userId);\n      comment.likes = comment.likes.filter(_id => _id != userId);\n    }\n\n    return comment;\n  });\n};\nexport const setUndislikeForComment = (comments, commentId, userId) => {\n  return comments.map(comment => {\n    if (comment._id == commentId) {\n      comment.dislikes = comment.dislikes.filter(_id => _id != userId);\n    }\n\n    return comment;\n  });\n};\nexport const setResponseComment = (comments, commentId, response) => {\n  return comments.map(comment => {\n    if (comment._id == commentId) {\n      comment.responses.push(response._id);\n    }\n\n    return comment;\n  });\n};\nexport const setLikeForResponseComment = (responses, responseId, userId) => {\n  return responses.map(response => {\n    if (response._id == responseId) {\n      response.likes.push(userId);\n      response.dislikes = response.dislikes.filter(_id => _id !== userId);\n    }\n\n    return response;\n  });\n};\nexport const setUnlikeForResponseComment = (responses, responseId, userId) => responses.map(response => {\n  if (response._id == responseId) {\n    response.likes = response.likes.filter(_id => _id !== userId);\n  }\n\n  return response;\n});\nexport const setDislikeForResponseComment = (responses, responseId, userId) => responses.map(response => {\n  if (response._id == responseId) {\n    response.dislikes.push(userId);\n    response.likes = response.likes.filter(_id => _id != userId);\n  }\n\n  return response;\n});\nexport const setUndislikeForResponseComment = (responses, responseId, userId) => responses.map(response => {\n  if (response._id == responseId) {\n    response.dislikes = response.dislikes.filter(_id => _id != userId);\n  }\n\n  return response;\n});\nexport const updateCommentToResponseComment = (comments, commentId, userId) => comments.map(comment => {\n  if (comment._id == commentId) {\n    comment.responses.push(userId);\n  }\n\n  return comment;\n});\nexport const updateResponseCommentReadMore = (comments, commentId, responses) => comments.map(comment => {\n  if (comment._id == commentId) {\n    comment.responses = [...comment.responses, responses.map(response => response._id)];\n  }\n\n  return comment;\n});","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/redux/product-comment-review/product-comment-review.utils.js"],"names":["setLikeForComment","comments","commentId","userId","map","comment","_id","likes","push","dislikes","filter","setUnlikeForComment","setDislikeForComment","setUndislikeForComment","setResponseComment","response","responses","setLikeForResponseComment","responseId","setUnlikeForResponseComment","setDislikeForResponseComment","setUndislikeForResponseComment","updateCommentToResponseComment","updateResponseCommentReadMore"],"mappings":"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","sourcesContent":["export const setLikeForComment = (comments, commentId, userId) => {\n  return comments.map((comment) => {\n    if (comment._id == commentId) {\n      comment.likes.push(userId);\n      comment.dislikes = comment.dislikes.filter((_id) => _id != userId);\n    }\n    return comment;\n  });\n};\n\nexport const setUnlikeForComment = (comments, commentId, userId) => {\n  return comments.map((comment) => {\n    if (comment._id == commentId) {\n      comment.likes = comment.likes.filter((_id) => _id != userId);\n    }\n    return comment;\n  });\n};\nexport const setDislikeForComment = (comments, commentId, userId) => {\n  return comments.map((comment) => {\n    if (comment._id == commentId) {\n      comment.dislikes.push(userId);\n      comment.likes = comment.likes.filter((_id) => _id != userId);\n    }\n    return comment;\n  });\n};\n\nexport const setUndislikeForComment = (comments, commentId, userId) => {\n  return comments.map((comment) => {\n    if (comment._id == commentId) {\n      comment.dislikes = comment.dislikes.filter((_id) => _id != userId);\n    }\n    return comment;\n  });\n};\n\nexport const setResponseComment = (comments, commentId, response) => {\n  return comments.map((comment) => {\n    if (comment._id == commentId) {\n      comment.responses.push(response._id);\n    }\n    return comment;\n  });\n};\nexport const setLikeForResponseComment = (responses, responseId, userId) => {\n  return responses.map((response) => {\n    if (response._id == responseId) {\n      response.likes.push(userId);\n      response.dislikes = response.dislikes.filter((_id) => _id !== userId);\n    }\n    return response;\n  });\n};\n\nexport const setUnlikeForResponseComment = (responses, responseId, userId) =>\n  responses.map((response) => {\n    if (response._id == responseId) {\n      response.likes = response.likes.filter((_id) => _id !== userId);\n    }\n    return response;\n  });\n\nexport const setDislikeForResponseComment = (responses, responseId, userId) =>\n  responses.map((response) => {\n    if (response._id == responseId) {\n      response.dislikes.push(userId);\n      response.likes = response.likes.filter((_id) => _id != userId);\n    }\n    return response;\n  });\n\nexport const setUndislikeForResponseComment = (responses, responseId, userId) =>\n  responses.map((response) => {\n    if (response._id == responseId) {\n      response.dislikes = response.dislikes.filter((_id) => _id != userId);\n    }\n    return response;\n  });\n\nexport const updateCommentToResponseComment = (comments, commentId, userId) =>\n  comments.map((comment) => {\n    if (comment._id == commentId) {\n      comment.responses.push(userId);\n    }\n    return comment;\n  });\nexport const updateResponseCommentReadMore = (comments, commentId, responses) =>\n  comments.map((comment) => {\n    if (comment._id == commentId) {\n      comment.responses = [\n        ...comment.responses,\n        responses.map((response) => response._id),\n      ];\n    }\n    return comment;\n  });\n"]},"metadata":{},"sourceType":"module"}