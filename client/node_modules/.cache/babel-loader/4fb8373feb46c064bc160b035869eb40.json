{"ast":null,"code":"import productTypeActionTypes from \"./product-type.types\";\nconst INITIAL_STATE = {\n  name: \"\",\n  productGroupList: [],\n  manufactorList: [],\n  discountProductList: [],\n  topRatedProducts: [],\n  bestSellerProducts: [],\n  productList: [],\n  numProducts: 0,\n  numPages: 0,\n  currentPage: 1,\n  maxPrice: 0,\n  fetched: false,\n  error: undefined,\n  loading: false,\n  loadingProductList: false,\n  isFilter: false\n};\nexport default ((state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case productTypeActionTypes.FETCH_CONTENT_LIST_BY_PRODUCT_TYPE_START:\n      return { ...state,\n        error: undefined,\n        loading: true,\n        fetched: true\n      };\n\n    case productTypeActionTypes.FETCH_PRODUCT_LIST_START:\n      return { ...state,\n        error: undefined,\n        loadingProductList: true,\n        isFilter: false\n      };\n\n    case productTypeActionTypes.FILTER_PRODUCTS_BY_PRICE_START:\n      return { ...state,\n        error: undefined,\n        loadingProductList: true,\n        isFilter: true\n      };\n\n    case productTypeActionTypes.FETCH_CONTENT_LIST_BY_PRODUCT_TYPE_SUCCESS:\n      return { ...state,\n        name: action.payload.name,\n        productGroupList: action.payload.productGroupList,\n        manufactorList: action.payload.manufactorList,\n        discountProductList: action.payload.discountProductList,\n        topRatedProducts: action.payload.topRatedProducts,\n        bestSellerProducts: action.payload.bestSellerProducts,\n        productList: action.payload.productList,\n        numProducts: +action.payload.numProducts,\n        currentPage: +action.payload.currentPage,\n        numPages: +action.payload.numPages,\n        maxPrice: +action.payload.maxPrice,\n        loading: false\n      };\n\n    case productTypeActionTypes.FETCH_PRODUCT_LIST_SUCCESS:\n      return { ...state,\n        productList: action.payload,\n        loadingProductList: false\n      };\n\n    case productTypeActionTypes.SET_CURRENT_PAGE:\n      return { ...state,\n        currentPage: +action.payload,\n        loadingProductList: false\n      };\n\n    case productTypeActionTypes.FETCH_PRODUCT_LIST_FAIL:\n      return { ...state,\n        error: {\n          msg: action.payload.msg,\n          status: action.payload.status\n        },\n        loadingProductList: false\n      };\n\n    case productTypeActionTypes.FETCH_CONTENT_LIST_BY_PRODUCT_TYPE_FAIL:\n      return { ...state,\n        error: {\n          msg: action.payload.msg,\n          status: action.payload.status\n        },\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/redux/product-type/product-type.reducer.js"],"names":["productTypeActionTypes","INITIAL_STATE","name","productGroupList","manufactorList","discountProductList","topRatedProducts","bestSellerProducts","productList","numProducts","numPages","currentPage","maxPrice","fetched","error","undefined","loading","loadingProductList","isFilter","state","action","type","FETCH_CONTENT_LIST_BY_PRODUCT_TYPE_START","FETCH_PRODUCT_LIST_START","FILTER_PRODUCTS_BY_PRICE_START","FETCH_CONTENT_LIST_BY_PRODUCT_TYPE_SUCCESS","payload","FETCH_PRODUCT_LIST_SUCCESS","SET_CURRENT_PAGE","FETCH_PRODUCT_LIST_FAIL","msg","status","FETCH_CONTENT_LIST_BY_PRODUCT_TYPE_FAIL"],"mappings":"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","sourcesContent":["import productTypeActionTypes from \"./product-type.types\";\n\nconst INITIAL_STATE = {\n  name: \"\",\n  productGroupList: [],\n  manufactorList: [],\n  discountProductList: [],\n  topRatedProducts: [],\n  bestSellerProducts: [],\n  productList: [],\n  numProducts: 0,\n  numPages: 0,\n  currentPage: 1,\n  maxPrice: 0,\n  fetched: false,\n  error: undefined,\n  loading: false,\n  loadingProductList: false,\n  isFilter: false,\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case productTypeActionTypes.FETCH_CONTENT_LIST_BY_PRODUCT_TYPE_START:\n      return {\n        ...state,\n        error: undefined,\n        loading: true,\n        fetched: true,\n      };\n    case productTypeActionTypes.FETCH_PRODUCT_LIST_START:\n      return {\n        ...state,\n        error: undefined,\n        loadingProductList: true,\n        isFilter: false,\n      };\n    case productTypeActionTypes.FILTER_PRODUCTS_BY_PRICE_START:\n      return {\n        ...state,\n        error: undefined,\n        loadingProductList: true,\n        isFilter: true,\n      };\n    case productTypeActionTypes.FETCH_CONTENT_LIST_BY_PRODUCT_TYPE_SUCCESS:\n      return {\n        ...state,\n        name: action.payload.name,\n        productGroupList: action.payload.productGroupList,\n        manufactorList: action.payload.manufactorList,\n        discountProductList: action.payload.discountProductList,\n        topRatedProducts: action.payload.topRatedProducts,\n        bestSellerProducts: action.payload.bestSellerProducts,\n        productList: action.payload.productList,\n        numProducts: +action.payload.numProducts,\n        currentPage: +action.payload.currentPage,\n        numPages: +action.payload.numPages,\n        maxPrice: +action.payload.maxPrice,\n        loading: false,\n      };\n    case productTypeActionTypes.FETCH_PRODUCT_LIST_SUCCESS:\n      return {\n        ...state,\n        productList: action.payload,\n        loadingProductList: false,\n      };\n    case productTypeActionTypes.SET_CURRENT_PAGE:\n      return {\n        ...state,\n        currentPage: +action.payload,\n        loadingProductList: false,\n      };\n    case productTypeActionTypes.FETCH_PRODUCT_LIST_FAIL:\n      return {\n        ...state,\n        error: { msg: action.payload.msg, status: action.payload.status },\n        loadingProductList: false,\n      };\n    case productTypeActionTypes.FETCH_CONTENT_LIST_BY_PRODUCT_TYPE_FAIL:\n      return {\n        ...state,\n        error: { msg: action.payload.msg, status: action.payload.status },\n        loading: false,\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}