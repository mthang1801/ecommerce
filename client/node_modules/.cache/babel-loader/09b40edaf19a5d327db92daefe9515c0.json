{"ast":null,"code":"import { put, takeLatest } from \"redux-saga/effects\";\nimport * as categoryActions from \"./category.actions\";\nimport urls from \"../../utils/urls\";\nimport axios from \"axios\";\nexport function* fetchCategory() {\n  try {\n    const {\n      data\n    } = yield axios.get(urls.GET_LIST_CATEGORY);\n    yield put(categoryActions.fetchCategorySuccess(data));\n  } catch (error) {\n    yield put(categoryActions.fetchCategoryFail(error.response.data.message));\n  }\n}\n\nfunction* onFetchCategory() {\n  yield takeLatest(categoryActions.fetchCategoryStart, fetchCategory);\n}\n\nexport default function* categorySaga() {\n  yield all([call(onFetchCategory)]);\n}","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/redux/category/category.saga.js"],"names":["put","takeLatest","categoryActions","urls","axios","fetchCategory","data","get","GET_LIST_CATEGORY","fetchCategorySuccess","error","fetchCategoryFail","response","message","onFetchCategory","fetchCategoryStart","categorySaga","all","call"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,QAAgC,oBAAhC;AACA,OAAO,KAAKC,eAAZ,MAAiC,oBAAjC;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,UAAUC,aAAV,GAA0B;AAC/B,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMF,KAAK,CAACG,GAAN,CAAUJ,IAAI,CAACK,iBAAf,CAAvB;AACA,UAAMR,GAAG,CAACE,eAAe,CAACO,oBAAhB,CAAqCH,IAArC,CAAD,CAAT;AACD,GAHD,CAGE,OAAOI,KAAP,EAAc;AACd,UAAMV,GAAG,CAACE,eAAe,CAACS,iBAAhB,CAAkCD,KAAK,CAACE,QAAN,CAAeN,IAAf,CAAoBO,OAAtD,CAAD,CAAT;AACD;AACF;;AAED,UAAUC,eAAV,GAA4B;AAC1B,QAAMb,UAAU,CAACC,eAAe,CAACa,kBAAjB,EAAqCV,aAArC,CAAhB;AACD;;AAED,eAAe,UAAUW,YAAV,GAAyB;AACtC,QAAMC,GAAG,CAAC,CAACC,IAAI,CAACJ,eAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { put, takeLatest } from \"redux-saga/effects\";\nimport * as categoryActions from \"./category.actions\";\nimport urls from \"../../utils/urls\";\nimport axios from \"axios\";\nexport function* fetchCategory() {\n  try {\n    const { data } = yield axios.get(urls.GET_LIST_CATEGORY);\n    yield put(categoryActions.fetchCategorySuccess(data));\n  } catch (error) {\n    yield put(categoryActions.fetchCategoryFail(error.response.data.message));\n  }\n}\n\nfunction* onFetchCategory() {\n  yield takeLatest(categoryActions.fetchCategoryStart, fetchCategory);\n}\n\nexport default function* categorySaga() {\n  yield all([call(onFetchCategory)]);\n}\n"]},"metadata":{},"sourceType":"module"}