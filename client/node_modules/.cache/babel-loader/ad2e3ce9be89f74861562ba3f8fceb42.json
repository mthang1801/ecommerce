{"ast":null,"code":"import productGroupActionTypes from \"./product-group.types\";\nimport axios from \"axios\";\nimport urls from \"../../utils/urls\";\nexport const fetchProductGroupStart = () => ({\n  type: productGroupActionTypes.FETCH_CONTENT_LIST_BY_PRODUCT_GROUP_START\n});\nexport const fetchProductGroupSuccess = ({\n  name,\n  productList,\n  numProducts,\n  currentPage,\n  numPages,\n  maxPrice\n}) => ({\n  type: productGroupActionTypes.FETCH_CONTENT_LIST_BY_PRODUCT_GROUP_SUCCESS,\n  payload: {\n    name,\n    productList,\n    numProducts,\n    currentPage,\n    numPages,\n    maxPrice\n  }\n});\nexport const fetchProductTypeFail = err => ({\n  type: productGroupActionTypes.FETCH_CONTENT_LIST_BY_PRODUCT_GROUP_FAIL,\n  payload: {\n    msg: err.response.data.message,\n    status: err.response.status\n  }\n});\nexport const fetchProductType = (categoryUrl, productTypeUrl, page = 1) => async dispatch => {\n  try {\n    dispatch(fetchProductGroupStart());\n    let {\n      data\n    } = await axios.get(urls.GET_CONTENT_LIST_BY_PRODUCT_TYPE_URL(categoryUrl, productTypeUrl, page));\n    data.currentPage = page;\n    dispatch(fetchProductGroupSuccess(data));\n  } catch (error) {\n    dispatch(fetchProductTypeFail(error));\n  }\n};\nexport const setCurrentPage = curPage => ({\n  type: productGroupActionTypes.SET_CURRENT_PAGE,\n  payload: curPage\n});\nexport const fetchProductListStart = () => ({\n  type: productGroupActionTypes.FETCH_PRODUCT_LIST_START\n});\nexport const fetchProductListSuccess = productList => ({\n  type: productGroupActionTypes.FETCH_PRODUCT_LIST_SUCCESS,\n  payload: productList\n});\nexport const fetchProductListFail = err => ({\n  type: productGroupActionTypes.FETCH_PRODUCT_LIST_FAIL,\n  payload: {\n    msg: err.response.data.message,\n    status: err.response.status\n  }\n});\nexport const fetchProductList = (categoryUrl, productTypeUrl, page) => async (dispatch) => {\n  try {\n    console.log(page);\n    dispatch(fetchProductListStart());\n    const {\n      data\n    } = await axios.get(urls.GET_PRODUCT_LIST_PER_PAGE_BY_PRODUCT_TYPE_PATH_URL(categoryUrl, productTypeUrl, page));\n    dispatch(fetchProductListSuccess(data));\n  } catch (error) {\n    dispatch(fetchProductListFail(error));\n  }\n};","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/redux/product-group/product-group.actions.js"],"names":["productGroupActionTypes","axios","urls","fetchProductGroupStart","type","FETCH_CONTENT_LIST_BY_PRODUCT_GROUP_START","fetchProductGroupSuccess","name","productList","numProducts","currentPage","numPages","maxPrice","FETCH_CONTENT_LIST_BY_PRODUCT_GROUP_SUCCESS","payload","fetchProductTypeFail","err","FETCH_CONTENT_LIST_BY_PRODUCT_GROUP_FAIL","msg","response","data","message","status","fetchProductType","categoryUrl","productTypeUrl","page","dispatch","get","GET_CONTENT_LIST_BY_PRODUCT_TYPE_URL","error","setCurrentPage","curPage","SET_CURRENT_PAGE","fetchProductListStart","FETCH_PRODUCT_LIST_START","fetchProductListSuccess","FETCH_PRODUCT_LIST_SUCCESS","fetchProductListFail","FETCH_PRODUCT_LIST_FAIL","fetchProductList","console","log","GET_PRODUCT_LIST_PER_PAGE_BY_PRODUCT_TYPE_PATH_URL"],"mappings":"AAAA,OAAOA,uBAAP,MAAoC,uBAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAO,MAAMC,sBAAsB,GAAG,OAAO;AAC3CC,EAAAA,IAAI,EAAEJ,uBAAuB,CAACK;AADa,CAAP,CAA/B;AAGP,OAAO,MAAMC,wBAAwB,GAAG,CAAC;AACvCC,EAAAA,IADuC;AAEvCC,EAAAA,WAFuC;AAGvCC,EAAAA,WAHuC;AAIvCC,EAAAA,WAJuC;AAKvCC,EAAAA,QALuC;AAMvCC,EAAAA;AANuC,CAAD,MAOjC;AACLR,EAAAA,IAAI,EAAEJ,uBAAuB,CAACa,2CADzB;AAELC,EAAAA,OAAO,EAAE;AACPP,IAAAA,IADO;AAEPC,IAAAA,WAFO;AAGPC,IAAAA,WAHO;AAIPC,IAAAA,WAJO;AAKPC,IAAAA,QALO;AAMPC,IAAAA;AANO;AAFJ,CAPiC,CAAjC;AAkBP,OAAO,MAAMG,oBAAoB,GAAIC,GAAD,KAAU;AAC5CZ,EAAAA,IAAI,EAAEJ,uBAAuB,CAACiB,wCADc;AAE5CH,EAAAA,OAAO,EAAE;AAAEI,IAAAA,GAAG,EAAEF,GAAG,CAACG,QAAJ,CAAaC,IAAb,CAAkBC,OAAzB;AAAkCC,IAAAA,MAAM,EAAEN,GAAG,CAACG,QAAJ,CAAaG;AAAvD;AAFmC,CAAV,CAA7B;AAKP,OAAO,MAAMC,gBAAgB,GAAG,CAC9BC,WAD8B,EAE9BC,cAF8B,EAG9BC,IAAI,GAAG,CAHuB,KAI3B,MAAOC,QAAP,IAAoB;AACvB,MAAI;AACFA,IAAAA,QAAQ,CAACxB,sBAAsB,EAAvB,CAAR;AACA,QAAI;AAAEiB,MAAAA;AAAF,QAAW,MAAMnB,KAAK,CAAC2B,GAAN,CACnB1B,IAAI,CAAC2B,oCAAL,CACEL,WADF,EAEEC,cAFF,EAGEC,IAHF,CADmB,CAArB;AAOAN,IAAAA,IAAI,CAACV,WAAL,GAAmBgB,IAAnB;AACAC,IAAAA,QAAQ,CAACrB,wBAAwB,CAACc,IAAD,CAAzB,CAAR;AACD,GAXD,CAWE,OAAOU,KAAP,EAAc;AACdH,IAAAA,QAAQ,CAACZ,oBAAoB,CAACe,KAAD,CAArB,CAAR;AACD;AACF,CAnBM;AAqBP,OAAO,MAAMC,cAAc,GAAIC,OAAD,KAAc;AAC1C5B,EAAAA,IAAI,EAAEJ,uBAAuB,CAACiC,gBADY;AAE1CnB,EAAAA,OAAO,EAAEkB;AAFiC,CAAd,CAAvB;AAKP,OAAO,MAAME,qBAAqB,GAAG,OAAO;AAC1C9B,EAAAA,IAAI,EAAEJ,uBAAuB,CAACmC;AADY,CAAP,CAA9B;AAGP,OAAO,MAAMC,uBAAuB,GAAI5B,WAAD,KAAkB;AACvDJ,EAAAA,IAAI,EAAEJ,uBAAuB,CAACqC,0BADyB;AAEvDvB,EAAAA,OAAO,EAAEN;AAF8C,CAAlB,CAAhC;AAIP,OAAO,MAAM8B,oBAAoB,GAAItB,GAAD,KAAU;AAC5CZ,EAAAA,IAAI,EAAEJ,uBAAuB,CAACuC,uBADc;AAE5CzB,EAAAA,OAAO,EAAE;AAAEI,IAAAA,GAAG,EAAEF,GAAG,CAACG,QAAJ,CAAaC,IAAb,CAAkBC,OAAzB;AAAkCC,IAAAA,MAAM,EAAEN,GAAG,CAACG,QAAJ,CAAaG;AAAvD;AAFmC,CAAV,CAA7B;AAKP,OAAO,MAAMkB,gBAAgB,GAAG,CAAChB,WAAD,EAAcC,cAAd,EAA8BC,IAA9B,KAAuC,OACrEC,QADqE,KAElE;AACH,MAAI;AACFc,IAAAA,OAAO,CAACC,GAAR,CAAYhB,IAAZ;AACAC,IAAAA,QAAQ,CAACO,qBAAqB,EAAtB,CAAR;AACA,UAAM;AAAEd,MAAAA;AAAF,QAAW,MAAMnB,KAAK,CAAC2B,GAAN,CACrB1B,IAAI,CAACyC,kDAAL,CACEnB,WADF,EAEEC,cAFF,EAGEC,IAHF,CADqB,CAAvB;AAOAC,IAAAA,QAAQ,CAACS,uBAAuB,CAAChB,IAAD,CAAxB,CAAR;AACD,GAXD,CAWE,OAAOU,KAAP,EAAc;AACdH,IAAAA,QAAQ,CAACW,oBAAoB,CAACR,KAAD,CAArB,CAAR;AACD;AACF,CAjBM","sourcesContent":["import productGroupActionTypes from \"./product-group.types\";\nimport axios from \"axios\";\nimport urls from \"../../utils/urls\";\nexport const fetchProductGroupStart = () => ({\n  type: productGroupActionTypes.FETCH_CONTENT_LIST_BY_PRODUCT_GROUP_START,\n});\nexport const fetchProductGroupSuccess = ({\n  name,\n  productList,\n  numProducts,\n  currentPage,\n  numPages,\n  maxPrice,\n}) => ({\n  type: productGroupActionTypes.FETCH_CONTENT_LIST_BY_PRODUCT_GROUP_SUCCESS,\n  payload: {\n    name,\n    productList,\n    numProducts,\n    currentPage,\n    numPages,\n    maxPrice,\n  },\n});\nexport const fetchProductTypeFail = (err) => ({\n  type: productGroupActionTypes.FETCH_CONTENT_LIST_BY_PRODUCT_GROUP_FAIL,\n  payload: { msg: err.response.data.message, status: err.response.status },\n});\n\nexport const fetchProductType = (\n  categoryUrl,\n  productTypeUrl,\n  page = 1\n) => async (dispatch) => {\n  try {\n    dispatch(fetchProductGroupStart());\n    let { data } = await axios.get(\n      urls.GET_CONTENT_LIST_BY_PRODUCT_TYPE_URL(\n        categoryUrl,\n        productTypeUrl,\n        page\n      )\n    );\n    data.currentPage = page;\n    dispatch(fetchProductGroupSuccess(data));\n  } catch (error) {\n    dispatch(fetchProductTypeFail(error));\n  }\n};\n\nexport const setCurrentPage = (curPage) => ({\n  type: productGroupActionTypes.SET_CURRENT_PAGE,\n  payload: curPage,\n});\n\nexport const fetchProductListStart = () => ({\n  type: productGroupActionTypes.FETCH_PRODUCT_LIST_START,\n});\nexport const fetchProductListSuccess = (productList) => ({\n  type: productGroupActionTypes.FETCH_PRODUCT_LIST_SUCCESS,\n  payload: productList,\n});\nexport const fetchProductListFail = (err) => ({\n  type: productGroupActionTypes.FETCH_PRODUCT_LIST_FAIL,\n  payload: { msg: err.response.data.message, status: err.response.status },\n});\n\nexport const fetchProductList = (categoryUrl, productTypeUrl, page) => async (\n  dispatch\n) => {\n  try {\n    console.log(page);\n    dispatch(fetchProductListStart());\n    const { data } = await axios.get(\n      urls.GET_PRODUCT_LIST_PER_PAGE_BY_PRODUCT_TYPE_PATH_URL(\n        categoryUrl,\n        productTypeUrl,\n        page\n      )\n    );\n    dispatch(fetchProductListSuccess(data));\n  } catch (error) {\n    dispatch(fetchProductListFail(error));\n  }\n};\n"]},"metadata":{},"sourceType":"module"}