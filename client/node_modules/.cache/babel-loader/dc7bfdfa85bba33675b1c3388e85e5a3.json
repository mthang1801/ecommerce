{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Checkout/update-user-form/update-user-form.component.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Form, FormInline, FormGroup, Label, Input, Required, Select, Option, Button, Title } from \"./update-user-form.styles\";\nimport { connect } from \"react-redux\";\nimport { updateUserInfo } from \"../../../redux/user/user.actions\";\nimport Spinner from \"../../UI/spinner/spinner.component\";\n\nconst CheckoutForm = ({\n  currentUser,\n  updateUserInfo,\n  history\n}) => {\n  const handleUpdateUserInfo = () => {};\n\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [district, setDistrict] = useState(\"\");\n  const [ward, setWard] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [disabledBtn, setDisabledBtn] = useState(true);\n  const [err, setErr] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    if (!firstName || !lastName || !city || !district || !ward || !address || !phone || !email) return setDisabledBtn(true);\n    setDisabledBtn(false);\n  }, [firstName, lastName, city, district, ward, address, phone, email]);\n  useEffect(() => {\n    if (currentUser && currentUser.information) {\n      setFirstName(currentUser.information.first_name);\n      setLastName(currentUser.information.last_name);\n      setCity(currentUser.information.city);\n      setDistrict(currentUser.information.district);\n      setWard(currentUser.information.ward);\n      setAddress(currentUser.information.address);\n      setPhone(currentUser.information.phone);\n      setEmail(currentUser.information.email);\n    }\n  }, [currentUser]);\n\n  const handleSubmitUpdateForm = e => {\n    e.preventDefault();\n\n    if (!firstName || !lastName || !city || !district || !ward || !address || !phone || !email) {\n      return setErr(\"Bạn phải điền tất cả các trường\");\n    }\n\n    setLoading(true);\n    const userInformation = {\n      first_name: firstName,\n      last_name: lastName,\n      city,\n      district,\n      ward,\n      address,\n      phone,\n      email\n    };\n    updateUserInfo(userInformation).then(res => {\n      history.replace(\"/checkout\");\n      setLoading(false);\n    }).catch(err => {\n      setErr(err.response.data.message);\n      setLoading(false);\n    });\n  };\n\n  if (loading) return /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 10\n    }\n  });\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmitUpdateForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, \"C\\u1EADp nh\\u1EADt th\\xF4ng tin\"), err ? /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 14\n    }\n  }, err) : null, /*#__PURE__*/React.createElement(FormInline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"fname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, \"H\\u1ECD\", /*#__PURE__*/React.createElement(Required, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(Input, {\n    name: \"fname\",\n    value: firstName,\n    onChange: e => setFirstName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"lname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, \"T\\xEAn\", /*#__PURE__*/React.createElement(Required, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 16\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(Input, {\n    name: \"lname\",\n    value: lastName,\n    onChange: e => setLastName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, \"T\\u1EC9nh/ Th\\xE0nh ph\\u1ED1\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"city\",\n    value: city,\n    onChange: e => setCity(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"district\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, \"Qu\\u1EADn/ Huy\\u1EC7n\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"district\",\n    value: district,\n    onChange: e => setDistrict(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"ward\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, \"Ph\\u01B0\\u1EDDng/ X\\xE3\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"ward\",\n    value: ward,\n    onChange: e => setWard(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, \"S\\u1ED1 nh\\xE0, \\u0111\\u01B0\\u1EDDng\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"address\",\n    value: address,\n    onChange: e => setAddress(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FormInline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"phone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, \"S\\u1ED1 \\u0111i\\u1EC7n tho\\u1EA1i\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"phone\",\n    value: phone,\n    onChange: e => setPhone(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      display: \"block\",\n      margin: \"0 auto\"\n    },\n    onClick: handleUpdateUserInfo,\n    disabled: disabledBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }\n  }, \"L\\u01B0u thay \\u0111\\u1ED5i\"));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  updateUserInfo: userInfo => dispatch(updateUserInfo(userInfo))\n});\n\nexport default connect(null, mapDispatchToProps)(CheckoutForm);","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Checkout/update-user-form/update-user-form.component.jsx"],"names":["React","useState","useEffect","Form","FormInline","FormGroup","Label","Input","Required","Select","Option","Button","Title","connect","updateUserInfo","Spinner","CheckoutForm","currentUser","history","handleUpdateUserInfo","firstName","setFirstName","lastName","setLastName","city","setCity","district","setDistrict","ward","setWard","address","setAddress","phone","setPhone","email","setEmail","disabledBtn","setDisabledBtn","err","setErr","loading","setLoading","information","first_name","last_name","handleSubmitUpdateForm","e","preventDefault","userInformation","then","res","replace","catch","response","data","message","target","value","display","margin","mapDispatchToProps","dispatch","userInfo"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Form,\n  FormInline,\n  FormGroup,\n  Label,\n  Input,\n  Required,\n  Select,\n  Option,\n  Button,\n  Title\n} from \"./update-user-form.styles\";\nimport { connect } from \"react-redux\";\nimport { updateUserInfo } from \"../../../redux/user/user.actions\";\nimport Spinner from \"../../UI/spinner/spinner.component\"\nconst CheckoutForm = ({ currentUser, updateUserInfo, history }) => {\n  const handleUpdateUserInfo = () => {};\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [district, setDistrict] = useState(\"\");\n  const [ward, setWard] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [disabledBtn, setDisabledBtn] = useState(true);\n  const [err, setErr] = useState(null);\n  const [loading, setLoading] = useState(false); \n  useEffect(() => {\n    if (    \n      !firstName ||\n      !lastName ||\n      !city ||\n      !district ||\n      !ward ||\n      !address ||\n      !phone ||\n      !email\n    )\n      return setDisabledBtn(true);\n    setDisabledBtn(false);\n  }, [firstName, lastName, city, district, ward, address, phone, email]);\n  useEffect(() => {\n    if (currentUser && currentUser.information) {      \n      setFirstName(currentUser.information.first_name);\n      setLastName(currentUser.information.last_name);\n      setCity(currentUser.information.city);\n      setDistrict(currentUser.information.district);\n      setWard(currentUser.information.ward);\n      setAddress(currentUser.information.address);\n      setPhone(currentUser.information.phone);\n      setEmail(currentUser.information.email);\n    }\n  }, [currentUser]);\n  \n  const handleSubmitUpdateForm = (e) => {\n    e.preventDefault();\n    if (\n      !firstName ||\n      !lastName ||\n      !city ||\n      !district ||\n      !ward ||\n      !address ||\n      !phone ||\n      !email\n    ) {\n      return setErr(\"Bạn phải điền tất cả các trường\")\n    }\n    setLoading(true);\n    const userInformation = {\n      first_name : firstName, \n      last_name : lastName, \n      city,\n      district , \n      ward, \n      address, \n      phone, \n      email\n    }\n    updateUserInfo(userInformation)\n    .then(res => {\n      history.replace(\"/checkout\")\n      setLoading(false);\n    }).catch(err => {\n      setErr(err.response.data.message);\n      setLoading(false);\n    })\n  };\n  if(loading)\n  return <Spinner/>\n  return (\n    <Form onSubmit={handleSubmitUpdateForm}>      \n      <Title>Cập nhật thông tin</Title>\n      {err ? <h4>{err}</h4> : null}\n      <FormInline>\n        <FormGroup>\n          <Label htmlFor=\"fname\">\n            Họ<Required>*</Required>\n          </Label>\n          <Input\n            name=\"fname\"\n            value={firstName}\n            onChange={(e) => setFirstName(e.target.value)}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label htmlFor=\"lname\">\n            Tên<Required>*</Required>\n          </Label>\n          <Input\n            name=\"lname\"\n            value={lastName}\n            onChange={(e) => setLastName(e.target.value)}\n          />\n        </FormGroup>\n      </FormInline>\n      <FormGroup>\n        <Label htmlFor=\"city\">Tỉnh/ Thành phố</Label>\n        <Input\n          name=\"city\"\n          value={city}\n          onChange={(e) => setCity(e.target.value)}\n        />\n      </FormGroup>\n      <FormGroup>\n        <Label htmlFor=\"district\">Quận/ Huyện</Label>\n        <Input\n          name=\"district\"\n          value={district}\n          onChange={(e) => setDistrict(e.target.value)}\n        />\n      </FormGroup>\n      <FormGroup>\n        <Label htmlFor=\"ward\">Phường/ Xã</Label>\n        <Input\n          name=\"ward\"\n          value={ward}\n          onChange={(e) => setWard(e.target.value)}\n        />\n      </FormGroup>\n      <FormGroup>\n        <Label htmlFor=\"address\">Số nhà, đường</Label>\n        <Input\n          name=\"address\"\n          value={address}\n          onChange={(e) => setAddress(e.target.value)}\n        />\n      </FormGroup>\n      <FormInline>\n        <FormGroup>\n          <Label htmlFor=\"phone\">Số điện thoại</Label>\n          <Input\n            name=\"phone\"\n            value={phone}\n            onChange={(e) => setPhone(e.target.value)}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label htmlFor=\"email\">Email</Label>\n          <Input\n            name=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </FormGroup>\n      </FormInline>\n      {/* <Select >\n        <Option value=\"#\" disabled selected hidden>Phương thức thanh toán</Option>\n        <Option value=\"cod\">Tiền mặt (COD)</Option>\n        <Option value=\"paypal\">Thanh toán qua thẻ</Option>\n      </Select> */}\n      <Button\n        style={{ display: \"block\", margin: \"0 auto\" }}\n        onClick={handleUpdateUserInfo}\n        disabled={disabledBtn}\n      >\n        Lưu thay đổi\n      </Button>\n    </Form>\n  );\n};\nconst mapDispatchToProps = (dispatch) => ({\n  updateUserInfo: (userInfo) => dispatch(updateUserInfo(userInfo)),\n});\n\nexport default connect(null, mapDispatchToProps)(CheckoutForm);\n"]},"metadata":{},"sourceType":"module"}