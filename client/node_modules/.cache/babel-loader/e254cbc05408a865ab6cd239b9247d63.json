{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Layout/header/toolbar/toolbar.component.jsx\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { ToolbarContainer, ToolbarLeft, ToolbarItem, ToolbarRight } from \"./toolbar.styles\";\nimport ToggleLanguage from \"../../toggle-languages/toggle-languages.component\";\nimport ToggleUser from \"../../toggle-user/toggle-user.component\";\nimport AppContext from \"../../../../context/app-viewport.context\";\nimport { selectCurrentUser } from \"../../../../redux/user/user.selectors\";\nimport { createStructuredSelector } from \"reselect\";\nimport { connect } from \"react-redux\";\nimport { logoutStart } from \"../../../../redux/user/user.actions\";\n\nconst Toolbar = ({\n  user,\n  logout\n}) => {\n  const [smallView, setSmallView] = useState(window.innerWidth < 992);\n  const width = useContext(AppContext);\n  useEffect(() => {\n    if (width < 992) {\n      setSmallView(true);\n    } else {\n      setSmallView(false);\n    }\n  }, [width]);\n  if (!smallView) return /*#__PURE__*/React.createElement(ToolbarContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ToolbarLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, !smallView && /*#__PURE__*/React.createElement(ToolbarItem, {\n    mediumView: width < 1200,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, \"Mi\\u1EC5n ph\\xED v\\u1EADn chuy\\u1EC3n cho \\u0111\\u01A1n h\\xE0ng t\\u1EEB 500.000\")), /*#__PURE__*/React.createElement(ToolbarRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ToolbarItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ToggleLanguage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(ToolbarItem, {\n    style: {\n      width: width > 1200 ? \"30%\" : \"35%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ToggleUser, {\n    user: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 14\n    }\n  }))));\n  return null;\n};\n\nconst mapStateToProps = createStructuredSelector({\n  user: selectCurrentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n  logout: () => dispatch(logoutStart())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Toolbar);","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/client/src/components/Layout/header/toolbar/toolbar.component.jsx"],"names":["React","useContext","useEffect","useState","ToolbarContainer","ToolbarLeft","ToolbarItem","ToolbarRight","ToggleLanguage","ToggleUser","AppContext","selectCurrentUser","createStructuredSelector","connect","logoutStart","Toolbar","user","logout","smallView","setSmallView","window","innerWidth","width","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SACEC,gBADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,YAJF,QAKO,kBALP;AAMA,OAAOC,cAAP,MAA2B,mDAA3B;AACA,OAAOC,UAAP,MAAuB,yCAAvB;AACA,OAAOC,UAAP,MAAuB,0CAAvB;AACA,SAAQC,iBAAR,QAAgC,uCAAhC;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,QAA0B,qCAA1B;;AACA,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAMC,EAAAA;AAAN,CAAD,KAAmB;AACjC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAACiB,MAAM,CAACC,UAAP,GAAoB,GAArB,CAA1C;AACA,QAAMC,KAAK,GAAGrB,UAAU,CAACS,UAAD,CAAxB;AACAR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIoB,KAAK,GAAG,GAAZ,EAAiB;AACfH,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,KAFD,MAEO;AACLA,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,GANQ,EAMN,CAACG,KAAD,CANM,CAAT;AAOA,MAAI,CAACJ,SAAL,EACE,oBACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACA,SAAD,iBACC,oBAAC,WAAD;AAAa,IAAA,UAAU,EAAEI,KAAK,GAAC,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uFAFJ,CADF,eAME,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAE;AAACA,MAAAA,KAAK,EAAGA,KAAK,GAAG,IAAR,GAAe,KAAf,GAAuB;AAAhC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEN,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CAJF,CANF,CADF;AAiBF,SAAO,IAAP;AACD,CA7BD;;AA8BA,MAAMO,eAAe,GAAGX,wBAAwB,CAAC;AAC/CI,EAAAA,IAAI,EAAGL;AADwC,CAAD,CAAhD;;AAGA,MAAMa,kBAAkB,GAAGC,QAAQ,KAAK;AACtCR,EAAAA,MAAM,EAAG,MAAMQ,QAAQ,CAACX,WAAW,EAAZ;AADe,CAAL,CAAnC;;AAGA,eAAeD,OAAO,CAACU,eAAD,EAAiBC,kBAAjB,CAAP,CAA4CT,OAA5C,CAAf","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport {\n  ToolbarContainer,\n  ToolbarLeft,\n  ToolbarItem,\n  ToolbarRight,   \n} from \"./toolbar.styles\";\nimport ToggleLanguage from \"../../toggle-languages/toggle-languages.component\";\nimport ToggleUser from \"../../toggle-user/toggle-user.component\"\nimport AppContext from \"../../../../context/app-viewport.context\";\nimport {selectCurrentUser} from \"../../../../redux/user/user.selectors\"\nimport {createStructuredSelector} from \"reselect\";\nimport {connect} from \"react-redux\";\nimport {logoutStart} from \"../../../../redux/user/user.actions\";\nconst Toolbar = ({user,logout}) => {   \n  const [smallView, setSmallView] = useState(window.innerWidth < 992);\n  const width = useContext(AppContext);\n  useEffect(() => {\n    if (width < 992) {\n      setSmallView(true);\n    } else {\n      setSmallView(false);\n    }\n  }, [width]); \n  if (!smallView)\n    return (\n      <ToolbarContainer>\n        <ToolbarLeft>          \n          {!smallView && (\n            <ToolbarItem mediumView={width<1200}>Miễn phí vận chuyển cho đơn hàng từ 500.000</ToolbarItem>\n          )}\n        </ToolbarLeft>\n        <ToolbarRight>        \n          <ToolbarItem>\n            <ToggleLanguage />\n          </ToolbarItem>          \n          <ToolbarItem style={{width : width > 1200 ? \"30%\" : \"35%\"}}>            \n             <ToggleUser user={user}/>\n          </ToolbarItem>           \n        </ToolbarRight>\n      </ToolbarContainer>\n    );\n  return null;\n};\nconst mapStateToProps = createStructuredSelector({\n  user : selectCurrentUser\n})\nconst mapDispatchToProps = dispatch => ({\n  logout : () => dispatch(logoutStart())\n})\nexport default connect(mapStateToProps,mapDispatchToProps)(Toolbar);\n"]},"metadata":{},"sourceType":"module"}