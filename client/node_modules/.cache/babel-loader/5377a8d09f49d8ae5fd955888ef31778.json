{"ast":null,"code":"import CATEGORIES_DATA from \"../data/category\";\nimport PRODUCTS_DATA from \"../data/products\";\nimport SELLERS_DATA from \"../data/sellers\";\nexport const getLastestProducts = () => {\n  let sellers = [...SELLERS_DATA];\n  sellers.sort((a, b) => {\n    if (Date.parse(a.createdAt) > Date.parse(b.createdAt)) return -1;\n  });\n  let checkProductIsTheSame = {};\n  let j = 0;\n  let len = 6;\n\n  if (sellers.length <= 6) {\n    return sellers;\n  }\n\n  for (let i = 0; i < len; i++) {\n    if (checkProductIsTheSame[sellers[i]]) {\n      j++;\n      sellers[i] = sellers[len + j];\n      i--;\n    }\n  }\n};","map":{"version":3,"sources":["/home/mvt/Desktop/projects/mern-stack/e-commerce/src/utils/algorithms.js"],"names":["CATEGORIES_DATA","PRODUCTS_DATA","SELLERS_DATA","getLastestProducts","sellers","sort","a","b","Date","parse","createdAt","checkProductIsTheSame","j","len","length","i"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,kBAA5B;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AAEA,OAAO,MAAMC,kBAAkB,GAAG,MAAM;AACtC,MAAIC,OAAO,GAAG,CAAC,GAAGF,YAAJ,CAAd;AACAE,EAAAA,OAAO,CAACC,IAAR,CAAa,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACrB,QAAIC,IAAI,CAACC,KAAL,CAAWH,CAAC,CAACI,SAAb,IAA0BF,IAAI,CAACC,KAAL,CAAWF,CAAC,CAACG,SAAb,CAA9B,EAAuD,OAAO,CAAC,CAAR;AACxD,GAFD;AAGA,MAAIC,qBAAqB,GAAG,EAA5B;AACA,MAAIC,CAAC,GAAG,CAAR;AACA,MAAIC,GAAG,GAAG,CAAV;;AACA,MAAIT,OAAO,CAACU,MAAR,IAAkB,CAAtB,EAAyB;AACvB,WAAOV,OAAP;AACD;;AACD,OAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAApB,EAAyBE,CAAC,EAA1B,EAA8B;AAC5B,QAAIJ,qBAAqB,CAACP,OAAO,CAACW,CAAD,CAAR,CAAzB,EAAuC;AACrCH,MAAAA,CAAC;AACDR,MAAAA,OAAO,CAACW,CAAD,CAAP,GAAaX,OAAO,CAACS,GAAG,GAAGD,CAAP,CAApB;AACAG,MAAAA,CAAC;AACF;AACF;AACF,CAlBM","sourcesContent":["import CATEGORIES_DATA from \"../data/category\";\nimport PRODUCTS_DATA from \"../data/products\";\nimport SELLERS_DATA from \"../data/sellers\";\n\nexport const getLastestProducts = () => {\n  let sellers = [...SELLERS_DATA];\n  sellers.sort((a, b) => {\n    if (Date.parse(a.createdAt) > Date.parse(b.createdAt)) return -1;\n  });\n  let checkProductIsTheSame = {};\n  let j = 0;\n  let len = 6;\n  if (sellers.length <= 6) {\n    return sellers;\n  }\n  for (let i = 0; i < len; i++) {\n    if (checkProductIsTheSame[sellers[i]]) {\n      j++;\n      sellers[i] = sellers[len + j];\n      i--;\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}